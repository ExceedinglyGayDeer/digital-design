ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_1_BaseInit
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_1_BaseInit, %function
  25              	CapSense_1_BaseInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense_1_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * File Name: CapSense_1_CSHL.c
   3:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #include "CapSense_1_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData2[CapSense_1_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #elif ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)   | \
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 2


  31:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif  /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         *    (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorBaseline[CapSense_1_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorBaselineLow[CapSense_1_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorSignal[CapSense_1_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorOnMask[(((CapSense_1_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineResetCnt[CapSense_1_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     100u, 
  50:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     20u, 
  54:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, 
  58:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, 
  62:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, 
  66:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, /* LinearSlider0__LS */
  70:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  71:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  72:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  73:Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_numberOfSensors[] = {
  74:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     5u, /* LinearSlider0__LS */
  75:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  76:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  77:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  78:Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint16 CYCODE CapSense_1_centroidMult[] = {
  79:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     6400u, 
  80:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  81:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  82:Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_posFiltersMask[] = {
  83:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0x8u, 
  84:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  85:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  86:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_posFiltersData[] = {
  87:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, 0u, 0u, 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 3


  88:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  89:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  90:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  91:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  92:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  93:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
  94:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_BaseInit
  95:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  96:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  97:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
  98:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
  99:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal to raw count value. 
 100:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Resets to zero CapSense_1_sensorBaselineLow[sensor] and 
 101:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[sensor] array element.
 102:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads CapSense_1_debounceCounter[sensor] array element with initial 
 103:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  value equal CapSense_1_debounce[].
 104:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_rawFilterData2[sensor] and 
 105:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[sensor] array element with an 
 106:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 107:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 108:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 109:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 110:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 111:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 112:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 113:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 114:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 115:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 116:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 117:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 118:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 119:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 120:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 121:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 122:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 123:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 124:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 125:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 126:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 127:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 128:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 129:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 130:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 131:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 132:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 133:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_BaseInit(uint8 sensor) 
 134:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
  28              		.loc 1 134 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 135:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_TOTAL_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || \
 136:Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_TOTAL_GENERICS_COUNT))
 137:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 widget = CapSense_1_widgetNumber[sensor];
 138:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* ((CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 4


 139:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 140:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)
 141:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 debounceIndex;
 142:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) */
 143:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 144:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 145:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 146:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 147:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 148:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 149:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 150:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Initialize Baseline */
 151:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaseline[sensor] = CapSense_1_sensorRaw[sensor];
  34              		.loc 1 151 0
  35 0000 054B     		ldr	r3, .L2
  36 0002 33F81020 		ldrh	r2, [r3, r0, lsl #1]
  37 0006 054B     		ldr	r3, .L2+4
  38 0008 23F81020 		strh	r2, [r3, r0, lsl #1]	@ movhi
 152:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaselineLow[sensor] = 0u;
  39              		.loc 1 152 0
  40 000c 0023     		movs	r3, #0
  41 000e 044A     		ldr	r2, .L2+8
  42 0010 1354     		strb	r3, [r2, r0]
 153:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = 0u;
  43              		.loc 1 153 0
  44 0012 044A     		ldr	r2, .L2+12
  45 0014 1354     		strb	r3, [r2, r0]
  46 0016 7047     		bx	lr
  47              	.L3:
  48              		.align	2
  49              	.L2:
  50 0018 00000000 		.word	CapSense_1_sensorRaw
  51 001c 00000000 		.word	CapSense_1_sensorBaseline
  52 0020 00000000 		.word	CapSense_1_sensorBaselineLow
  53 0024 00000000 		.word	CapSense_1_sensorSignal
  54              		.cfi_endproc
  55              	.LFE0:
  56              		.size	CapSense_1_BaseInit, .-CapSense_1_BaseInit
  57              		.section	.text.CapSense_1_InitializeSensorBaseline,"ax",%progbits
  58              		.align	2
  59              		.global	CapSense_1_InitializeSensorBaseline
  60              		.thumb
  61              		.thumb_func
  62              		.type	CapSense_1_InitializeSensorBaseline, %function
  63              	CapSense_1_InitializeSensorBaseline:
  64              	.LFB1:
 154:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 155:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 156:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 157:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) |\
 158:Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 159:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 160:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 161:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_sensorRaw[sensor];
 162:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 163:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif ((CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) |\
 164:Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) |\
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 5


 165:Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) |\
 166:Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER) |\
 167:Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
 168:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 169:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 170:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 171:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 172:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 173:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
 174:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             *   (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 175:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             */
 176:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 177:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 178:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 179:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 180:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 181:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 182:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 183:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 184:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 185:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeSensorBaseline
 186:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 187:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 188:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 189:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 190:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 191:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 192:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 193:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  enabled.
 194:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 195:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 196:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 197:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 198:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 199:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 200:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 201:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 202:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 203:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 204:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 205:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeSensorBaseline(uint8 sensor)
 206:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 207:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
  65              		.loc 1 207 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL1:
  70 0000 10B5     		push	{r4, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
  74 0002 0446     		mov	r4, r0
 208:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Scan sensor */
 209:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanSensor(sensor);
  75              		.loc 1 209 0
  76 0004 FFF7FEFF 		bl	CapSense_1_ScanSensor
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 6


  77              	.LVL2:
  78              	.L5:
 210:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
  79              		.loc 1 210 0 discriminator 1
  80 0008 FFF7FEFF 		bl	CapSense_1_IsBusy
  81              	.LVL3:
  82 000c 0028     		cmp	r0, #0
  83 000e FBD1     		bne	.L5
 211:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 212:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 213:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 214:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 215:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN)
 216:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 217:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(sensor);
  84              		.loc 1 217 0
  85 0010 2046     		mov	r0, r4
  86 0012 FFF7FEFF 		bl	CapSense_1_BaseInit
  87              	.LVL4:
  88 0016 10BD     		pop	{r4, pc}
  89              		.cfi_endproc
  90              	.LFE1:
  91              		.size	CapSense_1_InitializeSensorBaseline, .-CapSense_1_InitializeSensorBaseline
  92              		.section	.text.CapSense_1_InitializeAllBaselines,"ax",%progbits
  93              		.align	2
  94              		.global	CapSense_1_InitializeAllBaselines
  95              		.thumb
  96              		.thumb_func
  97              		.type	CapSense_1_InitializeAllBaselines, %function
  98              	CapSense_1_InitializeAllBaselines:
  99              	.LFB2:
 218:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 219:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 220:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 221:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH0)
 222:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 223:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 224:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 225:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 226:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 227:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH1)
 228:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 229:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 230:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor + CapSense_1_TOTAL_SENSOR_COUNT__CH0);
 231:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 232:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 233:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN) */
 234:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 235:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 236:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 237:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 238:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeAllBaselines
 239:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 240:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 241:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 242:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Uses the CapSense_1_InitializeSensorBaseline function to loads the 
 243:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] array with an initial values by scanning 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 7


 244:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 245:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 246:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 247:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 248:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 249:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 250:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 251:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 252:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 253:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 254:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 255:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 256:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 257:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeAllBaselines(void)
 258:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 259:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 100              		.loc 1 259 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104 0000 10B5     		push	{r4, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 4, -8
 107              		.cfi_offset 14, -4
 108              	.LVL5:
 260:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 261:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 262:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 263:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 109              		.loc 1 263 0
 110 0002 0024     		movs	r4, #0
 111 0004 04E0     		b	.L8
 112              	.LVL6:
 113              	.L9:
 264:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 265:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_InitializeSensorBaseline(i);
 114              		.loc 1 265 0 discriminator 3
 115 0006 2046     		mov	r0, r4
 116 0008 FFF7FEFF 		bl	CapSense_1_InitializeSensorBaseline
 117              	.LVL7:
 263:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 118              		.loc 1 263 0 discriminator 3
 119 000c 0134     		adds	r4, r4, #1
 120              	.LVL8:
 121 000e E4B2     		uxtb	r4, r4
 122              	.LVL9:
 123              	.L8:
 263:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 124              		.loc 1 263 0 is_stmt 0 discriminator 1
 125 0010 042C     		cmp	r4, #4
 126 0012 F8D9     		bls	.L9
 266:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 267:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 127              		.loc 1 267 0 is_stmt 1
 128 0014 10BD     		pop	{r4, pc}
 129              		.cfi_endproc
 130              	.LFE2:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 8


 131              		.size	CapSense_1_InitializeAllBaselines, .-CapSense_1_InitializeAllBaselines
 132 0016 00BF     		.section	.text.CapSense_1_InitializeEnabledBaselines,"ax",%progbits
 133              		.align	2
 134              		.global	CapSense_1_InitializeEnabledBaselines
 135              		.thumb
 136              		.thumb_func
 137              		.type	CapSense_1_InitializeEnabledBaselines, %function
 138              	CapSense_1_InitializeEnabledBaselines:
 139              	.LFB3:
 268:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 269:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 270:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 271:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeEnabledBaselines
 272:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 273:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 274:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 275:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 276:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 277:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 278:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The raw data filters are initialized if enabled.
 279:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 280:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 281:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 282:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 283:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 284:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 285:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 286:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 287:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 288:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 289:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeEnabledBaselines(void)
 291:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              
 292:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 140              		.loc 1 292 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 10B5     		push	{r4, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 4, -8
 147              		.cfi_offset 14, -4
 293:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 294:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 295:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 296:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 297:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanEnabledWidgets();
 148              		.loc 1 297 0
 149 0002 FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
 150              	.LVL10:
 151              	.L12:
 298:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 152              		.loc 1 298 0 discriminator 1
 153 0006 FFF7FEFF 		bl	CapSense_1_IsBusy
 154              	.LVL11:
 155 000a 0028     		cmp	r0, #0
 156 000c FBD1     		bne	.L12
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 9


 157 000e 0024     		movs	r4, #0
 158 0010 11E0     		b	.L13
 159              	.LVL12:
 160              	.L15:
 299:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 300:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 301:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 302:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 303:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 304:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 305:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 161              		.loc 1 305 0
 162 0012 E208     		lsrs	r2, r4, #3
 306:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 163              		.loc 1 306 0
 164 0014 04F00701 		and	r1, r4, #7
 165 0018 0123     		movs	r3, #1
 166 001a 8B40     		lsls	r3, r3, r1
 167              	.LVL13:
 307:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 308:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 309:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) == 0u)
 168              		.loc 1 309 0
 169 001c 0749     		ldr	r1, .L17
 170 001e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 171 0020 1342     		tst	r3, r2
 172 0022 03D1     		bne	.L14
 310:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 311:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorRaw[i] = 0u;
 173              		.loc 1 311 0
 174 0024 0022     		movs	r2, #0
 175 0026 064B     		ldr	r3, .L17+4
 176              	.LVL14:
 177 0028 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 178              	.L14:
 312:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 313:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 314:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize baselines */
 315:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(i);
 179              		.loc 1 315 0 discriminator 2
 180 002c 2046     		mov	r0, r4
 181 002e FFF7FEFF 		bl	CapSense_1_BaseInit
 182              	.LVL15:
 303:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 183              		.loc 1 303 0 discriminator 2
 184 0032 0134     		adds	r4, r4, #1
 185              	.LVL16:
 186 0034 E4B2     		uxtb	r4, r4
 187              	.LVL17:
 188              	.L13:
 303:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 189              		.loc 1 303 0 is_stmt 0 discriminator 1
 190 0036 042C     		cmp	r4, #4
 191 0038 EBD9     		bls	.L15
 316:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 317:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }  
 192              		.loc 1 317 0 is_stmt 1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 10


 193 003a 10BD     		pop	{r4, pc}
 194              	.LVL18:
 195              	.L18:
 196              		.align	2
 197              	.L17:
 198 003c 00000000 		.word	CapSense_1_sensorEnableMask
 199 0040 00000000 		.word	CapSense_1_sensorRaw
 200              		.cfi_endproc
 201              	.LFE3:
 202              		.size	CapSense_1_InitializeEnabledBaselines, .-CapSense_1_InitializeEnabledBaselines
 203              		.section	.text.CapSense_1_UpdateSensorBaseline,"ax",%progbits
 204              		.align	2
 205              		.global	CapSense_1_UpdateSensorBaseline
 206              		.thumb
 207              		.thumb_func
 208              		.type	CapSense_1_UpdateSensorBaseline, %function
 209              	CapSense_1_UpdateSensorBaseline:
 210              	.LFB4:
 318:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 319:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 320:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 321:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateSensorBaseline
 322:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 323:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 324:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 325:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the 
 326:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 327:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 328:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  it in CapSense_1_SensorSignal[sensor]. 
 329:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 330:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 331:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 332:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  that noise threshold.
 333:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 334:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  calculation.
 335:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 336:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 337:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 338:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 339:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 340:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 341:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 342:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 343:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 344:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 345:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 346:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 347:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 348:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 349:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 350:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 351:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 352:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 353:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 354:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 355:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 356:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 11


 357:Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateSensorBaseline(uint8 sensor)
 358:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 359:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 211              		.loc 1 359 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL19:
 216 0000 70B5     		push	{r4, r5, r6, lr}
 217              		.cfi_def_cfa_offset 16
 218              		.cfi_offset 4, -16
 219              		.cfi_offset 5, -12
 220              		.cfi_offset 6, -8
 221              		.cfi_offset 14, -4
 222 0002 0446     		mov	r4, r0
 223              	.LVL20:
 360:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint32 calc;
 361:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 tempRaw;
 362:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 filteredRawData;
 363:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 364:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 noiseThreshold = CapSense_1_noiseThreshold[widget];
 365:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 366:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 367:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 368:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 369:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 370:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 371:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 372:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     filteredRawData = CapSense_1_sensorRaw[sensor];
 224              		.loc 1 372 0
 225 0004 224B     		ldr	r3, .L30
 226 0006 33F81030 		ldrh	r3, [r3, r0, lsl #1]
 227              	.LVL21:
 373:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 374:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)
 375:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 376:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_MedianFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 377:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                         CapSense_1_rawFilterData2[sensor]);
 378:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 379:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 380:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 381:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)
 382:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 383:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_AveragingFilter(filteredRawData, CapSense_1_rawFilterData1[sen
 384:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                            CapSense_1_rawFilterData2[sensor]);
 385:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 386:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 387:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 388:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)
 389:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR2Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 390:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 391:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 392:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)
 393:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR4Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 394:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 395:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 396:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 12


 397:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_JitterFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 398:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 399:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 400:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)
 401:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR8Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 402:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 403:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 404:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)
 405:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR16Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]
 406:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 407:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 408:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 409:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 410:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) */
 411:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 412:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING)
 413:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_CalculateThresholds(sensor);
 414:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING) */
 415:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 416:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 417:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Baseline calculation */
 418:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 419:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if(filteredRawData >= CapSense_1_sensorBaseline[sensor])
 228              		.loc 1 419 0
 229 000a 224A     		ldr	r2, .L30+4
 230 000c 32F81010 		ldrh	r1, [r2, r0, lsl #1]
 231 0010 8B42     		cmp	r3, r1
 232 0012 03D3     		bcc	.L20
 420:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 421:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData - CapSense_1_sensorBaseline[sensor];
 233              		.loc 1 421 0
 234 0014 5D1A     		subs	r5, r3, r1
 235 0016 ADB2     		uxth	r5, r5
 236              	.LVL22:
 422:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 237              		.loc 1 422 0
 238 0018 0126     		movs	r6, #1
 239 001a 02E0     		b	.L21
 240              	.LVL23:
 241              	.L20:
 423:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 424:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 425:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 426:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = CapSense_1_sensorBaseline[sensor] - filteredRawData;
 242              		.loc 1 426 0
 243 001c CD1A     		subs	r5, r1, r3
 244 001e ADB2     		uxth	r5, r5
 245              	.LVL24:
 427:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 246              		.loc 1 427 0
 247 0020 0026     		movs	r6, #0
 248              	.LVL25:
 249              	.L21:
 428:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 429:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 430:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 250              		.loc 1 430 0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 13


 251 0022 86B9     		cbnz	r6, .L22
 252              		.loc 1 430 0 is_stmt 0 discriminator 1
 253 0024 142D     		cmp	r5, #20
 254 0026 0ED9     		bls	.L22
 431:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 432:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_LOW_BASELINE_RESET)
 255              		.loc 1 432 0 is_stmt 1
 256 0028 1B4B     		ldr	r3, .L30+8
 257              	.LVL26:
 258 002a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 259 002c 042B     		cmp	r3, #4
 260 002e 06D9     		bls	.L23
 433:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 434:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 261              		.loc 1 434 0
 262 0030 2046     		mov	r0, r4
 263              	.LVL27:
 264 0032 FFF7FEFF 		bl	CapSense_1_BaseInit
 265              	.LVL28:
 435:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 266              		.loc 1 435 0
 267 0036 0022     		movs	r2, #0
 268 0038 174B     		ldr	r3, .L30+8
 269 003a 1A55     		strb	r2, [r3, r4]
 270 003c 17E0     		b	.L24
 271              	.LVL29:
 272              	.L23:
 436:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 437:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 438:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 439:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor]++;
 273              		.loc 1 439 0
 274 003e 0133     		adds	r3, r3, #1
 275 0040 154A     		ldr	r2, .L30+8
 276 0042 1355     		strb	r3, [r2, r4]
 277 0044 13E0     		b	.L24
 278              	.LVL30:
 279              	.L22:
 440:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 441:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 442:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 443:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 444:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 445:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 446:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 280              		.loc 1 446 0
 281 0046 142D     		cmp	r5, #20
 282 0048 02D9     		bls	.L25
 283              		.loc 1 446 0 is_stmt 0 discriminator 1
 284 004a 132D     		cmp	r5, #19
 285 004c 0FD8     		bhi	.L24
 447:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 448:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                    && (widget == 0u)))
 286              		.loc 1 448 0 is_stmt 1
 287 004e 76B9     		cbnz	r6, .L24
 288              	.L25:
 289              	.LVL31:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 14


 449:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 450:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 451:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make full Baseline 23 bits */
 452:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc = (uint32) CapSense_1_sensorBaseline[sensor] << 8u;
 453:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc |= (uint32) CapSense_1_sensorBaselineLow[sensor];
 290              		.loc 1 453 0
 291 0050 1248     		ldr	r0, .L30+12
 292              	.LVL32:
 293 0052 025D     		ldrb	r2, [r0, r4]	@ zero_extendqisi2
 294 0054 42EA0122 		orr	r2, r2, r1, lsl #8
 295              	.LVL33:
 454:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 455:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Add Raw Data to Baseline */
 456:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc += filteredRawData;
 296              		.loc 1 456 0
 297 0058 1344     		add	r3, r3, r2
 298              	.LVL34:
 457:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 458:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Sub the high Baseline */
 459:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc -= CapSense_1_sensorBaseline[sensor];
 299              		.loc 1 459 0
 300 005a 5B1A     		subs	r3, r3, r1
 301              	.LVL35:
 460:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 461:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Put Baseline and BaselineLow */
 462:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 302              		.loc 1 462 0
 303 005c C3F30F21 		ubfx	r1, r3, #8, #16
 304 0060 0C4A     		ldr	r2, .L30+4
 305 0062 22F81410 		strh	r1, [r2, r4, lsl #1]	@ movhi
 463:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 306              		.loc 1 463 0
 307 0066 0355     		strb	r3, [r0, r4]
 464:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 465:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 308              		.loc 1 465 0
 309 0068 0022     		movs	r2, #0
 310 006a 0B4B     		ldr	r3, .L30+8
 311              	.LVL36:
 312 006c 1A55     		strb	r2, [r3, r4]
 313              	.LVL37:
 314              	.L24:
 466:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 467:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 468:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 469:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 470:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 471:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 472:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 315              		.loc 1 472 0
 316 006e 142D     		cmp	r5, #20
 317 0070 09D9     		bls	.L26
 318              		.loc 1 472 0 is_stmt 0 discriminator 1
 319 0072 46B1     		cbz	r6, .L26
 473:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 474:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8)
 475:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Over flow defence for uint8 */
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 15


 476:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 320              		.loc 1 476 0 is_stmt 1
 321 0074 FF2D     		cmp	r5, #255
 322 0076 03D9     		bls	.L27
 477:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 478:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = 0xFFu;
 323              		.loc 1 478 0
 324 0078 FF22     		movs	r2, #255
 325 007a 094B     		ldr	r3, .L30+16
 326 007c 1A55     		strb	r2, [r3, r4]
 327 007e 70BD     		pop	{r4, r5, r6, pc}
 328              	.LVL38:
 329              	.L27:
 479:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 480:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else 
 481:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 482:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = ((uint8) tempRaw);
 330              		.loc 1 482 0
 331 0080 074B     		ldr	r3, .L30+16
 332 0082 1D55     		strb	r5, [r3, r4]
 333 0084 70BD     		pop	{r4, r5, r6, pc}
 334              	.LVL39:
 335              	.L26:
 483:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 484:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 485:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorSignal[sensor] = ((uint16) tempRaw);
 486:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8) */
 487:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 488:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 489:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 490:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Signal is zero */
 491:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorSignal[sensor] = 0u;
 336              		.loc 1 491 0
 337 0086 0022     		movs	r2, #0
 338 0088 054B     		ldr	r3, .L30+16
 339 008a 1A55     		strb	r2, [r3, r4]
 340 008c 70BD     		pop	{r4, r5, r6, pc}
 341              	.LVL40:
 342              	.L31:
 343 008e 00BF     		.align	2
 344              	.L30:
 345 0090 00000000 		.word	CapSense_1_sensorRaw
 346 0094 00000000 		.word	CapSense_1_sensorBaseline
 347 0098 00000000 		.word	CapSense_1_lowBaselineResetCnt
 348 009c 00000000 		.word	CapSense_1_sensorBaselineLow
 349 00a0 00000000 		.word	CapSense_1_sensorSignal
 350              		.cfi_endproc
 351              	.LFE4:
 352              		.size	CapSense_1_UpdateSensorBaseline, .-CapSense_1_UpdateSensorBaseline
 353              		.section	.text.CapSense_1_UpdateEnabledBaselines,"ax",%progbits
 354              		.align	2
 355              		.global	CapSense_1_UpdateEnabledBaselines
 356              		.thumb
 357              		.thumb_func
 358              		.type	CapSense_1_UpdateEnabledBaselines, %function
 359              	CapSense_1_UpdateEnabledBaselines:
 360              	.LFB5:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 16


 492:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 493:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 494:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 495:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 496:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 497:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 498:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 499:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 500:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 501:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 502:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateEnabledBaselines
 503:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 504:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 505:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 506:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the 
 507:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines 
 508:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  for enabled sensors.
 509:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 510:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 511:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 512:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 513:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 514:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 515:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 516:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 517:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 518:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 519:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 520:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 521:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 522:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 523:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 524:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 525:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 526:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 527:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 528:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 529:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 530:Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateEnabledBaselines(void)
 531:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 532:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 361              		.loc 1 532 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 10B5     		push	{r4, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
 369              	.LVL41:
 533:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 534:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 535:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 536:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 537:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 370              		.loc 1 537 0
 371 0002 0024     		movs	r4, #0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 17


 372 0004 0DE0     		b	.L33
 373              	.LVL42:
 374              	.L35:
 538:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 539:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 375              		.loc 1 539 0
 376 0006 E208     		lsrs	r2, r4, #3
 540:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 377              		.loc 1 540 0
 378 0008 04F00701 		and	r1, r4, #7
 379 000c 0123     		movs	r3, #1
 380 000e 8B40     		lsls	r3, r3, r1
 381              	.LVL43:
 541:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 382              		.loc 1 541 0
 383 0010 0549     		ldr	r1, .L37
 384 0012 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 385 0014 1342     		tst	r3, r2
 386 0016 02D0     		beq	.L34
 542:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 543:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 387              		.loc 1 543 0
 388 0018 2046     		mov	r0, r4
 389 001a FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 390              	.LVL44:
 391              	.L34:
 537:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 392              		.loc 1 537 0 discriminator 2
 393 001e 0134     		adds	r4, r4, #1
 394              	.LVL45:
 395 0020 E4B2     		uxtb	r4, r4
 396              	.LVL46:
 397              	.L33:
 537:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 398              		.loc 1 537 0 is_stmt 0 discriminator 1
 399 0022 042C     		cmp	r4, #4
 400 0024 EFD9     		bls	.L35
 544:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 545:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 546:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 401              		.loc 1 546 0 is_stmt 1
 402 0026 10BD     		pop	{r4, pc}
 403              	.LVL47:
 404              	.L38:
 405              		.align	2
 406              	.L37:
 407 0028 00000000 		.word	CapSense_1_sensorEnableMask
 408              		.cfi_endproc
 409              	.LFE5:
 410              		.size	CapSense_1_UpdateEnabledBaselines, .-CapSense_1_UpdateEnabledBaselines
 411              		.section	.text.CapSense_1_CheckIsSensorActive,"ax",%progbits
 412              		.align	2
 413              		.global	CapSense_1_CheckIsSensorActive
 414              		.thumb
 415              		.thumb_func
 416              		.type	CapSense_1_CheckIsSensorActive, %function
 417              	CapSense_1_CheckIsSensorActive:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 18


 418              	.LFB6:
 547:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 548:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 549:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 550:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsSensorActive
 551:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 552:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 553:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 554:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares the CapSense_1_SensorSignal[sensor] array element to finger
 555:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 556:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 557:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  based on whether the sensor is currently active. 
 558:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 559:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 560:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The debounce counter added to the sensor active transition.
 561:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This function updates CapSense_1_SensorOnMask[] array element.
 562:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 563:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 564:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 565:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 566:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 567:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 568:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 569:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 570:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 571:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 572:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 573:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 574:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 575:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 576:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] - used to store sensors on/off state.
 577:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[0] contains the masked bits for sensors 
 578:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 579:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 580:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 581:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor is inactive.
 582:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor is active.
 583:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 584:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 585:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 586:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 587:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 588:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsSensorActive(uint8 sensor)
 589:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                   
 590:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 419              		.loc 1 590 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424              	.LVL48:
 425 0000 10B4     		push	{r4}
 426              		.cfi_def_cfa_offset 4
 427              		.cfi_offset 4, -4
 591:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounceIndex;
 592:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Get On/Off mask */
 593:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos = (sensor >> 3u);
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 19


 428              		.loc 1 593 0
 429 0002 C208     		lsrs	r2, r0, #3
 430              	.LVL49:
 594:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 431              		.loc 1 594 0
 432 0004 00F00703 		and	r3, r0, #7
 433 0008 0121     		movs	r1, #1
 434 000a 01FA03F3 		lsl	r3, r1, r3
 435 000e DBB2     		uxtb	r3, r3
 436              	.LVL50:
 595:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Prepare to find debounce counter index */
 596:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 597:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 fingerThreshold = CapSense_1_fingerThreshold[widget];
 598:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 hysteresis = CapSense_1_hysteresis[widget];
 599:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounce = CapSense_1_debounce[widget];
 600:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 601:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     debounceIndex = CapSense_1_UNUSED_DEBOUNCE_COUNTER_INDEX;
 602:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_debounceCounter[debounceIndex] = 1u;
 437              		.loc 1 602 0
 438 0010 0F4C     		ldr	r4, .L44
 439 0012 2170     		strb	r1, [r4]
 603:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 604:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 605:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Was on */
 606:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if (0u != (CapSense_1_sensorOnMask[pos] & onMask))
 440              		.loc 1 606 0
 441 0014 0F49     		ldr	r1, .L44+4
 442 0016 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 443 0018 0B42     		tst	r3, r1
 444 001a 08D0     		beq	.L40
 607:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 608:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis minus */
 609:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 445              		.loc 1 609 0
 446 001c 0E4C     		ldr	r4, .L44+8
 447 001e 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 448              	.LVL51:
 449 0020 6328     		cmp	r0, #99
 450 0022 0EDC     		bgt	.L41
 610:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 611:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorOnMask[pos] &= (uint8)~onMask;
 451              		.loc 1 611 0
 452 0024 21EA0301 		bic	r1, r1, r3
 453 0028 0A48     		ldr	r0, .L44+4
 454 002a 8154     		strb	r1, [r0, r2]
 455 002c 09E0     		b	.L41
 456              	.LVL52:
 457              	.L40:
 612:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce; 
 613:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 614:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 615:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else    /* Was off */
 616:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 617:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis plus */
 618:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 458              		.loc 1 618 0
 459 002e 0A4C     		ldr	r4, .L44+8
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 20


 460 0030 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 461              	.LVL53:
 462 0032 6428     		cmp	r0, #100
 463 0034 05DD     		ble	.L41
 619:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 620:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor active, decrement debounce counter */
 621:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (CapSense_1_debounceCounter[debounceIndex] <= 1u)
 622:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 623:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorOnMask[pos] |= onMask; 
 464              		.loc 1 623 0
 465 0036 1943     		orrs	r1, r1, r3
 466 0038 0648     		ldr	r0, .L44+4
 467 003a 8154     		strb	r1, [r0, r2]
 624:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 625:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex]--;
 468              		.loc 1 625 0
 469 003c 0020     		movs	r0, #0
 470 003e 0449     		ldr	r1, .L44
 471 0040 0870     		strb	r0, [r1]
 472              	.L41:
 626:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 627:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 628:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 629:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 630:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 631:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 632:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 633:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 634:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (((CapSense_1_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 473              		.loc 1 634 0
 474 0042 0449     		ldr	r1, .L44+4
 475 0044 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 476 0046 1840     		ands	r0, r3, r0
 477 0048 00D0     		beq	.L42
 478 004a 0120     		movs	r0, #1
 479              	.L42:
 635:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 480              		.loc 1 635 0 discriminator 4
 481 004c 10BC     		pop	{r4}
 482              		.cfi_restore 4
 483              		.cfi_def_cfa_offset 0
 484 004e 7047     		bx	lr
 485              	.L45:
 486              		.align	2
 487              	.L44:
 488 0050 00000000 		.word	.LANCHOR0
 489 0054 00000000 		.word	CapSense_1_sensorOnMask
 490 0058 00000000 		.word	CapSense_1_sensorSignal
 491              		.cfi_endproc
 492              	.LFE6:
 493              		.size	CapSense_1_CheckIsSensorActive, .-CapSense_1_CheckIsSensorActive
 494              		.section	.text.CapSense_1_CheckIsWidgetActive,"ax",%progbits
 495              		.align	2
 496              		.global	CapSense_1_CheckIsWidgetActive
 497              		.thumb
 498              		.thumb_func
 499              		.type	CapSense_1_CheckIsWidgetActive, %function
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 21


 500              	CapSense_1_CheckIsWidgetActive:
 501              	.LFB7:
 636:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 637:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 638:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 639:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsWidgetActive
 640:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 641:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 642:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 643:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Use function CapSense_1_CheckIsSensorActive() to update 
 644:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] for all sensors within the widget.
 645:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 646:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active.
 647:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 648:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  col and row to return widget active status.
 649:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 650:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 651:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 652:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 653:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 654:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 655:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 656:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 657:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 658:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 659:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 660:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 661:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsWidgetActive(uint8 widget)
 662:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 663:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 502              		.loc 1 663 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              	.LVL54:
 507 0000 38B5     		push	{r3, r4, r5, lr}
 508              		.cfi_def_cfa_offset 16
 509              		.cfi_offset 3, -16
 510              		.cfi_offset 4, -12
 511              		.cfi_offset 5, -8
 512              		.cfi_offset 14, -4
 513              	.LVL55:
 664:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 665:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 666:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 514              		.loc 1 666 0
 515 0002 0025     		movs	r5, #0
 664:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 516              		.loc 1 664 0
 517 0004 2C46     		mov	r4, r5
 518              	.LVL56:
 519              	.L48:
 667:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 668:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Check all sensors of the widget */
 669:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 670:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 671:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_CheckIsSensorActive(rawIndex) != 0u)
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 22


 520              		.loc 1 671 0
 521 0006 2046     		mov	r0, r4
 522 0008 FFF7FEFF 		bl	CapSense_1_CheckIsSensorActive
 523              	.LVL57:
 524 000c 00B1     		cbz	r0, .L47
 672:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 673:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_SENSOR_1_IS_ACTIVE;
 525              		.loc 1 673 0
 526 000e 0125     		movs	r5, #1
 527              	.LVL58:
 528              	.L47:
 674:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 675:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 529              		.loc 1 675 0
 530 0010 0134     		adds	r4, r4, #1
 531              	.LVL59:
 532 0012 E4B2     		uxtb	r4, r4
 533              	.LVL60:
 676:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 677:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 534              		.loc 1 677 0
 535 0014 042C     		cmp	r4, #4
 536 0016 F6D9     		bls	.L48
 678:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 679:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 680:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 681:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 682:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 537              		.loc 1 682 0
 538 0018 2846     		mov	r0, r5
 539 001a 38BD     		pop	{r3, r4, r5, pc}
 540              		.cfi_endproc
 541              	.LFE7:
 542              		.size	CapSense_1_CheckIsWidgetActive, .-CapSense_1_CheckIsWidgetActive
 543              		.section	.text.CapSense_1_CheckIsAnyWidgetActive,"ax",%progbits
 544              		.align	2
 545              		.global	CapSense_1_CheckIsAnyWidgetActive
 546              		.thumb
 547              		.thumb_func
 548              		.type	CapSense_1_CheckIsAnyWidgetActive, %function
 549              	CapSense_1_CheckIsAnyWidgetActive:
 550              	.LFB8:
 683:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 684:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 685:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 686:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsAnyWidgetActive
 687:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 688:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 689:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 690:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares all sensors of the CapSense_1_signal[] array to their finger 
 691:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold. Calls CapSense_1_CheckIsWidgetActive() for each widget so 
 692:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  the CapSense_1_SensorOnMask[] array is up to date after calling this 
 693:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  function.
 694:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 695:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 696:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 697:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 23


 698:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 699:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 700:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 701:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 702:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 703:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 704:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 705:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsAnyWidgetActive(void)
 706:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 707:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 551              		.loc 1 707 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555 0000 38B5     		push	{r3, r4, r5, lr}
 556              		.cfi_def_cfa_offset 16
 557              		.cfi_offset 3, -16
 558              		.cfi_offset 4, -12
 559              		.cfi_offset 5, -8
 560              		.cfi_offset 14, -4
 561              	.LVL61:
 708:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 709:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 562              		.loc 1 709 0
 563 0002 0025     		movs	r5, #0
 710:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 711:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 564              		.loc 1 711 0
 565 0004 2C46     		mov	r4, r5
 566 0006 06E0     		b	.L52
 567              	.LVL62:
 568              	.L54:
 712:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 713:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(i) != 0u)
 569              		.loc 1 713 0
 570 0008 2046     		mov	r0, r4
 571 000a FFF7FEFF 		bl	CapSense_1_CheckIsWidgetActive
 572              	.LVL63:
 573 000e 00B1     		cbz	r0, .L53
 714:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 715:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_WIDGET_IS_ACTIVE;
 574              		.loc 1 715 0
 575 0010 0125     		movs	r5, #1
 576              	.LVL64:
 577              	.L53:
 711:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 578              		.loc 1 711 0 discriminator 2
 579 0012 0134     		adds	r4, r4, #1
 580              	.LVL65:
 581 0014 E4B2     		uxtb	r4, r4
 582              	.LVL66:
 583              	.L52:
 711:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 584              		.loc 1 711 0 is_stmt 0 discriminator 1
 585 0016 002C     		cmp	r4, #0
 586 0018 F6D0     		beq	.L54
 716:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 24


 717:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 718:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 719:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 720:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 721:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 587              		.loc 1 721 0 is_stmt 1
 588 001a 2846     		mov	r0, r5
 589 001c 38BD     		pop	{r3, r4, r5, pc}
 590              		.cfi_endproc
 591              	.LFE8:
 592              		.size	CapSense_1_CheckIsAnyWidgetActive, .-CapSense_1_CheckIsAnyWidgetActive
 593 001e 00BF     		.section	.text.CapSense_1_EnableWidget,"ax",%progbits
 594              		.align	2
 595              		.global	CapSense_1_EnableWidget
 596              		.thumb
 597              		.thumb_func
 598              		.type	CapSense_1_EnableWidget, %function
 599              	CapSense_1_EnableWidget:
 600              	.LFB9:
 722:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 723:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 724:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 725:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_EnableWidget
 726:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 727:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 728:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 729:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 730:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 731:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 732:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 733:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 734:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 735:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 736:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 737:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 738:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 739:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 740:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 741:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 742:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 743:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 744:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 745:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 746:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 747:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 748:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 749:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 750:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 751:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_EnableWidget(uint8 widget)
 752:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    
 753:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 601              		.loc 1 753 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606              	.LVL67:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 25


 607 0000 10B4     		push	{r4}
 608              		.cfi_def_cfa_offset 4
 609              		.cfi_offset 4, -4
 610              	.LVL68:
 754:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 755:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 756:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 611              		.loc 1 756 0
 612 0002 0023     		movs	r3, #0
 613              	.LVL69:
 614              	.L58:
 757:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 758:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 759:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Enable all sensors of the widget */
 760:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 761:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 762:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 615              		.loc 1 762 0 discriminator 1
 616 0004 D808     		lsrs	r0, r3, #3
 617              	.LVL70:
 763:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 618              		.loc 1 763 0 discriminator 1
 619 0006 03F00701 		and	r1, r3, #7
 620 000a 0122     		movs	r2, #1
 621 000c 8A40     		lsls	r2, r2, r1
 622 000e D2B2     		uxtb	r2, r2
 623              	.LVL71:
 764:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 765:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] |= enMask;
 624              		.loc 1 765 0 discriminator 1
 625 0010 044C     		ldr	r4, .L60
 626 0012 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 627 0014 0A43     		orrs	r2, r2, r1
 628              	.LVL72:
 629 0016 2254     		strb	r2, [r4, r0]
 766:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 630              		.loc 1 766 0 discriminator 1
 631 0018 0133     		adds	r3, r3, #1
 632              	.LVL73:
 633 001a DBB2     		uxtb	r3, r3
 634              	.LVL74:
 767:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 768:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 635              		.loc 1 768 0 discriminator 1
 636 001c 042B     		cmp	r3, #4
 637 001e F1D9     		bls	.L58
 769:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 770:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 771:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 638              		.loc 1 771 0
 639 0020 10BC     		pop	{r4}
 640              		.cfi_restore 4
 641              		.cfi_def_cfa_offset 0
 642 0022 7047     		bx	lr
 643              	.L61:
 644              		.align	2
 645              	.L60:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 26


 646 0024 00000000 		.word	CapSense_1_sensorEnableMask
 647              		.cfi_endproc
 648              	.LFE9:
 649              		.size	CapSense_1_EnableWidget, .-CapSense_1_EnableWidget
 650              		.section	.text.CapSense_1_DisableWidget,"ax",%progbits
 651              		.align	2
 652              		.global	CapSense_1_DisableWidget
 653              		.thumb
 654              		.thumb_func
 655              		.type	CapSense_1_DisableWidget, %function
 656              	CapSense_1_DisableWidget:
 657              	.LFB10:
 772:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 773:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 774:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 775:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_DisableWidget
 776:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 777:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 778:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 779:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 780:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 781:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 782:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 783:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 784:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 785:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 786:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 787:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 788:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 789:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 790:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 791:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 792:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 793:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 794:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 795:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 796:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 797:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 798:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 799:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 800:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 801:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_DisableWidget(uint8 widget)
 802:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
 803:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 658              		.loc 1 803 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663              	.LVL75:
 664 0000 10B4     		push	{r4}
 665              		.cfi_def_cfa_offset 4
 666              		.cfi_offset 4, -4
 667              	.LVL76:
 804:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 805:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 806:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 27


 668              		.loc 1 806 0
 669 0002 0023     		movs	r3, #0
 670              	.LVL77:
 671              	.L63:
 807:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 808:Generated_Source\PSoC5/CapSense_1_CSHL.c ****    
 809:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Disable all sensors of the widget */
 810:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 811:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 812:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 672              		.loc 1 812 0 discriminator 1
 673 0004 D808     		lsrs	r0, r3, #3
 674              	.LVL78:
 813:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 675              		.loc 1 813 0 discriminator 1
 676 0006 03F00701 		and	r1, r3, #7
 677 000a 0122     		movs	r2, #1
 678 000c 8A40     		lsls	r2, r2, r1
 679 000e D2B2     		uxtb	r2, r2
 680              	.LVL79:
 814:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 815:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] &= (uint8)~enMask;
 681              		.loc 1 815 0 discriminator 1
 682 0010 054C     		ldr	r4, .L65
 683 0012 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 684 0014 21EA0202 		bic	r2, r1, r2
 685              	.LVL80:
 686 0018 2254     		strb	r2, [r4, r0]
 816:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 687              		.loc 1 816 0 discriminator 1
 688 001a 0133     		adds	r3, r3, #1
 689              	.LVL81:
 690 001c DBB2     		uxtb	r3, r3
 691              	.LVL82:
 817:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 818:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 692              		.loc 1 818 0 discriminator 1
 693 001e 042B     		cmp	r3, #4
 694 0020 F0D9     		bls	.L63
 819:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 820:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 821:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 695              		.loc 1 821 0
 696 0022 10BC     		pop	{r4}
 697              		.cfi_restore 4
 698              		.cfi_def_cfa_offset 0
 699 0024 7047     		bx	lr
 700              	.L66:
 701 0026 00BF     		.align	2
 702              	.L65:
 703 0028 00000000 		.word	CapSense_1_sensorEnableMask
 704              		.cfi_endproc
 705              	.LFE10:
 706              		.size	CapSense_1_DisableWidget, .-CapSense_1_DisableWidget
 707              		.section	.text.CapSense_1_FindMaximum,"ax",%progbits
 708              		.align	2
 709              		.global	CapSense_1_FindMaximum
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 28


 710              		.thumb
 711              		.thumb_func
 712              		.type	CapSense_1_FindMaximum, %function
 713              	CapSense_1_FindMaximum:
 714              	.LFB11:
 822:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_CENTROIDS_COUNT)
 823:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 824:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_FindMaximum
 825:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 826:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 827:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 828:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 829:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense_1_SensorSignal[] within defined cenrtoid and 
 830:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 831:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  ignored.
 832:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 833:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 834:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 835:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 836:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 837:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_1_sensorSignal[] array.
 838:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:   number of elements within centroid.
 839:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 840:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:   pointer to diplex table.
 841:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 842:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 843:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 844:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 845:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 846:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 847:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_IS_DIPLEX_SLIDER)
 848:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 
 849:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 850:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else 
 851:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 852:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 853:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 854:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 715              		.loc 1 854 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL83:
 721 0000 70B4     		push	{r4, r5, r6}
 722              		.cfi_def_cfa_offset 12
 723              		.cfi_offset 4, -12
 724              		.cfi_offset 5, -8
 725              		.cfi_offset 6, -4
 726              	.LVL84:
 855:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 i;
 856:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 857:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curPos = 0u;
 858:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* No centroid at the Start */
 859:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCntrdSize = 0u;
 860:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 861:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The biggset centroid is zero */
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 29


 862:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 863:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 864:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 865:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum = 0xFFu;
 866:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 temp = 0u;
 867:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset]; 
 727              		.loc 1 867 0
 728 0002 094D     		ldr	r5, .L73
 729 0004 0544     		add	r5, r5, r0
 730              	.LVL85:
 866:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset]; 
 731              		.loc 1 866 0
 732 0006 0026     		movs	r6, #0
 865:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 temp = 0u;
 733              		.loc 1 865 0
 734 0008 FF20     		movs	r0, #255
 735              	.LVL86:
 868:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 869:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 870:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(diplex != 0u)
 871:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 872:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Initialize */
 873:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 i = 0u;
 874:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
 875:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make slider x2 as Diplexed */
 876:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count <<= 1u;
 877:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 while(1u)
 878:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
 879:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 880:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 881:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 882:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 883:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Start of centroid */
 884:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = i;
 885:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 886:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 887:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
 888:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 889:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 890:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 891:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 892:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 893:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {          
 894:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(curCntrdSize > 0u)
 895:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 896:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* We are in the end of current */
 897:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 898:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 899:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 900:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 901:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 902:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
 903:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize = 0u;
 904:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 905:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 906:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 907:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 30


 908:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     i++; 
 909:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     curPos = diplex[i];
 910:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(i == count)
 911:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 912:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         break;
 913:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }            
 914:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 915:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 916:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 917:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                        We are in the end of current */
 918:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 919:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 920:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 921:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 922:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 923:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 924:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
 925:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 926:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Without diplexing */ 
 927:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 biggestCtrdSize = count;
 928:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 929:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
 930:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 931:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Check centroid size */
 932:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_NON_DIPLEX_SLIDER)
 933:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 934:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else                    
 935:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 936:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_NON_DIPLEX_SLIDER) */
 937:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 938:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 939:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 940:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)
 941:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (diplex == 0u)
 942:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 943:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = i;
 944:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 945:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             else
 946:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 947:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = diplex[i];
 948:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                    
 949:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #elif (CapSense_1_IS_DIPLEX_SLIDER)                    
 950:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curPos = diplex[i];                    
 951:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) 
 952:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Looking for the grater element within centroid */
 953:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 954:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 955:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 956:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 957:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 maximum = i;
 958:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 temp = startOfSlider[curPos];
 959:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 960:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 961:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 962:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 } 
 963:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 964:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 31


 736              		.loc 1 964 0
 737 000a 3346     		mov	r3, r6
 738 000c 08E0     		b	.L68
 739              	.LVL87:
 740              	.L70:
 965:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 966:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Looking for the grater element within centroid */
 967:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 741              		.loc 1 967 0
 742 000e EC5C     		ldrb	r4, [r5, r3]	@ zero_extendqisi2
 743 0010 9442     		cmp	r4, r2
 744 0012 03D9     		bls	.L69
 968:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 969:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(startOfSlider[i] > temp)
 745              		.loc 1 969 0
 746 0014 A642     		cmp	r6, r4
 747 0016 01D2     		bcs	.L69
 970:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 971:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         maximum = i;
 972:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         temp = startOfSlider[i];
 748              		.loc 1 972 0
 749 0018 2646     		mov	r6, r4
 750              	.LVL88:
 971:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         temp = startOfSlider[i];
 751              		.loc 1 971 0
 752 001a 1846     		mov	r0, r3
 753              	.LVL89:
 754              	.L69:
 964:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 755              		.loc 1 964 0 discriminator 2
 756 001c 0133     		adds	r3, r3, #1
 757              	.LVL90:
 758 001e DBB2     		uxtb	r3, r3
 759              	.LVL91:
 760              	.L68:
 964:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 761              		.loc 1 964 0 is_stmt 0 discriminator 1
 762 0020 8B42     		cmp	r3, r1
 763 0022 F4D3     		bcc	.L70
 973:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 974:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 975:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 976:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 977:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (maximum);
 978:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 764              		.loc 1 978 0 is_stmt 1
 765 0024 70BC     		pop	{r4, r5, r6}
 766              		.cfi_restore 6
 767              		.cfi_restore 5
 768              		.cfi_restore 4
 769              		.cfi_def_cfa_offset 0
 770              	.LVL92:
 771 0026 7047     		bx	lr
 772              	.L74:
 773              		.align	2
 774              	.L73:
 775 0028 00000000 		.word	CapSense_1_sensorSignal
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 32


 776              		.cfi_endproc
 777              	.LFE11:
 778              		.size	CapSense_1_FindMaximum, .-CapSense_1_FindMaximum
 779              		.section	.text.CapSense_1_CalcCentroid,"ax",%progbits
 780              		.align	2
 781              		.global	CapSense_1_CalcCentroid
 782              		.thumb
 783              		.thumb_func
 784              		.type	CapSense_1_CalcCentroid, %function
 785              	CapSense_1_CalcCentroid:
 786              	.LFB12:
 979:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 980:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 981:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 982:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_CalcCentroid
 983:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 984:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 985:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 986:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 987:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution.
 988:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 989:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 990:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  type:  widget type.
 991:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:  pointer to diplex table.
 992:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 993:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_1_SensorSignal[] array.
 994:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:    Number of elements within centroid.
 995:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 996:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  API resolution.
 997:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 998:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 999:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1000:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the slider.
1001:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1002:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1003:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1004:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1005:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1006:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1007:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset, 
1008:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1009:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
1010:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 787              		.loc 1 1010 0
 788              		.cfi_startproc
 789              		@ args = 4, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              	.LVL93:
 792 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 793              		.cfi_def_cfa_offset 20
 794              		.cfi_offset 4, -20
 795              		.cfi_offset 5, -16
 796              		.cfi_offset 6, -12
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 9DF81450 		ldrb	r5, [sp, #20]	@ zero_extendqisi2
 800              	.LVL94:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 33


1011:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0
1012:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posPrev = 0u;
1013:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posNext = 0u;
1014:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1015:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                
1016:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)                
1017:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 pos;
1018:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1019:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1020:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Helps while centroid calulation */
1021:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         static uint8 CapSense_1_centroid[3u];
1022:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1023:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 position;
1024:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 numerator;
1025:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         int32 denominator;
1026:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset];
 801              		.loc 1 1026 0
 802 0006 284C     		ldr	r4, .L86
 803 0008 2144     		add	r1, r1, r4
 804              	.LVL95:
1027:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1028:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1029:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(type == CapSense_1_TYPE_RADIAL_SLIDER)
1030:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1031:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1032:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1033:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1034:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1035:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1036:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  
1037:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for ROTARY Slider */
1038:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1039:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1040:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[count - 1u];
1041:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[1u];
1042:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1043:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1044:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1045:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1046:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[0u];
1047:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1048:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1049:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1050:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1051:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[maximum + 1u];
1052:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1053:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1054:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1055:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1056:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1057:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1058:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1059:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1060:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1061:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1062:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)               
1063:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 34


1064:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(diplex == 0u)
1065:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1066:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = maximum;
1067:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1068:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = maximum + 1u; 
1069:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1070:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1071:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1072:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = diplex[maximum];
1073:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1074:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = diplex[maximum + 1u];
1075:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         count <<= 1u;
1076:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }                    
1077:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #elif (CapSense_1_IS_DIPLEX_SLIDER)
1078:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1079:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     pos     = diplex[maximum];
1080:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1081:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = diplex[maximum + 1u];
1082:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     count <<= 1u;                    
1083:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else                    
1084:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1085:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (maximum >= 1u)
 805              		.loc 1 1085 0
 806 000a 0446     		mov	r4, r0
 807 000c 10B1     		cbz	r0, .L84
1086:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1087:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
 808              		.loc 1 1087 0
 809 000e 461E     		subs	r6, r0, #1
 810 0010 F6B2     		uxtb	r6, r6
 811              	.LVL96:
 812 0012 00E0     		b	.L76
 813              	.LVL97:
 814              	.L84:
1012:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posNext = 0u;
 815              		.loc 1 1012 0
 816 0014 0026     		movs	r6, #0
 817              	.LVL98:
 818              	.L76:
1088:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1089:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = maximum + 1u; 
 819              		.loc 1 1089 0
 820 0016 601C     		adds	r0, r4, #1
 821              	.LVL99:
 822 0018 C0B2     		uxtb	r0, r0
 823              	.LVL100:
1090:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) */
1091:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1092:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1093:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER)
1094:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[pos];
1095:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else
1096:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
 824              		.loc 1 1096 0
 825 001a 11F804E0 		ldrb	lr, [r1, r4]	@ zero_extendqisi2
 826 001e 234F     		ldr	r7, .L86+4
 827 0020 87F805E0 		strb	lr, [r7, #5]
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 35


1097:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1098:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1099:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for LINEAR Slider */
1100:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 828              		.loc 1 1100 0
 829 0024 24B9     		cbnz	r4, .L77
1101:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1102:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
 830              		.loc 1 1102 0
 831 0026 0026     		movs	r6, #0
 832              	.LVL101:
 833 0028 3E71     		strb	r6, [r7, #4]
1103:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
 834              		.loc 1 1103 0
 835 002a 095C     		ldrb	r1, [r1, r0]	@ zero_extendqisi2
 836              	.LVL102:
 837 002c B971     		strb	r1, [r7, #6]
 838 002e 0DE0     		b	.L78
 839              	.LVL103:
 840              	.L77:
1104:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1105:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 841              		.loc 1 1105 0
 842 0030 013A     		subs	r2, r2, #1
 843              	.LVL104:
 844 0032 9442     		cmp	r4, r2
 845 0034 05D1     		bne	.L79
1106:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1107:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
 846              		.loc 1 1107 0
 847 0036 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
 848              	.LVL105:
 849 0038 1C4A     		ldr	r2, .L86+4
 850 003a 1171     		strb	r1, [r2, #4]
1108:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
 851              		.loc 1 1108 0
 852 003c 0021     		movs	r1, #0
 853 003e 9171     		strb	r1, [r2, #6]
 854 0040 04E0     		b	.L78
 855              	.LVL106:
 856              	.L79:
1109:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1110:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1111:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1112:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
 857              		.loc 1 1112 0
 858 0042 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 859              	.LVL107:
 860 0044 194A     		ldr	r2, .L86+4
 861 0046 1671     		strb	r6, [r2, #4]
1113:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
 862              		.loc 1 1113 0
 863 0048 095C     		ldrb	r1, [r1, r0]	@ zero_extendqisi2
 864              	.LVL108:
 865 004a 9171     		strb	r1, [r2, #6]
 866              	.L78:
1114:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 36


1115:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_1_TOTAL_TOUCH_PADS_COU
1116:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1117:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1118:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1119:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1120:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1121:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1122:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_PREV] > noiseThreshold)
 867              		.loc 1 1122 0
 868 004c 174A     		ldr	r2, .L86+4
 869 004e 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 870 0050 AA42     		cmp	r2, r5
 871 0052 03D9     		bls	.L80
1123:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1124:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] -= noiseThreshold;
 872              		.loc 1 1124 0
 873 0054 521B     		subs	r2, r2, r5
 874 0056 1549     		ldr	r1, .L86+4
 875 0058 0A71     		strb	r2, [r1, #4]
 876 005a 02E0     		b	.L81
 877              	.L80:
1125:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1126:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1127:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1128:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
 878              		.loc 1 1128 0
 879 005c 0021     		movs	r1, #0
 880 005e 134A     		ldr	r2, .L86+4
 881 0060 1171     		strb	r1, [r2, #4]
 882              	.L81:
1129:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1130:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1131:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1132:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_centroid[CapSense_1_POS] -= noiseThreshold;
 883              		.loc 1 1132 0
 884 0062 124A     		ldr	r2, .L86+4
 885 0064 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 886 0066 491B     		subs	r1, r1, r5
 887 0068 C9B2     		uxtb	r1, r1
 888 006a 5171     		strb	r1, [r2, #5]
1133:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1134:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1135:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_NEXT] > noiseThreshold)
 889              		.loc 1 1135 0
 890 006c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 891 006e 9542     		cmp	r5, r2
 892 0070 03D2     		bcs	.L82
1136:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1137:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] -= noiseThreshold;
 893              		.loc 1 1137 0
 894 0072 551B     		subs	r5, r2, r5
 895 0074 0D4A     		ldr	r2, .L86+4
 896 0076 9571     		strb	r5, [r2, #6]
 897 0078 02E0     		b	.L83
 898              	.L82:
1138:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1139:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 37


1140:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1141:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
 899              		.loc 1 1141 0
 900 007a 0020     		movs	r0, #0
 901              	.LVL109:
 902 007c 0B4A     		ldr	r2, .L86+4
 903 007e 9071     		strb	r0, [r2, #6]
 904              	.L83:
1142:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1143:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1144:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1145:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 - Si-1 */
1146:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         numerator = (uint32) CapSense_1_centroid[CapSense_1_POS_NEXT] -
 905              		.loc 1 1146 0
 906 0080 0A4A     		ldr	r2, .L86+4
 907 0082 9079     		ldrb	r0, [r2, #6]	@ zero_extendqisi2
1147:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
 908              		.loc 1 1147 0
 909 0084 1579     		ldrb	r5, [r2, #4]	@ zero_extendqisi2
1146:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
 910              		.loc 1 1146 0
 911 0086 421B     		subs	r2, r0, r5
 912              	.LVL110:
1148:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1149:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 + Si + Si-1 */
1150:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] + 
 913              		.loc 1 1150 0
 914 0088 2944     		add	r1, r1, r5
 915 008a 0844     		add	r0, r0, r1
 916              	.LVL111:
1151:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] + 
1152:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS_NEXT];
1153:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1154:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* (numerator/denominator) + maximum */
1155:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 917              		.loc 1 1155 0
 918 008c 1202     		lsls	r2, r2, #8
 919              	.LVL112:
 920 008e 92FBF0F0 		sdiv	r0, r2, r0
 921              	.LVL113:
 922 0092 00EB0420 		add	r0, r0, r4, lsl #8
 923              	.LVL114:
1156:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1157:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1158:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Only required for RADIAL Slider */
1159:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(denominator < 0)
1160:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1161:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1162:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1163:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1164:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1165:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator *= (int16)resolution;
 924              		.loc 1 1165 0
 925 0096 1BB2     		sxth	r3, r3
 926 0098 00FB03F0 		mul	r0, r0, r3
 927              	.LVL115:
1166:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 38


1167:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Round the relust and put it to uint8 */
1168:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_1_CENTROID_ROUND_VALUE));
 928              		.loc 1 1168 0
 929 009c 00F5FE40 		add	r0, r0, #32512
 930              	.LVL116:
1169:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1170:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1171:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }    
 931              		.loc 1 1171 0
 932 00a0 C0F30740 		ubfx	r0, r0, #16, #8
 933              	.LVL117:
 934 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 935              	.LVL118:
 936              	.L87:
 937 00a6 00BF     		.align	2
 938              	.L86:
 939 00a8 00000000 		.word	CapSense_1_sensorSignal
 940 00ac 00000000 		.word	.LANCHOR0
 941              		.cfi_endproc
 942              	.LFE12:
 943              		.size	CapSense_1_CalcCentroid, .-CapSense_1_CalcCentroid
 944              		.section	.text.CapSense_1_IIR4Filter,"ax",%progbits
 945              		.align	2
 946              		.global	CapSense_1_IIR4Filter
 947              		.thumb
 948              		.thumb_func
 949              		.type	CapSense_1_IIR4Filter, %function
 950              	CapSense_1_IIR4Filter:
 951              	.LFB14:
1172:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_CENTROIDS_COUNT) */
1173:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1174:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1175:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1176:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1177:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetCentroidPos
1178:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1179:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1180:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1181:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1182:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1183:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1184:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1185:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1186:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1187:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1188:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1189:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_LS__"widget_name"            5
1190:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1191:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1192:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the linear slider.
1193:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1194:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1195:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1196:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1197:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1198:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1199:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 39


1200:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1201:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1202:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1203:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1204:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1205:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1206:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1207:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1208:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1209:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1210:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1211:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1212:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_GetCentroidPos(uint8 widget) 
1213:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1214:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1215:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             const uint8 CYCODE *diplex;
1216:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1217:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1218:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1219:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1220:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1221:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];  
1222:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1223:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1224:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1225:Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1226:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1227:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) 
1228:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK
1229:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1230:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1231:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1232:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1233:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1234:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1235:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1236:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1237:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(widget < CapSense_1_TOTAL_DIPLEXED_SLIDERS_COUNT)
1238:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1239:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maximum = CapSense_1_diplexTable[widget];
1240:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = &CapSense_1_diplexTable[maximum];
1241:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1242:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1243:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1244:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = 0u;
1245:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1246:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1247:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1248:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */      
1249:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
1250:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], dip
1251:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1252:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1253:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1254:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1255:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1256:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 40


1257:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1258:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1259:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1260:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1261:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1262:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1263:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1264:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1265:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1266:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1267:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1268:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1269:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1270:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1271:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1272:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1273:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1274:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1275:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1276:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1277:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1278:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1279:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1280:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1281:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1282:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1283:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1284:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1285:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1286:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1287:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1288:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1289:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1290:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1291:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1292:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1293:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1294:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1295:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1296:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1297:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1298:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1299:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1300:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] =
1301:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1302:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1303:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1304:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /*(0u != (CapSense_1_MEDIAN_FILTER &
1305:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *         CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1306:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1307:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1308:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if(0u!=(CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1309:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) 
1310:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1311:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1312:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position,
1313:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 41


1314:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1315:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]=CapSense_1_posFiltersData[po
1316:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1317:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1318:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1319:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1320:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1321:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1322:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1323:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER)) 
1324:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1325:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1326:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1327:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1328:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1329:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1330:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1331:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1332:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1333:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1334:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1335:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1336:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1337:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1338:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1339:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                                
1340:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1341:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1342:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1343:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1344:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1345:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1346:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1347:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position,
1348:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1349:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1350:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1351:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1352:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1353:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1354:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1355:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1356:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1357:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1358:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1359:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1360:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1361:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum wasn't found */
1362:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1363:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1364:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if(0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1365:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1366:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1367:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1368:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1369:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1370:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 42


1371:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1372:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1373:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1374:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1375:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1376:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1377:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1378:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1379:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1380:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1381:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetRadialCentroidPos
1382:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1383:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1384:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1385:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1386:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1387:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1388:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1389:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1390:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1391:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1392:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1393:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_RS_"widget_name"            5
1394:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1395:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1396:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the radial slider.
1397:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1398:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1399:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1400:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1401:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1402:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1403:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1404:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1405:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1406:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1407:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1408:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1409:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1410:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1411:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1412:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1413:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1414:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1415:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1416:Generated_Source\PSoC5/CapSense_1_CSHL.c ****      uint16 CapSense_1_GetRadialCentroidPos(uint8 widget)
1417:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
1418:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1419:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1420:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1421:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1422:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget]; 
1423:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1424:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1425:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1426:Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1427:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 43


1428:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) 
1429:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK
1430:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1431:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1432:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1433:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1434:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1435:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1436:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1437:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */        
1438:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1439:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u)
1440:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1441:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1442:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1443:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1444:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1445:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1446:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1447:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1448:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1449:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1450:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1451:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1452:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1453:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1454:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1455:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1456:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1457:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1458:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1459:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1460:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1461:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1462:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1463:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1464:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1465:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1466:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))  || 
1467:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1468:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1469:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1470:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1471:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1472:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1473:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1474:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1475:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1476:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1477:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1478:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1479:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1480:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1481:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1482:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1483:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1484:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 44


1485:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1486:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1487:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1488:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1489:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = 
1490:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                               CapSense_1_posFilters
1491:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1492:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1493:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_MEDIAN_FILTER & 
1494:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1495:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1496:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1497:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_AVERAGING_FILTER & \
1498:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1499:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1500:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1501:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1502:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position, 
1503:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1504:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1505:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]= CapSense_1_posFiltersData[p
1506:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1507:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1508:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1509:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1510:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1511:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1512:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1513:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1514:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1515:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1516:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1517:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1518:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1519:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & 
1520:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1521:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1522:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1523:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1524:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1525:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1526:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1527:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1528:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1529:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1530:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & 
1531:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1532:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1533:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1534:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1535:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1536:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1537:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position, 
1538:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                          CapSense_1_posFiltersData[
1539:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1540:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1541:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER &
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 45


1542:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1543:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1544:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1545:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1546:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1547:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1548:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1549:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1550:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1551:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum didn't find */
1552:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1553:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1554:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1555:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1556:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1557:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1558:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1559:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1560:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1561:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1562:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1563:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1564:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1565:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif
1566:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1567:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1568:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u)
1569:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1570:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetTouchCentroidPos
1571:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1572:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1573:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1574:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1575:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1576:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1577:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1578:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The position filter is applied to the result if enabled.
1579:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1580:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  customizer.
1581:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1582:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1583:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number. 
1584:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1585:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_TP_"widget_name"            5
1586:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1587:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1588:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result of calculation of X and Y position are stored.
1589:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[0u]  - position of X
1590:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[1u]  - position of Y
1591:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1592:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1593:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1594:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1595:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1596:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1597:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1598:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   calculations.
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 46


1599:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1600:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1601:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1602:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1603:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1604:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_GetTouchCentroidPos(uint8 widget, uint16* pos)
1605:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
1606:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1607:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1608:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posXIndex;
1609:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posYIndex;
1610:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1611:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
1612:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1613:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1614:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1615:Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1616:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint16 tempPos;
1617:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1618:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1619:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1620:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1621:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxX;
1622:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxY;
1623:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posX;
1624:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posY;
1625:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 touch = 0u;
1626:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1627:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1628:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1629:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within X centroid */
1630:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1631:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u);
1632:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1633:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1634:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1635:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1636:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maxX != 0xFFu)
1637:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1638:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             offset = CapSense_1_rawDataIndex[widget + 1u];
1639:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             count = CapSense_1_numberOfSensors[widget + 1u];
1640:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1641:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Find Maximum within Y centroid */
1642:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_DIPLEX_SLIDER)
1643:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1644:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else
1645:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1646:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1647:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1648:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (maxY != 0xFFu)
1649:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1650:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* X and Y maximums are found = true touch */
1651:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 touch = 1u;
1652:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1653:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate Y centroid */
1654:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posY = CapSense_1_CalcCentroid(maxY, offset, count, 
1655:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget + 1u], CapSense_1_noiseThreshold[widget 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 47


1656:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1657:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate X centroid */
1658:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 offset = CapSense_1_rawDataIndex[widget];
1659:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count = CapSense_1_numberOfSensors[widget];
1660:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1661:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posX = CapSense_1_CalcCentroid(maxX, offset, count, 
1662:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget],CapSense_1_noiseThreshold[widget]);
1663:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1664:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1665:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Check if this TP has enabled filters */
1666:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1667:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1668:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Caluclate position to store filters data */
1669:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1670:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posYIndex  = CapSense_1_posFiltersData[widget + 1u];
1671:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1672:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1673:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1674:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Init filters */
1675:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posXIndex] = posX;
1676:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posYIndex] = posY;
1677:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1678:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if((0u != (CapSense_1_MEDIAN_FILTER & \
1679:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))|| \
1680:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 (0u != (CapSense_1_AVERAGING_FILTER & \
1681:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1682:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1683:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1684:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1685:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1686:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = posX;
1687:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = posY;
1688:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1689:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1690:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1691:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *    (0u != (CapSense_1_AVERAGING_FILTER & \
1692:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *            CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1693:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1694:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
1695:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1696:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1697:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
1698:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1699:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Do filtering */
1700:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1701:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1702:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1703:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1704:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_MedianFilter(posX,
1705:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1706:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1707:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1708:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1709:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1710:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1711:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1712:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_MedianFilter(posY,
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 48


1713:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1714:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1715:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1716:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1717:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1718:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1719:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1720:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_MEDIAN_FILTER & \
1721:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1722:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1723:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1724:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if(0u !=(CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTE
1725:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1726:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1727:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1728:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_AveragingFilter(posX,
1729:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1730:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1731:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1732:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1733:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1734:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1735:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1736:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_AveragingFilter(posY, 
1737:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1738:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1739:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1740:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1741:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1742:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1743:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1744:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1745:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1746:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1747:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1748:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1749:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1750:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1751:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR2Filter(posX, 
1752:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                            CapSense_1_posFiltersDat
1753:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1754:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1755:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR2Filter(posY, 
1756:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1757:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1758:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1759:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1760:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1761:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1762:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1763:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1764:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1765:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1766:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1767:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR4Filter((uint16)posX,
1768:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1769:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 49


1770:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1771:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR4Filter((uint16)posY,
1772:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1773:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1774:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1775:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1776:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1777:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1778:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1779:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1780:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1781:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1782:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     {
1783:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posX = (uint8) CapSense_1_JitterFilter(posX, 
1784:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1785:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posXIndex] = posX;
1786:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         
1787:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posY = (uint8) CapSense_1_JitterFilter(posY, 
1788:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1789:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posYIndex] = posY;
1790:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     }
1791:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1792:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1793:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1794:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1795:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1796:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1797:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1798:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Save positions */
1799:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[0u] = posX;
1800:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[1u] = posY;
1801:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1802:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1803:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1804:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1805:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(touch == 0u)
1806:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1807:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1808:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if ((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1809:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1810:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1811:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1812:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1813:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1814:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1815:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (touch);
1816:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1817:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u) */
1818:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1819:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1820:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1821:Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1822:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1823:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_MedianFilter
1824:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1825:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1826:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 50


1827:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Median filter function. 
1828:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1829:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  median value.
1830:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1831:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1832:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1833:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1834:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1835:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1836:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1837:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1838:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1839:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1840:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1841:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                          
1842:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1843:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 tmp;
1844:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1845:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x1 > x2)
1846:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1847:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             tmp = x2;
1848:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x1;
1849:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x1 = tmp;
1850:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1851:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1852:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x2 > x3)
1853:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1854:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x3;
1855:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1856:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1857:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1858:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1859:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1860:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1861:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1862:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1863:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1864:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1865:Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1866:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1867:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_AveragingFilter
1868:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1869:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1870:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1871:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Averaging filter function.
1872:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1873:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  reports the averaging value.
1874:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1875:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1876:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1877:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1878:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1879:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1880:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1881:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1882:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1883:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 51


1884:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1885:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                             
1886:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1887:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1888:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1889:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1890:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1891:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1892:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1893:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1894:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1895:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1896:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1897:Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1898:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1899:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR2Filter
1900:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1901:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1902:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1903:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1904:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1905:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1906:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1907:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1908:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1909:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1910:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1911:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1912:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1913:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR2Filter(uint16 x1, uint16 x2)
1914:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1915:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1916:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1917:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1918:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1919:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1920:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 1u;
1921:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1922:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1923:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1924:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1925:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1926:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1927:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1928:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1929:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) | \
1930:Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER) )
1931:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1932:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR4Filter
1933:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1934:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1935:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1936:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1937:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1938:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1939:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1940:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 52


1941:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1942:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1943:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1944:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1945:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1946:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR4Filter(uint16 x1, uint16 x2)
1947:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1948:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 952              		.loc 1 1948 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              		@ link register save eliminated.
 957              	.LVL119:
1949:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1950:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1951:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1952:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 958              		.loc 1 1952 0
 959 0000 0844     		add	r0, r0, r1
 960              	.LVL120:
1953:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 961              		.loc 1 1953 0
 962 0002 00EB4100 		add	r0, r0, r1, lsl #1
 963              	.LVL121:
1954:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 2u;
1955:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1956:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1957:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 964              		.loc 1 1957 0
 965 0006 C0F38F00 		ubfx	r0, r0, #2, #16
 966              	.LVL122:
 967 000a 7047     		bx	lr
 968              		.cfi_endproc
 969              	.LFE14:
 970              		.size	CapSense_1_IIR4Filter, .-CapSense_1_IIR4Filter
 971              		.section	.text.CapSense_1_GetCentroidPos,"ax",%progbits
 972              		.align	2
 973              		.global	CapSense_1_GetCentroidPos
 974              		.thumb
 975              		.thumb_func
 976              		.type	CapSense_1_GetCentroidPos, %function
 977              	CapSense_1_GetCentroidPos:
 978              	.LFB13:
1213:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
 979              		.loc 1 1213 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983              	.LVL123:
 984 0000 30B5     		push	{r4, r5, lr}
 985              		.cfi_def_cfa_offset 12
 986              		.cfi_offset 4, -12
 987              		.cfi_offset 5, -8
 988              		.cfi_offset 14, -4
 989 0002 83B0     		sub	sp, sp, #12
 990              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 53


1220:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];  
 991              		.loc 1 1220 0
 992 0004 144B     		ldr	r3, .L94
 993 0006 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 994              	.LVL124:
1252:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 995              		.loc 1 1252 0
 996 0008 6422     		movs	r2, #100
 997 000a 0521     		movs	r1, #5
 998 000c 0020     		movs	r0, #0
 999              	.LVL125:
 1000 000e FFF7FEFF 		bl	CapSense_1_FindMaximum
 1001              	.LVL126:
1255:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 1002              		.loc 1 1255 0
 1003 0012 FF28     		cmp	r0, #255
 1004 0014 19D0     		beq	.L90
1258:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
 1005              		.loc 1 1258 0
 1006 0016 1423     		movs	r3, #20
 1007 0018 0093     		str	r3, [sp]
 1008 001a 4FF4C853 		mov	r3, #6400
 1009 001e 0522     		movs	r2, #5
 1010 0020 0021     		movs	r1, #0
 1011 0022 FFF7FEFF 		bl	CapSense_1_CalcCentroid
 1012              	.LVL127:
 1013 0026 0346     		mov	r3, r0
 1014 0028 80B2     		uxth	r0, r0
 1015              	.LVL128:
1266:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 1016              		.loc 1 1266 0
 1017 002a 651C     		adds	r5, r4, #1
 1018 002c EDB2     		uxtb	r5, r5
 1019              	.LVL129:
1268:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 1020              		.loc 1 1268 0
 1021 002e 0A4A     		ldr	r2, .L94
 1022 0030 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 1023 0032 22B9     		cbnz	r2, .L91
1271:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
 1024              		.loc 1 1271 0
 1025 0034 084A     		ldr	r2, .L94
 1026 0036 5355     		strb	r3, [r2, r5]
1288:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 1027              		.loc 1 1288 0
 1028 0038 0123     		movs	r3, #1
 1029 003a 1355     		strb	r3, [r2, r4]
 1030 003c 0AE0     		b	.L92
 1031              	.L91:
1337:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
 1032              		.loc 1 1337 0
 1033 003e 064C     		ldr	r4, .L94
 1034              	.LVL130:
1336:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
 1035              		.loc 1 1336 0
 1036 0040 615D     		ldrb	r1, [r4, r5]	@ zero_extendqisi2
 1037 0042 FFF7FEFF 		bl	CapSense_1_IIR4Filter
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 54


 1038              	.LVL131:
1338:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                                
 1039              		.loc 1 1338 0
 1040 0046 6055     		strb	r0, [r4, r5]
 1041 0048 04E0     		b	.L92
 1042              	.LVL132:
 1043              	.L90:
1368:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 1044              		.loc 1 1368 0
 1045 004a 0022     		movs	r2, #0
 1046 004c 024B     		ldr	r3, .L94
 1047 004e 1A55     		strb	r2, [r3, r4]
1362:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 1048              		.loc 1 1362 0
 1049 0050 4FF6FF70 		movw	r0, #65535
 1050              	.LVL133:
 1051              	.L92:
1375:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
 1052              		.loc 1 1375 0
 1053 0054 03B0     		add	sp, sp, #12
 1054              		.cfi_def_cfa_offset 12
 1055              		@ sp needed
 1056 0056 30BD     		pop	{r4, r5, pc}
 1057              	.L95:
 1058              		.align	2
 1059              	.L94:
 1060 0058 00000000 		.word	.LANCHOR1
 1061              		.cfi_endproc
 1062              	.LFE13:
 1063              		.size	CapSense_1_GetCentroidPos, .-CapSense_1_GetCentroidPos
 1064              		.global	CapSense_1_posFiltersData
 1065              		.global	CapSense_1_posFiltersMask
 1066              		.global	CapSense_1_centroidMult
 1067              		.global	CapSense_1_numberOfSensors
 1068              		.global	CapSense_1_rawDataIndex
 1069              		.global	CapSense_1_debounceCounter
 1070              		.global	CapSense_1_debounce
 1071              		.global	CapSense_1_hysteresis
 1072              		.global	CapSense_1_noiseThreshold
 1073              		.global	CapSense_1_fingerThreshold
 1074              		.comm	CapSense_1_lowBaselineResetCnt,5,4
 1075              		.comm	CapSense_1_sensorOnMask,1,4
 1076              		.comm	CapSense_1_sensorSignal,5,4
 1077              		.comm	CapSense_1_sensorBaselineLow,5,4
 1078              		.comm	CapSense_1_sensorBaseline,10,4
 1079              		.section	.rodata
 1080              		.align	2
 1081              		.type	CapSense_1_posFiltersMask, %object
 1082              		.size	CapSense_1_posFiltersMask, 1
 1083              	CapSense_1_posFiltersMask:
 1084 0000 08       		.byte	8
 1085 0001 000000   		.space	3
 1086              		.type	CapSense_1_centroidMult, %object
 1087              		.size	CapSense_1_centroidMult, 2
 1088              	CapSense_1_centroidMult:
 1089 0004 0019     		.short	6400
 1090 0006 0000     		.space	2
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 55


 1091              		.type	CapSense_1_numberOfSensors, %object
 1092              		.size	CapSense_1_numberOfSensors, 1
 1093              	CapSense_1_numberOfSensors:
 1094 0008 05       		.byte	5
 1095 0009 000000   		.space	3
 1096              		.type	CapSense_1_rawDataIndex, %object
 1097              		.size	CapSense_1_rawDataIndex, 1
 1098              	CapSense_1_rawDataIndex:
 1099 000c 00       		.space	1
 1100 000d 000000   		.space	3
 1101              		.type	CapSense_1_debounce, %object
 1102              		.size	CapSense_1_debounce, 1
 1103              	CapSense_1_debounce:
 1104 0010 01       		.byte	1
 1105 0011 000000   		.space	3
 1106              		.type	CapSense_1_hysteresis, %object
 1107              		.size	CapSense_1_hysteresis, 1
 1108              	CapSense_1_hysteresis:
 1109 0014 00       		.space	1
 1110 0015 000000   		.space	3
 1111              		.type	CapSense_1_noiseThreshold, %object
 1112              		.size	CapSense_1_noiseThreshold, 1
 1113              	CapSense_1_noiseThreshold:
 1114 0018 14       		.byte	20
 1115 0019 000000   		.space	3
 1116              		.type	CapSense_1_fingerThreshold, %object
 1117              		.size	CapSense_1_fingerThreshold, 1
 1118              	CapSense_1_fingerThreshold:
 1119 001c 64       		.byte	100
 1120              		.data
 1121              		.align	2
 1122              		.set	.LANCHOR1,. + 0
 1123              		.type	CapSense_1_posFiltersData, %object
 1124              		.size	CapSense_1_posFiltersData, 3
 1125              	CapSense_1_posFiltersData:
 1126 0000 01       		.byte	1
 1127 0001 00       		.byte	0
 1128 0002 00       		.byte	0
 1129              		.bss
 1130              		.align	2
 1131              		.set	.LANCHOR0,. + 0
 1132              		.type	CapSense_1_debounceCounter, %object
 1133              		.size	CapSense_1_debounceCounter, 1
 1134              	CapSense_1_debounceCounter:
 1135 0000 00       		.space	1
 1136 0001 000000   		.space	3
 1137              		.type	CapSense_1_centroid.5263, %object
 1138              		.size	CapSense_1_centroid.5263, 3
 1139              	CapSense_1_centroid.5263:
 1140 0004 000000   		.space	3
 1141              		.text
 1142              	.Letext0:
 1143              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1144              		.file 3 "Generated_Source\\PSoC5\\CapSense_1.h"
 1145              		.file 4 "Generated_Source\\PSoC5\\CapSense_1_CSHL.h"
 1146              		.section	.debug_info,"",%progbits
 1147              	.Ldebug_info0:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 56


 1148 0000 1F090000 		.4byte	0x91f
 1149 0004 0400     		.2byte	0x4
 1150 0006 00000000 		.4byte	.Ldebug_abbrev0
 1151 000a 04       		.byte	0x4
 1152 000b 01       		.uleb128 0x1
 1153 000c 3E050000 		.4byte	.LASF85
 1154 0010 0C       		.byte	0xc
 1155 0011 03010000 		.4byte	.LASF86
 1156 0015 70030000 		.4byte	.LASF87
 1157 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1158 001d 00000000 		.4byte	0
 1159 0021 00000000 		.4byte	.Ldebug_line0
 1160 0025 02       		.uleb128 0x2
 1161 0026 01       		.byte	0x1
 1162 0027 06       		.byte	0x6
 1163 0028 3A010000 		.4byte	.LASF0
 1164 002c 02       		.uleb128 0x2
 1165 002d 01       		.byte	0x1
 1166 002e 08       		.byte	0x8
 1167 002f 78040000 		.4byte	.LASF1
 1168 0033 02       		.uleb128 0x2
 1169 0034 02       		.byte	0x2
 1170 0035 05       		.byte	0x5
 1171 0036 BB040000 		.4byte	.LASF2
 1172 003a 02       		.uleb128 0x2
 1173 003b 02       		.byte	0x2
 1174 003c 07       		.byte	0x7
 1175 003d 93020000 		.4byte	.LASF3
 1176 0041 02       		.uleb128 0x2
 1177 0042 04       		.byte	0x4
 1178 0043 05       		.byte	0x5
 1179 0044 A5010000 		.4byte	.LASF4
 1180 0048 02       		.uleb128 0x2
 1181 0049 04       		.byte	0x4
 1182 004a 07       		.byte	0x7
 1183 004b 81020000 		.4byte	.LASF5
 1184 004f 02       		.uleb128 0x2
 1185 0050 08       		.byte	0x8
 1186 0051 05       		.byte	0x5
 1187 0052 2C010000 		.4byte	.LASF6
 1188 0056 02       		.uleb128 0x2
 1189 0057 08       		.byte	0x8
 1190 0058 07       		.byte	0x7
 1191 0059 63000000 		.4byte	.LASF7
 1192 005d 03       		.uleb128 0x3
 1193 005e 04       		.byte	0x4
 1194 005f 05       		.byte	0x5
 1195 0060 696E7400 		.ascii	"int\000"
 1196 0064 02       		.uleb128 0x2
 1197 0065 04       		.byte	0x4
 1198 0066 07       		.byte	0x7
 1199 0067 4D020000 		.4byte	.LASF8
 1200 006b 04       		.uleb128 0x4
 1201 006c DD010000 		.4byte	.LASF9
 1202 0070 02       		.byte	0x2
 1203 0071 E401     		.2byte	0x1e4
 1204 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 57


 1205 0077 04       		.uleb128 0x4
 1206 0078 06000000 		.4byte	.LASF10
 1207 007c 02       		.byte	0x2
 1208 007d E501     		.2byte	0x1e5
 1209 007f 3A000000 		.4byte	0x3a
 1210 0083 04       		.uleb128 0x4
 1211 0084 EA010000 		.4byte	.LASF11
 1212 0088 02       		.byte	0x2
 1213 0089 E601     		.2byte	0x1e6
 1214 008b 48000000 		.4byte	0x48
 1215 008f 04       		.uleb128 0x4
 1216 0090 6B060000 		.4byte	.LASF12
 1217 0094 02       		.byte	0x2
 1218 0095 E801     		.2byte	0x1e8
 1219 0097 33000000 		.4byte	0x33
 1220 009b 04       		.uleb128 0x4
 1221 009c 82010000 		.4byte	.LASF13
 1222 00a0 02       		.byte	0x2
 1223 00a1 E901     		.2byte	0x1e9
 1224 00a3 41000000 		.4byte	0x41
 1225 00a7 02       		.uleb128 0x2
 1226 00a8 04       		.byte	0x4
 1227 00a9 04       		.byte	0x4
 1228 00aa 19040000 		.4byte	.LASF14
 1229 00ae 02       		.uleb128 0x2
 1230 00af 08       		.byte	0x8
 1231 00b0 04       		.byte	0x4
 1232 00b1 E3010000 		.4byte	.LASF15
 1233 00b5 02       		.uleb128 0x2
 1234 00b6 01       		.byte	0x1
 1235 00b7 08       		.byte	0x8
 1236 00b8 F2050000 		.4byte	.LASF16
 1237 00bc 02       		.uleb128 0x2
 1238 00bd 08       		.byte	0x8
 1239 00be 04       		.byte	0x4
 1240 00bf 13030000 		.4byte	.LASF17
 1241 00c3 02       		.uleb128 0x2
 1242 00c4 04       		.byte	0x4
 1243 00c5 07       		.byte	0x7
 1244 00c6 0A030000 		.4byte	.LASF18
 1245 00ca 05       		.uleb128 0x5
 1246 00cb 4F000000 		.4byte	.LASF19
 1247 00cf 01       		.byte	0x1
 1248 00d0 85       		.byte	0x85
 1249 00d1 00000000 		.4byte	.LFB0
 1250 00d5 28000000 		.4byte	.LFE0-.LFB0
 1251 00d9 01       		.uleb128 0x1
 1252 00da 9C       		.byte	0x9c
 1253 00db ED000000 		.4byte	0xed
 1254 00df 06       		.uleb128 0x6
 1255 00e0 A6020000 		.4byte	.LASF21
 1256 00e4 01       		.byte	0x1
 1257 00e5 85       		.byte	0x85
 1258 00e6 6B000000 		.4byte	0x6b
 1259 00ea 01       		.uleb128 0x1
 1260 00eb 50       		.byte	0x50
 1261 00ec 00       		.byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 58


 1262 00ed 05       		.uleb128 0x5
 1263 00ee D3030000 		.4byte	.LASF20
 1264 00f2 01       		.byte	0x1
 1265 00f3 CD       		.byte	0xcd
 1266 00f4 00000000 		.4byte	.LFB1
 1267 00f8 18000000 		.4byte	.LFE1-.LFB1
 1268 00fc 01       		.uleb128 0x1
 1269 00fd 9C       		.byte	0x9c
 1270 00fe 3F010000 		.4byte	0x13f
 1271 0102 07       		.uleb128 0x7
 1272 0103 A6020000 		.4byte	.LASF21
 1273 0107 01       		.byte	0x1
 1274 0108 CD       		.byte	0xcd
 1275 0109 6B000000 		.4byte	0x6b
 1276 010d 00000000 		.4byte	.LLST0
 1277 0111 08       		.uleb128 0x8
 1278 0112 08000000 		.4byte	.LVL2
 1279 0116 01090000 		.4byte	0x901
 1280 011a 25010000 		.4byte	0x125
 1281 011e 09       		.uleb128 0x9
 1282 011f 01       		.uleb128 0x1
 1283 0120 50       		.byte	0x50
 1284 0121 02       		.uleb128 0x2
 1285 0122 74       		.byte	0x74
 1286 0123 00       		.sleb128 0
 1287 0124 00       		.byte	0
 1288 0125 0A       		.uleb128 0xa
 1289 0126 0C000000 		.4byte	.LVL3
 1290 012a 0C090000 		.4byte	0x90c
 1291 012e 0B       		.uleb128 0xb
 1292 012f 16000000 		.4byte	.LVL4
 1293 0133 CA000000 		.4byte	0xca
 1294 0137 09       		.uleb128 0x9
 1295 0138 01       		.uleb128 0x1
 1296 0139 50       		.byte	0x50
 1297 013a 02       		.uleb128 0x2
 1298 013b 74       		.byte	0x74
 1299 013c 00       		.sleb128 0
 1300 013d 00       		.byte	0
 1301 013e 00       		.byte	0
 1302 013f 0C       		.uleb128 0xc
 1303 0140 2D000000 		.4byte	.LASF22
 1304 0144 01       		.byte	0x1
 1305 0145 0101     		.2byte	0x101
 1306 0147 00000000 		.4byte	.LFB2
 1307 014b 16000000 		.4byte	.LFE2-.LFB2
 1308 014f 01       		.uleb128 0x1
 1309 0150 9C       		.byte	0x9c
 1310 0151 74010000 		.4byte	0x174
 1311 0155 0D       		.uleb128 0xd
 1312 0156 6900     		.ascii	"i\000"
 1313 0158 01       		.byte	0x1
 1314 0159 0401     		.2byte	0x104
 1315 015b 6B000000 		.4byte	0x6b
 1316 015f 21000000 		.4byte	.LLST1
 1317 0163 0B       		.uleb128 0xb
 1318 0164 0C000000 		.4byte	.LVL7
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 59


 1319 0168 ED000000 		.4byte	0xed
 1320 016c 09       		.uleb128 0x9
 1321 016d 01       		.uleb128 0x1
 1322 016e 50       		.byte	0x50
 1323 016f 02       		.uleb128 0x2
 1324 0170 74       		.byte	0x74
 1325 0171 00       		.sleb128 0
 1326 0172 00       		.byte	0
 1327 0173 00       		.byte	0
 1328 0174 0C       		.uleb128 0xc
 1329 0175 86040000 		.4byte	.LASF23
 1330 0179 01       		.byte	0x1
 1331 017a 2201     		.2byte	0x122
 1332 017c 00000000 		.4byte	.LFB3
 1333 0180 44000000 		.4byte	.LFE3-.LFB3
 1334 0184 01       		.uleb128 0x1
 1335 0185 9C       		.byte	0x9c
 1336 0186 D9010000 		.4byte	0x1d9
 1337 018a 0D       		.uleb128 0xd
 1338 018b 6900     		.ascii	"i\000"
 1339 018d 01       		.byte	0x1
 1340 018e 2501     		.2byte	0x125
 1341 0190 6B000000 		.4byte	0x6b
 1342 0194 4B000000 		.4byte	.LLST2
 1343 0198 0E       		.uleb128 0xe
 1344 0199 706F7300 		.ascii	"pos\000"
 1345 019d 01       		.byte	0x1
 1346 019e 2601     		.2byte	0x126
 1347 01a0 6B000000 		.4byte	0x6b
 1348 01a4 01       		.uleb128 0x1
 1349 01a5 52       		.byte	0x52
 1350 01a6 0F       		.uleb128 0xf
 1351 01a7 03030000 		.4byte	.LASF24
 1352 01ab 01       		.byte	0x1
 1353 01ac 2701     		.2byte	0x127
 1354 01ae 6B000000 		.4byte	0x6b
 1355 01b2 69000000 		.4byte	.LLST3
 1356 01b6 0A       		.uleb128 0xa
 1357 01b7 06000000 		.4byte	.LVL10
 1358 01bb 17090000 		.4byte	0x917
 1359 01bf 0A       		.uleb128 0xa
 1360 01c0 0A000000 		.4byte	.LVL11
 1361 01c4 0C090000 		.4byte	0x90c
 1362 01c8 0B       		.uleb128 0xb
 1363 01c9 32000000 		.4byte	.LVL15
 1364 01cd CA000000 		.4byte	0xca
 1365 01d1 09       		.uleb128 0x9
 1366 01d2 01       		.uleb128 0x1
 1367 01d3 50       		.byte	0x50
 1368 01d4 02       		.uleb128 0x2
 1369 01d5 74       		.byte	0x74
 1370 01d6 00       		.sleb128 0
 1371 01d7 00       		.byte	0
 1372 01d8 00       		.byte	0
 1373 01d9 0C       		.uleb128 0xc
 1374 01da D3040000 		.4byte	.LASF25
 1375 01de 01       		.byte	0x1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 60


 1376 01df 6501     		.2byte	0x165
 1377 01e1 00000000 		.4byte	.LFB4
 1378 01e5 A4000000 		.4byte	.LFE4-.LFB4
 1379 01e9 01       		.uleb128 0x1
 1380 01ea 9C       		.byte	0x9c
 1381 01eb 5D020000 		.4byte	0x25d
 1382 01ef 10       		.uleb128 0x10
 1383 01f0 A6020000 		.4byte	.LASF21
 1384 01f4 01       		.byte	0x1
 1385 01f5 6501     		.2byte	0x165
 1386 01f7 6B000000 		.4byte	0x6b
 1387 01fb 9E000000 		.4byte	.LLST4
 1388 01ff 0F       		.uleb128 0xf
 1389 0200 D0020000 		.4byte	.LASF26
 1390 0204 01       		.byte	0x1
 1391 0205 6801     		.2byte	0x168
 1392 0207 83000000 		.4byte	0x83
 1393 020b D8000000 		.4byte	.LLST5
 1394 020f 0F       		.uleb128 0xf
 1395 0210 A1060000 		.4byte	.LASF27
 1396 0214 01       		.byte	0x1
 1397 0215 6901     		.2byte	0x169
 1398 0217 77000000 		.4byte	0x77
 1399 021b 05010000 		.4byte	.LLST6
 1400 021f 0F       		.uleb128 0xf
 1401 0220 0D000000 		.4byte	.LASF28
 1402 0224 01       		.byte	0x1
 1403 0225 6A01     		.2byte	0x16a
 1404 0227 77000000 		.4byte	0x77
 1405 022b 23010000 		.4byte	.LLST7
 1406 022f 0F       		.uleb128 0xf
 1407 0230 C5040000 		.4byte	.LASF29
 1408 0234 01       		.byte	0x1
 1409 0235 6B01     		.2byte	0x16b
 1410 0237 6B000000 		.4byte	0x6b
 1411 023b 41010000 		.4byte	.LLST8
 1412 023f 11       		.uleb128 0x11
 1413 0240 AC040000 		.4byte	.LASF30
 1414 0244 01       		.byte	0x1
 1415 0245 6C01     		.2byte	0x16c
 1416 0247 6B000000 		.4byte	0x6b
 1417 024b 14       		.byte	0x14
 1418 024c 0B       		.uleb128 0xb
 1419 024d 36000000 		.4byte	.LVL28
 1420 0251 CA000000 		.4byte	0xca
 1421 0255 09       		.uleb128 0x9
 1422 0256 01       		.uleb128 0x1
 1423 0257 50       		.byte	0x50
 1424 0258 02       		.uleb128 0x2
 1425 0259 74       		.byte	0x74
 1426 025a 00       		.sleb128 0
 1427 025b 00       		.byte	0
 1428 025c 00       		.byte	0
 1429 025d 0C       		.uleb128 0xc
 1430 025e F7030000 		.4byte	.LASF31
 1431 0262 01       		.byte	0x1
 1432 0263 1202     		.2byte	0x212
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 61


 1433 0265 00000000 		.4byte	.LFB5
 1434 0269 2C000000 		.4byte	.LFE5-.LFB5
 1435 026d 01       		.uleb128 0x1
 1436 026e 9C       		.byte	0x9c
 1437 026f B0020000 		.4byte	0x2b0
 1438 0273 0D       		.uleb128 0xd
 1439 0274 6900     		.ascii	"i\000"
 1440 0276 01       		.byte	0x1
 1441 0277 1502     		.2byte	0x215
 1442 0279 6B000000 		.4byte	0x6b
 1443 027d 6C010000 		.4byte	.LLST9
 1444 0281 0E       		.uleb128 0xe
 1445 0282 706F7300 		.ascii	"pos\000"
 1446 0286 01       		.byte	0x1
 1447 0287 1602     		.2byte	0x216
 1448 0289 6B000000 		.4byte	0x6b
 1449 028d 01       		.uleb128 0x1
 1450 028e 52       		.byte	0x52
 1451 028f 0F       		.uleb128 0xf
 1452 0290 03030000 		.4byte	.LASF24
 1453 0294 01       		.byte	0x1
 1454 0295 1702     		.2byte	0x217
 1455 0297 6B000000 		.4byte	0x6b
 1456 029b 96010000 		.4byte	.LLST10
 1457 029f 0B       		.uleb128 0xb
 1458 02a0 1E000000 		.4byte	.LVL44
 1459 02a4 D9010000 		.4byte	0x1d9
 1460 02a8 09       		.uleb128 0x9
 1461 02a9 01       		.uleb128 0x1
 1462 02aa 50       		.byte	0x50
 1463 02ab 02       		.uleb128 0x2
 1464 02ac 74       		.byte	0x74
 1465 02ad 00       		.sleb128 0
 1466 02ae 00       		.byte	0
 1467 02af 00       		.byte	0
 1468 02b0 12       		.uleb128 0x12
 1469 02b1 37040000 		.4byte	.LASF37
 1470 02b5 01       		.byte	0x1
 1471 02b6 4C02     		.2byte	0x24c
 1472 02b8 6B000000 		.4byte	0x6b
 1473 02bc 00000000 		.4byte	.LFB6
 1474 02c0 5C000000 		.4byte	.LFE6-.LFB6
 1475 02c4 01       		.uleb128 0x1
 1476 02c5 9C       		.byte	0x9c
 1477 02c6 37030000 		.4byte	0x337
 1478 02ca 10       		.uleb128 0x10
 1479 02cb A6020000 		.4byte	.LASF21
 1480 02cf 01       		.byte	0x1
 1481 02d0 4C02     		.2byte	0x24c
 1482 02d2 6B000000 		.4byte	0x6b
 1483 02d6 CB010000 		.4byte	.LLST11
 1484 02da 11       		.uleb128 0x11
 1485 02db 47060000 		.4byte	.LASF32
 1486 02df 01       		.byte	0x1
 1487 02e0 4F02     		.2byte	0x24f
 1488 02e2 6B000000 		.4byte	0x6b
 1489 02e6 00       		.byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 62


 1490 02e7 0E       		.uleb128 0xe
 1491 02e8 706F7300 		.ascii	"pos\000"
 1492 02ec 01       		.byte	0x1
 1493 02ed 5102     		.2byte	0x251
 1494 02ef 6B000000 		.4byte	0x6b
 1495 02f3 01       		.uleb128 0x1
 1496 02f4 52       		.byte	0x52
 1497 02f5 13       		.uleb128 0x13
 1498 02f6 CC040000 		.4byte	.LASF33
 1499 02fa 01       		.byte	0x1
 1500 02fb 5202     		.2byte	0x252
 1501 02fd 6B000000 		.4byte	0x6b
 1502 0301 01       		.uleb128 0x1
 1503 0302 53       		.byte	0x53
 1504 0303 14       		.uleb128 0x14
 1505 0304 C5040000 		.4byte	.LASF29
 1506 0308 01       		.byte	0x1
 1507 0309 5402     		.2byte	0x254
 1508 030b 6B000000 		.4byte	0x6b
 1509 030f 11       		.uleb128 0x11
 1510 0310 1D000000 		.4byte	.LASF34
 1511 0314 01       		.byte	0x1
 1512 0315 5502     		.2byte	0x255
 1513 0317 6B000000 		.4byte	0x6b
 1514 031b 64       		.byte	0x64
 1515 031c 11       		.uleb128 0x11
 1516 031d F1010000 		.4byte	.LASF35
 1517 0321 01       		.byte	0x1
 1518 0322 5602     		.2byte	0x256
 1519 0324 6B000000 		.4byte	0x6b
 1520 0328 00       		.byte	0
 1521 0329 11       		.uleb128 0x11
 1522 032a FA020000 		.4byte	.LASF36
 1523 032e 01       		.byte	0x1
 1524 032f 5702     		.2byte	0x257
 1525 0331 6B000000 		.4byte	0x6b
 1526 0335 01       		.byte	0x1
 1527 0336 00       		.byte	0
 1528 0337 12       		.uleb128 0x12
 1529 0338 A1000000 		.4byte	.LASF38
 1530 033c 01       		.byte	0x1
 1531 033d 9502     		.2byte	0x295
 1532 033f 6B000000 		.4byte	0x6b
 1533 0343 00000000 		.4byte	.LFB7
 1534 0347 1C000000 		.4byte	.LFE7-.LFB7
 1535 034b 01       		.uleb128 0x1
 1536 034c 9C       		.byte	0x9c
 1537 034d 9F030000 		.4byte	0x39f
 1538 0351 10       		.uleb128 0x10
 1539 0352 C5040000 		.4byte	.LASF29
 1540 0356 01       		.byte	0x1
 1541 0357 9502     		.2byte	0x295
 1542 0359 6B000000 		.4byte	0x6b
 1543 035d 05020000 		.4byte	.LLST12
 1544 0361 0F       		.uleb128 0xf
 1545 0362 55010000 		.4byte	.LASF39
 1546 0366 01       		.byte	0x1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 63


 1547 0367 9802     		.2byte	0x298
 1548 0369 6B000000 		.4byte	0x6b
 1549 036d 26020000 		.4byte	.LLST13
 1550 0371 11       		.uleb128 0x11
 1551 0372 5E010000 		.4byte	.LASF40
 1552 0376 01       		.byte	0x1
 1553 0377 9902     		.2byte	0x299
 1554 0379 6B000000 		.4byte	0x6b
 1555 037d 05       		.byte	0x5
 1556 037e 0F       		.uleb128 0xf
 1557 037f 88010000 		.4byte	.LASF41
 1558 0383 01       		.byte	0x1
 1559 0384 9A02     		.2byte	0x29a
 1560 0386 6B000000 		.4byte	0x6b
 1561 038a 50020000 		.4byte	.LLST14
 1562 038e 0B       		.uleb128 0xb
 1563 038f 0C000000 		.4byte	.LVL57
 1564 0393 B0020000 		.4byte	0x2b0
 1565 0397 09       		.uleb128 0x9
 1566 0398 01       		.uleb128 0x1
 1567 0399 50       		.byte	0x50
 1568 039a 02       		.uleb128 0x2
 1569 039b 74       		.byte	0x74
 1570 039c 00       		.sleb128 0
 1571 039d 00       		.byte	0
 1572 039e 00       		.byte	0
 1573 039f 12       		.uleb128 0x12
 1574 03a0 56040000 		.4byte	.LASF42
 1575 03a4 01       		.byte	0x1
 1576 03a5 C102     		.2byte	0x2c1
 1577 03a7 6B000000 		.4byte	0x6b
 1578 03ab 00000000 		.4byte	.LFB8
 1579 03af 1E000000 		.4byte	.LFE8-.LFB8
 1580 03b3 01       		.uleb128 0x1
 1581 03b4 9C       		.byte	0x9c
 1582 03b5 E8030000 		.4byte	0x3e8
 1583 03b9 0D       		.uleb128 0xd
 1584 03ba 6900     		.ascii	"i\000"
 1585 03bc 01       		.byte	0x1
 1586 03bd C402     		.2byte	0x2c4
 1587 03bf 6B000000 		.4byte	0x6b
 1588 03c3 6F020000 		.4byte	.LLST15
 1589 03c7 0F       		.uleb128 0xf
 1590 03c8 88010000 		.4byte	.LASF41
 1591 03cc 01       		.byte	0x1
 1592 03cd C502     		.2byte	0x2c5
 1593 03cf 6B000000 		.4byte	0x6b
 1594 03d3 99020000 		.4byte	.LLST16
 1595 03d7 0B       		.uleb128 0xb
 1596 03d8 0E000000 		.4byte	.LVL63
 1597 03dc 37030000 		.4byte	0x337
 1598 03e0 09       		.uleb128 0x9
 1599 03e1 01       		.uleb128 0x1
 1600 03e2 50       		.byte	0x50
 1601 03e3 02       		.uleb128 0x2
 1602 03e4 74       		.byte	0x74
 1603 03e5 00       		.sleb128 0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 64


 1604 03e6 00       		.byte	0
 1605 03e7 00       		.byte	0
 1606 03e8 0C       		.uleb128 0xc
 1607 03e9 7A000000 		.4byte	.LASF43
 1608 03ed 01       		.byte	0x1
 1609 03ee EF02     		.2byte	0x2ef
 1610 03f0 00000000 		.4byte	.LFB9
 1611 03f4 28000000 		.4byte	.LFE9-.LFB9
 1612 03f8 01       		.uleb128 0x1
 1613 03f9 9C       		.byte	0x9c
 1614 03fa 4A040000 		.4byte	0x44a
 1615 03fe 10       		.uleb128 0x10
 1616 03ff C5040000 		.4byte	.LASF29
 1617 0403 01       		.byte	0x1
 1618 0404 EF02     		.2byte	0x2ef
 1619 0406 6B000000 		.4byte	0x6b
 1620 040a B8020000 		.4byte	.LLST17
 1621 040e 0E       		.uleb128 0xe
 1622 040f 706F7300 		.ascii	"pos\000"
 1623 0413 01       		.byte	0x1
 1624 0414 F202     		.2byte	0x2f2
 1625 0416 6B000000 		.4byte	0x6b
 1626 041a 01       		.uleb128 0x1
 1627 041b 50       		.byte	0x50
 1628 041c 0F       		.uleb128 0xf
 1629 041d 03030000 		.4byte	.LASF24
 1630 0421 01       		.byte	0x1
 1631 0422 F302     		.2byte	0x2f3
 1632 0424 6B000000 		.4byte	0x6b
 1633 0428 D9020000 		.4byte	.LLST18
 1634 042c 0F       		.uleb128 0xf
 1635 042d 55010000 		.4byte	.LASF39
 1636 0431 01       		.byte	0x1
 1637 0432 F402     		.2byte	0x2f4
 1638 0434 6B000000 		.4byte	0x6b
 1639 0438 0E030000 		.4byte	.LLST19
 1640 043c 11       		.uleb128 0x11
 1641 043d 5E010000 		.4byte	.LASF40
 1642 0441 01       		.byte	0x1
 1643 0442 F502     		.2byte	0x2f5
 1644 0444 6B000000 		.4byte	0x6b
 1645 0448 05       		.byte	0x5
 1646 0449 00       		.byte	0
 1647 044a 0C       		.uleb128 0xc
 1648 044b B8010000 		.4byte	.LASF44
 1649 044f 01       		.byte	0x1
 1650 0450 2103     		.2byte	0x321
 1651 0452 00000000 		.4byte	.LFB10
 1652 0456 2C000000 		.4byte	.LFE10-.LFB10
 1653 045a 01       		.uleb128 0x1
 1654 045b 9C       		.byte	0x9c
 1655 045c AC040000 		.4byte	0x4ac
 1656 0460 10       		.uleb128 0x10
 1657 0461 C5040000 		.4byte	.LASF29
 1658 0465 01       		.byte	0x1
 1659 0466 2103     		.2byte	0x321
 1660 0468 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 65


 1661 046c 38030000 		.4byte	.LLST20
 1662 0470 0E       		.uleb128 0xe
 1663 0471 706F7300 		.ascii	"pos\000"
 1664 0475 01       		.byte	0x1
 1665 0476 2403     		.2byte	0x324
 1666 0478 6B000000 		.4byte	0x6b
 1667 047c 01       		.uleb128 0x1
 1668 047d 50       		.byte	0x50
 1669 047e 0F       		.uleb128 0xf
 1670 047f 03030000 		.4byte	.LASF24
 1671 0483 01       		.byte	0x1
 1672 0484 2503     		.2byte	0x325
 1673 0486 6B000000 		.4byte	0x6b
 1674 048a 59030000 		.4byte	.LLST21
 1675 048e 0F       		.uleb128 0xf
 1676 048f 55010000 		.4byte	.LASF39
 1677 0493 01       		.byte	0x1
 1678 0494 2603     		.2byte	0x326
 1679 0496 6B000000 		.4byte	0x6b
 1680 049a 8E030000 		.4byte	.LLST22
 1681 049e 11       		.uleb128 0x11
 1682 049f 5E010000 		.4byte	.LASF40
 1683 04a3 01       		.byte	0x1
 1684 04a4 2703     		.2byte	0x327
 1685 04a6 6B000000 		.4byte	0x6b
 1686 04aa 05       		.byte	0x5
 1687 04ab 00       		.byte	0
 1688 04ac 12       		.uleb128 0x12
 1689 04ad 8E010000 		.4byte	.LASF45
 1690 04b1 01       		.byte	0x1
 1691 04b2 5303     		.2byte	0x353
 1692 04b4 6B000000 		.4byte	0x6b
 1693 04b8 00000000 		.4byte	.LFB11
 1694 04bc 2C000000 		.4byte	.LFE11-.LFB11
 1695 04c0 01       		.uleb128 0x1
 1696 04c1 9C       		.byte	0x9c
 1697 04c2 31050000 		.4byte	0x531
 1698 04c6 10       		.uleb128 0x10
 1699 04c7 11060000 		.4byte	.LASF46
 1700 04cb 01       		.byte	0x1
 1701 04cc 5303     		.2byte	0x353
 1702 04ce 6B000000 		.4byte	0x6b
 1703 04d2 B8030000 		.4byte	.LLST23
 1704 04d6 15       		.uleb128 0x15
 1705 04d7 00000000 		.4byte	.LASF47
 1706 04db 01       		.byte	0x1
 1707 04dc 5303     		.2byte	0x353
 1708 04de 6B000000 		.4byte	0x6b
 1709 04e2 01       		.uleb128 0x1
 1710 04e3 51       		.byte	0x51
 1711 04e4 15       		.uleb128 0x15
 1712 04e5 1D000000 		.4byte	.LASF34
 1713 04e9 01       		.byte	0x1
 1714 04ea 5303     		.2byte	0x353
 1715 04ec 6B000000 		.4byte	0x6b
 1716 04f0 01       		.uleb128 0x1
 1717 04f1 52       		.byte	0x52
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 66


 1718 04f2 0D       		.uleb128 0xd
 1719 04f3 6900     		.ascii	"i\000"
 1720 04f5 01       		.byte	0x1
 1721 04f6 5703     		.2byte	0x357
 1722 04f8 6B000000 		.4byte	0x6b
 1723 04fc D9030000 		.4byte	.LLST24
 1724 0500 0F       		.uleb128 0xf
 1725 0501 12020000 		.4byte	.LASF48
 1726 0505 01       		.byte	0x1
 1727 0506 6103     		.2byte	0x361
 1728 0508 6B000000 		.4byte	0x6b
 1729 050c 03040000 		.4byte	.LLST25
 1730 0510 0F       		.uleb128 0xf
 1731 0511 48020000 		.4byte	.LASF49
 1732 0515 01       		.byte	0x1
 1733 0516 6203     		.2byte	0x362
 1734 0518 6B000000 		.4byte	0x6b
 1735 051c 23040000 		.4byte	.LLST26
 1736 0520 0F       		.uleb128 0xf
 1737 0521 3A020000 		.4byte	.LASF50
 1738 0525 01       		.byte	0x1
 1739 0526 6303     		.2byte	0x363
 1740 0528 31050000 		.4byte	0x531
 1741 052c 4D040000 		.4byte	.LLST27
 1742 0530 00       		.byte	0
 1743 0531 16       		.uleb128 0x16
 1744 0532 04       		.byte	0x4
 1745 0533 6B000000 		.4byte	0x6b
 1746 0537 12       		.uleb128 0x12
 1747 0538 58030000 		.4byte	.LASF51
 1748 053c 01       		.byte	0x1
 1749 053d EF03     		.2byte	0x3ef
 1750 053f 6B000000 		.4byte	0x6b
 1751 0543 00000000 		.4byte	.LFB12
 1752 0547 B0000000 		.4byte	.LFE12-.LFB12
 1753 054b 01       		.uleb128 0x1
 1754 054c 9C       		.byte	0x9c
 1755 054d 12060000 		.4byte	0x612
 1756 0551 10       		.uleb128 0x10
 1757 0552 12020000 		.4byte	.LASF48
 1758 0556 01       		.byte	0x1
 1759 0557 EF03     		.2byte	0x3ef
 1760 0559 6B000000 		.4byte	0x6b
 1761 055d 60040000 		.4byte	.LLST28
 1762 0561 10       		.uleb128 0x10
 1763 0562 11060000 		.4byte	.LASF46
 1764 0566 01       		.byte	0x1
 1765 0567 EF03     		.2byte	0x3ef
 1766 0569 6B000000 		.4byte	0x6b
 1767 056d 81040000 		.4byte	.LLST29
 1768 0571 10       		.uleb128 0x10
 1769 0572 00000000 		.4byte	.LASF47
 1770 0576 01       		.byte	0x1
 1771 0577 F003     		.2byte	0x3f0
 1772 0579 6B000000 		.4byte	0x6b
 1773 057d A2040000 		.4byte	.LLST30
 1774 0581 15       		.uleb128 0x15
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 67


 1775 0582 CC050000 		.4byte	.LASF52
 1776 0586 01       		.byte	0x1
 1777 0587 F003     		.2byte	0x3f0
 1778 0589 77000000 		.4byte	0x77
 1779 058d 01       		.uleb128 0x1
 1780 058e 53       		.byte	0x53
 1781 058f 10       		.uleb128 0x10
 1782 0590 AC040000 		.4byte	.LASF30
 1783 0594 01       		.byte	0x1
 1784 0595 F003     		.2byte	0x3f0
 1785 0597 6B000000 		.4byte	0x6b
 1786 059b C3040000 		.4byte	.LLST31
 1787 059f 0F       		.uleb128 0xf
 1788 05a0 AD020000 		.4byte	.LASF53
 1789 05a4 01       		.byte	0x1
 1790 05a5 F403     		.2byte	0x3f4
 1791 05a7 6B000000 		.4byte	0x6b
 1792 05ab E3040000 		.4byte	.LLST32
 1793 05af 0F       		.uleb128 0xf
 1794 05b0 32020000 		.4byte	.LASF54
 1795 05b4 01       		.byte	0x1
 1796 05b5 F503     		.2byte	0x3f5
 1797 05b7 6B000000 		.4byte	0x6b
 1798 05bb 24050000 		.4byte	.LLST33
 1799 05bf 13       		.uleb128 0x13
 1800 05c0 6E010000 		.4byte	.LASF55
 1801 05c4 01       		.byte	0x1
 1802 05c5 FD03     		.2byte	0x3fd
 1803 05c7 12060000 		.4byte	0x612
 1804 05cb 05       		.uleb128 0x5
 1805 05cc 03       		.byte	0x3
 1806 05cd 04000000 		.4byte	CapSense_1_centroid.5263
 1807 05d1 0F       		.uleb128 0xf
 1808 05d2 5A020000 		.4byte	.LASF56
 1809 05d6 01       		.byte	0x1
 1810 05d7 FF03     		.2byte	0x3ff
 1811 05d9 6B000000 		.4byte	0x6b
 1812 05dd 50050000 		.4byte	.LLST34
 1813 05e1 0F       		.uleb128 0xf
 1814 05e2 AE010000 		.4byte	.LASF57
 1815 05e6 01       		.byte	0x1
 1816 05e7 0004     		.2byte	0x400
 1817 05e9 83000000 		.4byte	0x83
 1818 05ed 98050000 		.4byte	.LLST35
 1819 05f1 0F       		.uleb128 0xf
 1820 05f2 D1010000 		.4byte	.LASF58
 1821 05f6 01       		.byte	0x1
 1822 05f7 0104     		.2byte	0x401
 1823 05f9 9B000000 		.4byte	0x9b
 1824 05fd E3050000 		.4byte	.LLST36
 1825 0601 0F       		.uleb128 0xf
 1826 0602 3A020000 		.4byte	.LASF50
 1827 0606 01       		.byte	0x1
 1828 0607 0204     		.2byte	0x402
 1829 0609 31050000 		.4byte	0x531
 1830 060d 4B060000 		.4byte	.LLST37
 1831 0611 00       		.byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 68


 1832 0612 17       		.uleb128 0x17
 1833 0613 6B000000 		.4byte	0x6b
 1834 0617 22060000 		.4byte	0x622
 1835 061b 18       		.uleb128 0x18
 1836 061c C3000000 		.4byte	0xc3
 1837 0620 02       		.byte	0x2
 1838 0621 00       		.byte	0
 1839 0622 12       		.uleb128 0x12
 1840 0623 8B060000 		.4byte	.LASF59
 1841 0627 01       		.byte	0x1
 1842 0628 9A07     		.2byte	0x79a
 1843 062a 77000000 		.4byte	0x77
 1844 062e 00000000 		.4byte	.LFB14
 1845 0632 0C000000 		.4byte	.LFE14-.LFB14
 1846 0636 01       		.uleb128 0x1
 1847 0637 9C       		.byte	0x9c
 1848 0638 69060000 		.4byte	0x669
 1849 063c 19       		.uleb128 0x19
 1850 063d 783100   		.ascii	"x1\000"
 1851 0640 01       		.byte	0x1
 1852 0641 9A07     		.2byte	0x79a
 1853 0643 77000000 		.4byte	0x77
 1854 0647 74060000 		.4byte	.LLST38
 1855 064b 1A       		.uleb128 0x1a
 1856 064c 783200   		.ascii	"x2\000"
 1857 064f 01       		.byte	0x1
 1858 0650 9A07     		.2byte	0x79a
 1859 0652 77000000 		.4byte	0x77
 1860 0656 01       		.uleb128 0x1
 1861 0657 51       		.byte	0x51
 1862 0658 0D       		.uleb128 0xd
 1863 0659 746D7000 		.ascii	"tmp\000"
 1864 065d 01       		.byte	0x1
 1865 065e 9D07     		.2byte	0x79d
 1866 0660 83000000 		.4byte	0x83
 1867 0664 95060000 		.4byte	.LLST39
 1868 0668 00       		.byte	0
 1869 0669 12       		.uleb128 0x12
 1870 066a F7050000 		.4byte	.LASF60
 1871 066e 01       		.byte	0x1
 1872 066f BC04     		.2byte	0x4bc
 1873 0671 77000000 		.4byte	0x77
 1874 0675 00000000 		.4byte	.LFB13
 1875 0679 5C000000 		.4byte	.LFE13-.LFB13
 1876 067d 01       		.uleb128 0x1
 1877 067e 9C       		.byte	0x9c
 1878 067f 47070000 		.4byte	0x747
 1879 0683 10       		.uleb128 0x10
 1880 0684 C5040000 		.4byte	.LASF29
 1881 0688 01       		.byte	0x1
 1882 0689 BC04     		.2byte	0x4bc
 1883 068b 6B000000 		.4byte	0x6b
 1884 068f B7060000 		.4byte	.LLST40
 1885 0693 0F       		.uleb128 0xf
 1886 0694 F1020000 		.4byte	.LASF61
 1887 0698 01       		.byte	0x1
 1888 0699 C304     		.2byte	0x4c3
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 69


 1889 069b 6B000000 		.4byte	0x6b
 1890 069f D8060000 		.4byte	.LLST41
 1891 06a3 0F       		.uleb128 0xf
 1892 06a4 92000000 		.4byte	.LASF62
 1893 06a8 01       		.byte	0x1
 1894 06a9 C404     		.2byte	0x4c4
 1895 06ab 6B000000 		.4byte	0x6b
 1896 06af EB060000 		.4byte	.LLST42
 1897 06b3 11       		.uleb128 0x11
 1898 06b4 46010000 		.4byte	.LASF63
 1899 06b8 01       		.byte	0x1
 1900 06b9 C504     		.2byte	0x4c5
 1901 06bb 6B000000 		.4byte	0x6b
 1902 06bf 08       		.byte	0x8
 1903 06c0 0F       		.uleb128 0xf
 1904 06c1 12020000 		.4byte	.LASF48
 1905 06c5 01       		.byte	0x1
 1906 06c6 CF04     		.2byte	0x4cf
 1907 06c8 6B000000 		.4byte	0x6b
 1908 06cc 09070000 		.4byte	.LLST43
 1909 06d0 0F       		.uleb128 0xf
 1910 06d1 5A020000 		.4byte	.LASF56
 1911 06d5 01       		.byte	0x1
 1912 06d6 D004     		.2byte	0x4d0
 1913 06d8 77000000 		.4byte	0x77
 1914 06dc 27070000 		.4byte	.LLST44
 1915 06e0 11       		.uleb128 0x11
 1916 06e1 11060000 		.4byte	.LASF46
 1917 06e5 01       		.byte	0x1
 1918 06e6 D104     		.2byte	0x4d1
 1919 06e8 6B000000 		.4byte	0x6b
 1920 06ec 00       		.byte	0
 1921 06ed 11       		.uleb128 0x11
 1922 06ee 00000000 		.4byte	.LASF47
 1923 06f2 01       		.byte	0x1
 1924 06f3 D204     		.2byte	0x4d2
 1925 06f5 6B000000 		.4byte	0x6b
 1926 06f9 05       		.byte	0x5
 1927 06fa 08       		.uleb128 0x8
 1928 06fb 12000000 		.4byte	.LVL126
 1929 06ff AC040000 		.4byte	0x4ac
 1930 0703 18070000 		.4byte	0x718
 1931 0707 09       		.uleb128 0x9
 1932 0708 01       		.uleb128 0x1
 1933 0709 50       		.byte	0x50
 1934 070a 01       		.uleb128 0x1
 1935 070b 30       		.byte	0x30
 1936 070c 09       		.uleb128 0x9
 1937 070d 01       		.uleb128 0x1
 1938 070e 51       		.byte	0x51
 1939 070f 01       		.uleb128 0x1
 1940 0710 35       		.byte	0x35
 1941 0711 09       		.uleb128 0x9
 1942 0712 01       		.uleb128 0x1
 1943 0713 52       		.byte	0x52
 1944 0714 02       		.uleb128 0x2
 1945 0715 08       		.byte	0x8
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 70


 1946 0716 64       		.byte	0x64
 1947 0717 00       		.byte	0
 1948 0718 08       		.uleb128 0x8
 1949 0719 26000000 		.4byte	.LVL127
 1950 071d 37050000 		.4byte	0x537
 1951 0721 3D070000 		.4byte	0x73d
 1952 0725 09       		.uleb128 0x9
 1953 0726 01       		.uleb128 0x1
 1954 0727 51       		.byte	0x51
 1955 0728 01       		.uleb128 0x1
 1956 0729 30       		.byte	0x30
 1957 072a 09       		.uleb128 0x9
 1958 072b 01       		.uleb128 0x1
 1959 072c 52       		.byte	0x52
 1960 072d 01       		.uleb128 0x1
 1961 072e 35       		.byte	0x35
 1962 072f 09       		.uleb128 0x9
 1963 0730 01       		.uleb128 0x1
 1964 0731 53       		.byte	0x53
 1965 0732 03       		.uleb128 0x3
 1966 0733 0A       		.byte	0xa
 1967 0734 0019     		.2byte	0x1900
 1968 0736 09       		.uleb128 0x9
 1969 0737 02       		.uleb128 0x2
 1970 0738 7D       		.byte	0x7d
 1971 0739 00       		.sleb128 0
 1972 073a 01       		.uleb128 0x1
 1973 073b 44       		.byte	0x44
 1974 073c 00       		.byte	0
 1975 073d 0A       		.uleb128 0xa
 1976 073e 46000000 		.4byte	.LVL131
 1977 0742 22060000 		.4byte	0x622
 1978 0746 00       		.byte	0
 1979 0747 17       		.uleb128 0x17
 1980 0748 77000000 		.4byte	0x77
 1981 074c 57070000 		.4byte	0x757
 1982 0750 18       		.uleb128 0x18
 1983 0751 C3000000 		.4byte	0xc3
 1984 0755 04       		.byte	0x4
 1985 0756 00       		.byte	0
 1986 0757 1B       		.uleb128 0x1b
 1987 0758 EE000000 		.4byte	.LASF64
 1988 075c 03       		.byte	0x3
 1989 075d BD02     		.2byte	0x2bd
 1990 075f 47070000 		.4byte	0x747
 1991 0763 17       		.uleb128 0x17
 1992 0764 6B000000 		.4byte	0x6b
 1993 0768 73070000 		.4byte	0x773
 1994 076c 18       		.uleb128 0x18
 1995 076d C3000000 		.4byte	0xc3
 1996 0771 00       		.byte	0
 1997 0772 00       		.byte	0
 1998 0773 1B       		.uleb128 0x1b
 1999 0774 D5020000 		.4byte	.LASF65
 2000 0778 04       		.byte	0x4
 2001 0779 0301     		.2byte	0x103
 2002 077b 63070000 		.4byte	0x763
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 71


 2003 077f 17       		.uleb128 0x17
 2004 0780 8F070000 		.4byte	0x78f
 2005 0784 8F070000 		.4byte	0x78f
 2006 0788 18       		.uleb128 0x18
 2007 0789 C3000000 		.4byte	0xc3
 2008 078d 04       		.byte	0x4
 2009 078e 00       		.byte	0
 2010 078f 1C       		.uleb128 0x1c
 2011 0790 6B000000 		.4byte	0x6b
 2012 0794 1B       		.uleb128 0x1b
 2013 0795 BB030000 		.4byte	.LASF66
 2014 0799 04       		.byte	0x4
 2015 079a 0401     		.2byte	0x104
 2016 079c A0070000 		.4byte	0x7a0
 2017 07a0 1C       		.uleb128 0x1c
 2018 07a1 7F070000 		.4byte	0x77f
 2019 07a5 1D       		.uleb128 0x1d
 2020 07a6 71060000 		.4byte	.LASF67
 2021 07aa 01       		.byte	0x1
 2022 07ab 29       		.byte	0x29
 2023 07ac 47070000 		.4byte	0x747
 2024 07b0 05       		.uleb128 0x5
 2025 07b1 03       		.byte	0x3
 2026 07b2 00000000 		.4byte	CapSense_1_sensorBaseline
 2027 07b6 17       		.uleb128 0x17
 2028 07b7 6B000000 		.4byte	0x6b
 2029 07bb C6070000 		.4byte	0x7c6
 2030 07bf 18       		.uleb128 0x18
 2031 07c0 C3000000 		.4byte	0xc3
 2032 07c4 04       		.byte	0x4
 2033 07c5 00       		.byte	0
 2034 07c6 1D       		.uleb128 0x1d
 2035 07c7 2A060000 		.4byte	.LASF68
 2036 07cb 01       		.byte	0x1
 2037 07cc 2A       		.byte	0x2a
 2038 07cd B6070000 		.4byte	0x7b6
 2039 07d1 05       		.uleb128 0x5
 2040 07d2 03       		.byte	0x3
 2041 07d3 00000000 		.4byte	CapSense_1_sensorBaselineLow
 2042 07d7 1D       		.uleb128 0x1d
 2043 07d8 F3040000 		.4byte	.LASF69
 2044 07dc 01       		.byte	0x1
 2045 07dd 2B       		.byte	0x2b
 2046 07de B6070000 		.4byte	0x7b6
 2047 07e2 05       		.uleb128 0x5
 2048 07e3 03       		.byte	0x3
 2049 07e4 00000000 		.4byte	CapSense_1_sensorSignal
 2050 07e8 1D       		.uleb128 0x1d
 2051 07e9 1F040000 		.4byte	.LASF70
 2052 07ed 01       		.byte	0x1
 2053 07ee 2C       		.byte	0x2c
 2054 07ef 63070000 		.4byte	0x763
 2055 07f3 05       		.uleb128 0x5
 2056 07f4 03       		.byte	0x3
 2057 07f5 00000000 		.4byte	CapSense_1_sensorOnMask
 2058 07f9 1D       		.uleb128 0x1d
 2059 07fa 39030000 		.4byte	.LASF71
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 72


 2060 07fe 01       		.byte	0x1
 2061 07ff 2E       		.byte	0x2e
 2062 0800 B6070000 		.4byte	0x7b6
 2063 0804 05       		.uleb128 0x5
 2064 0805 03       		.byte	0x3
 2065 0806 00000000 		.4byte	CapSense_1_lowBaselineResetCnt
 2066 080a 17       		.uleb128 0x17
 2067 080b 8F070000 		.4byte	0x78f
 2068 080f 1A080000 		.4byte	0x81a
 2069 0813 18       		.uleb128 0x18
 2070 0814 C3000000 		.4byte	0xc3
 2071 0818 00       		.byte	0
 2072 0819 00       		.byte	0
 2073 081a 1D       		.uleb128 0x1d
 2074 081b D7050000 		.4byte	.LASF72
 2075 081f 01       		.byte	0x1
 2076 0820 30       		.byte	0x30
 2077 0821 2B080000 		.4byte	0x82b
 2078 0825 05       		.uleb128 0x5
 2079 0826 03       		.byte	0x3
 2080 0827 00000000 		.4byte	CapSense_1_fingerThreshold
 2081 082b 1C       		.uleb128 0x1c
 2082 082c 0A080000 		.4byte	0x80a
 2083 0830 1D       		.uleb128 0x1d
 2084 0831 C0000000 		.4byte	.LASF73
 2085 0835 01       		.byte	0x1
 2086 0836 34       		.byte	0x34
 2087 0837 41080000 		.4byte	0x841
 2088 083b 05       		.uleb128 0x5
 2089 083c 03       		.byte	0x3
 2090 083d 00000000 		.4byte	CapSense_1_noiseThreshold
 2091 0841 1C       		.uleb128 0x1c
 2092 0842 0A080000 		.4byte	0x80a
 2093 0846 1D       		.uleb128 0x1d
 2094 0847 55060000 		.4byte	.LASF74
 2095 084b 01       		.byte	0x1
 2096 084c 38       		.byte	0x38
 2097 084d 57080000 		.4byte	0x857
 2098 0851 05       		.uleb128 0x5
 2099 0852 03       		.byte	0x3
 2100 0853 00000000 		.4byte	CapSense_1_hysteresis
 2101 0857 1C       		.uleb128 0x1c
 2102 0858 0A080000 		.4byte	0x80a
 2103 085c 1D       		.uleb128 0x1d
 2104 085d DA000000 		.4byte	.LASF75
 2105 0861 01       		.byte	0x1
 2106 0862 3C       		.byte	0x3c
 2107 0863 6D080000 		.4byte	0x86d
 2108 0867 05       		.uleb128 0x5
 2109 0868 03       		.byte	0x3
 2110 0869 00000000 		.4byte	CapSense_1_debounce
 2111 086d 1C       		.uleb128 0x1c
 2112 086e 0A080000 		.4byte	0x80a
 2113 0872 1D       		.uleb128 0x1d
 2114 0873 23050000 		.4byte	.LASF76
 2115 0877 01       		.byte	0x1
 2116 0878 40       		.byte	0x40
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 73


 2117 0879 63070000 		.4byte	0x763
 2118 087d 05       		.uleb128 0x5
 2119 087e 03       		.byte	0x3
 2120 087f 00000000 		.4byte	CapSense_1_debounceCounter
 2121 0883 1D       		.uleb128 0x1d
 2122 0884 1A020000 		.4byte	.LASF77
 2123 0888 01       		.byte	0x1
 2124 0889 44       		.byte	0x44
 2125 088a 94080000 		.4byte	0x894
 2126 088e 05       		.uleb128 0x5
 2127 088f 03       		.byte	0x3
 2128 0890 00000000 		.4byte	CapSense_1_rawDataIndex
 2129 0894 1C       		.uleb128 0x1c
 2130 0895 0A080000 		.4byte	0x80a
 2131 0899 1D       		.uleb128 0x1d
 2132 089a B5020000 		.4byte	.LASF78
 2133 089e 01       		.byte	0x1
 2134 089f 49       		.byte	0x49
 2135 08a0 AA080000 		.4byte	0x8aa
 2136 08a4 05       		.uleb128 0x5
 2137 08a5 03       		.byte	0x3
 2138 08a6 00000000 		.4byte	CapSense_1_numberOfSensors
 2139 08aa 1C       		.uleb128 0x1c
 2140 08ab 0A080000 		.4byte	0x80a
 2141 08af 17       		.uleb128 0x17
 2142 08b0 BF080000 		.4byte	0x8bf
 2143 08b4 BF080000 		.4byte	0x8bf
 2144 08b8 18       		.uleb128 0x18
 2145 08b9 C3000000 		.4byte	0xc3
 2146 08bd 00       		.byte	0
 2147 08be 00       		.byte	0
 2148 08bf 1C       		.uleb128 0x1c
 2149 08c0 77000000 		.4byte	0x77
 2150 08c4 1D       		.uleb128 0x1d
 2151 08c5 0B050000 		.4byte	.LASF79
 2152 08c9 01       		.byte	0x1
 2153 08ca 4E       		.byte	0x4e
 2154 08cb D5080000 		.4byte	0x8d5
 2155 08cf 05       		.uleb128 0x5
 2156 08d0 03       		.byte	0x3
 2157 08d1 00000000 		.4byte	CapSense_1_centroidMult
 2158 08d5 1C       		.uleb128 0x1c
 2159 08d6 AF080000 		.4byte	0x8af
 2160 08da 1D       		.uleb128 0x1d
 2161 08db A9060000 		.4byte	.LASF80
 2162 08df 01       		.byte	0x1
 2163 08e0 52       		.byte	0x52
 2164 08e1 EB080000 		.4byte	0x8eb
 2165 08e5 05       		.uleb128 0x5
 2166 08e6 03       		.byte	0x3
 2167 08e7 00000000 		.4byte	CapSense_1_posFiltersMask
 2168 08eb 1C       		.uleb128 0x1c
 2169 08ec 0A080000 		.4byte	0x80a
 2170 08f0 1D       		.uleb128 0x1d
 2171 08f1 1F030000 		.4byte	.LASF81
 2172 08f5 01       		.byte	0x1
 2173 08f6 56       		.byte	0x56
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 74


 2174 08f7 12060000 		.4byte	0x612
 2175 08fb 05       		.uleb128 0x5
 2176 08fc 03       		.byte	0x3
 2177 08fd 00000000 		.4byte	CapSense_1_posFiltersData
 2178 0901 1E       		.uleb128 0x1e
 2179 0902 FC010000 		.4byte	.LASF82
 2180 0906 FC010000 		.4byte	.LASF82
 2181 090a 03       		.byte	0x3
 2182 090b 9A       		.byte	0x9a
 2183 090c 1E       		.uleb128 0x1e
 2184 090d 18060000 		.4byte	.LASF83
 2185 0911 18060000 		.4byte	.LASF83
 2186 0915 03       		.byte	0x3
 2187 0916 99       		.byte	0x99
 2188 0917 1E       		.uleb128 0x1e
 2189 0918 63020000 		.4byte	.LASF84
 2190 091c 63020000 		.4byte	.LASF84
 2191 0920 03       		.byte	0x3
 2192 0921 9B       		.byte	0x9b
 2193 0922 00       		.byte	0
 2194              		.section	.debug_abbrev,"",%progbits
 2195              	.Ldebug_abbrev0:
 2196 0000 01       		.uleb128 0x1
 2197 0001 11       		.uleb128 0x11
 2198 0002 01       		.byte	0x1
 2199 0003 25       		.uleb128 0x25
 2200 0004 0E       		.uleb128 0xe
 2201 0005 13       		.uleb128 0x13
 2202 0006 0B       		.uleb128 0xb
 2203 0007 03       		.uleb128 0x3
 2204 0008 0E       		.uleb128 0xe
 2205 0009 1B       		.uleb128 0x1b
 2206 000a 0E       		.uleb128 0xe
 2207 000b 55       		.uleb128 0x55
 2208 000c 17       		.uleb128 0x17
 2209 000d 11       		.uleb128 0x11
 2210 000e 01       		.uleb128 0x1
 2211 000f 10       		.uleb128 0x10
 2212 0010 17       		.uleb128 0x17
 2213 0011 00       		.byte	0
 2214 0012 00       		.byte	0
 2215 0013 02       		.uleb128 0x2
 2216 0014 24       		.uleb128 0x24
 2217 0015 00       		.byte	0
 2218 0016 0B       		.uleb128 0xb
 2219 0017 0B       		.uleb128 0xb
 2220 0018 3E       		.uleb128 0x3e
 2221 0019 0B       		.uleb128 0xb
 2222 001a 03       		.uleb128 0x3
 2223 001b 0E       		.uleb128 0xe
 2224 001c 00       		.byte	0
 2225 001d 00       		.byte	0
 2226 001e 03       		.uleb128 0x3
 2227 001f 24       		.uleb128 0x24
 2228 0020 00       		.byte	0
 2229 0021 0B       		.uleb128 0xb
 2230 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 75


 2231 0023 3E       		.uleb128 0x3e
 2232 0024 0B       		.uleb128 0xb
 2233 0025 03       		.uleb128 0x3
 2234 0026 08       		.uleb128 0x8
 2235 0027 00       		.byte	0
 2236 0028 00       		.byte	0
 2237 0029 04       		.uleb128 0x4
 2238 002a 16       		.uleb128 0x16
 2239 002b 00       		.byte	0
 2240 002c 03       		.uleb128 0x3
 2241 002d 0E       		.uleb128 0xe
 2242 002e 3A       		.uleb128 0x3a
 2243 002f 0B       		.uleb128 0xb
 2244 0030 3B       		.uleb128 0x3b
 2245 0031 05       		.uleb128 0x5
 2246 0032 49       		.uleb128 0x49
 2247 0033 13       		.uleb128 0x13
 2248 0034 00       		.byte	0
 2249 0035 00       		.byte	0
 2250 0036 05       		.uleb128 0x5
 2251 0037 2E       		.uleb128 0x2e
 2252 0038 01       		.byte	0x1
 2253 0039 3F       		.uleb128 0x3f
 2254 003a 19       		.uleb128 0x19
 2255 003b 03       		.uleb128 0x3
 2256 003c 0E       		.uleb128 0xe
 2257 003d 3A       		.uleb128 0x3a
 2258 003e 0B       		.uleb128 0xb
 2259 003f 3B       		.uleb128 0x3b
 2260 0040 0B       		.uleb128 0xb
 2261 0041 27       		.uleb128 0x27
 2262 0042 19       		.uleb128 0x19
 2263 0043 11       		.uleb128 0x11
 2264 0044 01       		.uleb128 0x1
 2265 0045 12       		.uleb128 0x12
 2266 0046 06       		.uleb128 0x6
 2267 0047 40       		.uleb128 0x40
 2268 0048 18       		.uleb128 0x18
 2269 0049 9742     		.uleb128 0x2117
 2270 004b 19       		.uleb128 0x19
 2271 004c 01       		.uleb128 0x1
 2272 004d 13       		.uleb128 0x13
 2273 004e 00       		.byte	0
 2274 004f 00       		.byte	0
 2275 0050 06       		.uleb128 0x6
 2276 0051 05       		.uleb128 0x5
 2277 0052 00       		.byte	0
 2278 0053 03       		.uleb128 0x3
 2279 0054 0E       		.uleb128 0xe
 2280 0055 3A       		.uleb128 0x3a
 2281 0056 0B       		.uleb128 0xb
 2282 0057 3B       		.uleb128 0x3b
 2283 0058 0B       		.uleb128 0xb
 2284 0059 49       		.uleb128 0x49
 2285 005a 13       		.uleb128 0x13
 2286 005b 02       		.uleb128 0x2
 2287 005c 18       		.uleb128 0x18
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 76


 2288 005d 00       		.byte	0
 2289 005e 00       		.byte	0
 2290 005f 07       		.uleb128 0x7
 2291 0060 05       		.uleb128 0x5
 2292 0061 00       		.byte	0
 2293 0062 03       		.uleb128 0x3
 2294 0063 0E       		.uleb128 0xe
 2295 0064 3A       		.uleb128 0x3a
 2296 0065 0B       		.uleb128 0xb
 2297 0066 3B       		.uleb128 0x3b
 2298 0067 0B       		.uleb128 0xb
 2299 0068 49       		.uleb128 0x49
 2300 0069 13       		.uleb128 0x13
 2301 006a 02       		.uleb128 0x2
 2302 006b 17       		.uleb128 0x17
 2303 006c 00       		.byte	0
 2304 006d 00       		.byte	0
 2305 006e 08       		.uleb128 0x8
 2306 006f 898201   		.uleb128 0x4109
 2307 0072 01       		.byte	0x1
 2308 0073 11       		.uleb128 0x11
 2309 0074 01       		.uleb128 0x1
 2310 0075 31       		.uleb128 0x31
 2311 0076 13       		.uleb128 0x13
 2312 0077 01       		.uleb128 0x1
 2313 0078 13       		.uleb128 0x13
 2314 0079 00       		.byte	0
 2315 007a 00       		.byte	0
 2316 007b 09       		.uleb128 0x9
 2317 007c 8A8201   		.uleb128 0x410a
 2318 007f 00       		.byte	0
 2319 0080 02       		.uleb128 0x2
 2320 0081 18       		.uleb128 0x18
 2321 0082 9142     		.uleb128 0x2111
 2322 0084 18       		.uleb128 0x18
 2323 0085 00       		.byte	0
 2324 0086 00       		.byte	0
 2325 0087 0A       		.uleb128 0xa
 2326 0088 898201   		.uleb128 0x4109
 2327 008b 00       		.byte	0
 2328 008c 11       		.uleb128 0x11
 2329 008d 01       		.uleb128 0x1
 2330 008e 31       		.uleb128 0x31
 2331 008f 13       		.uleb128 0x13
 2332 0090 00       		.byte	0
 2333 0091 00       		.byte	0
 2334 0092 0B       		.uleb128 0xb
 2335 0093 898201   		.uleb128 0x4109
 2336 0096 01       		.byte	0x1
 2337 0097 11       		.uleb128 0x11
 2338 0098 01       		.uleb128 0x1
 2339 0099 31       		.uleb128 0x31
 2340 009a 13       		.uleb128 0x13
 2341 009b 00       		.byte	0
 2342 009c 00       		.byte	0
 2343 009d 0C       		.uleb128 0xc
 2344 009e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 77


 2345 009f 01       		.byte	0x1
 2346 00a0 3F       		.uleb128 0x3f
 2347 00a1 19       		.uleb128 0x19
 2348 00a2 03       		.uleb128 0x3
 2349 00a3 0E       		.uleb128 0xe
 2350 00a4 3A       		.uleb128 0x3a
 2351 00a5 0B       		.uleb128 0xb
 2352 00a6 3B       		.uleb128 0x3b
 2353 00a7 05       		.uleb128 0x5
 2354 00a8 27       		.uleb128 0x27
 2355 00a9 19       		.uleb128 0x19
 2356 00aa 11       		.uleb128 0x11
 2357 00ab 01       		.uleb128 0x1
 2358 00ac 12       		.uleb128 0x12
 2359 00ad 06       		.uleb128 0x6
 2360 00ae 40       		.uleb128 0x40
 2361 00af 18       		.uleb128 0x18
 2362 00b0 9742     		.uleb128 0x2117
 2363 00b2 19       		.uleb128 0x19
 2364 00b3 01       		.uleb128 0x1
 2365 00b4 13       		.uleb128 0x13
 2366 00b5 00       		.byte	0
 2367 00b6 00       		.byte	0
 2368 00b7 0D       		.uleb128 0xd
 2369 00b8 34       		.uleb128 0x34
 2370 00b9 00       		.byte	0
 2371 00ba 03       		.uleb128 0x3
 2372 00bb 08       		.uleb128 0x8
 2373 00bc 3A       		.uleb128 0x3a
 2374 00bd 0B       		.uleb128 0xb
 2375 00be 3B       		.uleb128 0x3b
 2376 00bf 05       		.uleb128 0x5
 2377 00c0 49       		.uleb128 0x49
 2378 00c1 13       		.uleb128 0x13
 2379 00c2 02       		.uleb128 0x2
 2380 00c3 17       		.uleb128 0x17
 2381 00c4 00       		.byte	0
 2382 00c5 00       		.byte	0
 2383 00c6 0E       		.uleb128 0xe
 2384 00c7 34       		.uleb128 0x34
 2385 00c8 00       		.byte	0
 2386 00c9 03       		.uleb128 0x3
 2387 00ca 08       		.uleb128 0x8
 2388 00cb 3A       		.uleb128 0x3a
 2389 00cc 0B       		.uleb128 0xb
 2390 00cd 3B       		.uleb128 0x3b
 2391 00ce 05       		.uleb128 0x5
 2392 00cf 49       		.uleb128 0x49
 2393 00d0 13       		.uleb128 0x13
 2394 00d1 02       		.uleb128 0x2
 2395 00d2 18       		.uleb128 0x18
 2396 00d3 00       		.byte	0
 2397 00d4 00       		.byte	0
 2398 00d5 0F       		.uleb128 0xf
 2399 00d6 34       		.uleb128 0x34
 2400 00d7 00       		.byte	0
 2401 00d8 03       		.uleb128 0x3
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 78


 2402 00d9 0E       		.uleb128 0xe
 2403 00da 3A       		.uleb128 0x3a
 2404 00db 0B       		.uleb128 0xb
 2405 00dc 3B       		.uleb128 0x3b
 2406 00dd 05       		.uleb128 0x5
 2407 00de 49       		.uleb128 0x49
 2408 00df 13       		.uleb128 0x13
 2409 00e0 02       		.uleb128 0x2
 2410 00e1 17       		.uleb128 0x17
 2411 00e2 00       		.byte	0
 2412 00e3 00       		.byte	0
 2413 00e4 10       		.uleb128 0x10
 2414 00e5 05       		.uleb128 0x5
 2415 00e6 00       		.byte	0
 2416 00e7 03       		.uleb128 0x3
 2417 00e8 0E       		.uleb128 0xe
 2418 00e9 3A       		.uleb128 0x3a
 2419 00ea 0B       		.uleb128 0xb
 2420 00eb 3B       		.uleb128 0x3b
 2421 00ec 05       		.uleb128 0x5
 2422 00ed 49       		.uleb128 0x49
 2423 00ee 13       		.uleb128 0x13
 2424 00ef 02       		.uleb128 0x2
 2425 00f0 17       		.uleb128 0x17
 2426 00f1 00       		.byte	0
 2427 00f2 00       		.byte	0
 2428 00f3 11       		.uleb128 0x11
 2429 00f4 34       		.uleb128 0x34
 2430 00f5 00       		.byte	0
 2431 00f6 03       		.uleb128 0x3
 2432 00f7 0E       		.uleb128 0xe
 2433 00f8 3A       		.uleb128 0x3a
 2434 00f9 0B       		.uleb128 0xb
 2435 00fa 3B       		.uleb128 0x3b
 2436 00fb 05       		.uleb128 0x5
 2437 00fc 49       		.uleb128 0x49
 2438 00fd 13       		.uleb128 0x13
 2439 00fe 1C       		.uleb128 0x1c
 2440 00ff 0B       		.uleb128 0xb
 2441 0100 00       		.byte	0
 2442 0101 00       		.byte	0
 2443 0102 12       		.uleb128 0x12
 2444 0103 2E       		.uleb128 0x2e
 2445 0104 01       		.byte	0x1
 2446 0105 3F       		.uleb128 0x3f
 2447 0106 19       		.uleb128 0x19
 2448 0107 03       		.uleb128 0x3
 2449 0108 0E       		.uleb128 0xe
 2450 0109 3A       		.uleb128 0x3a
 2451 010a 0B       		.uleb128 0xb
 2452 010b 3B       		.uleb128 0x3b
 2453 010c 05       		.uleb128 0x5
 2454 010d 27       		.uleb128 0x27
 2455 010e 19       		.uleb128 0x19
 2456 010f 49       		.uleb128 0x49
 2457 0110 13       		.uleb128 0x13
 2458 0111 11       		.uleb128 0x11
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 79


 2459 0112 01       		.uleb128 0x1
 2460 0113 12       		.uleb128 0x12
 2461 0114 06       		.uleb128 0x6
 2462 0115 40       		.uleb128 0x40
 2463 0116 18       		.uleb128 0x18
 2464 0117 9742     		.uleb128 0x2117
 2465 0119 19       		.uleb128 0x19
 2466 011a 01       		.uleb128 0x1
 2467 011b 13       		.uleb128 0x13
 2468 011c 00       		.byte	0
 2469 011d 00       		.byte	0
 2470 011e 13       		.uleb128 0x13
 2471 011f 34       		.uleb128 0x34
 2472 0120 00       		.byte	0
 2473 0121 03       		.uleb128 0x3
 2474 0122 0E       		.uleb128 0xe
 2475 0123 3A       		.uleb128 0x3a
 2476 0124 0B       		.uleb128 0xb
 2477 0125 3B       		.uleb128 0x3b
 2478 0126 05       		.uleb128 0x5
 2479 0127 49       		.uleb128 0x49
 2480 0128 13       		.uleb128 0x13
 2481 0129 02       		.uleb128 0x2
 2482 012a 18       		.uleb128 0x18
 2483 012b 00       		.byte	0
 2484 012c 00       		.byte	0
 2485 012d 14       		.uleb128 0x14
 2486 012e 34       		.uleb128 0x34
 2487 012f 00       		.byte	0
 2488 0130 03       		.uleb128 0x3
 2489 0131 0E       		.uleb128 0xe
 2490 0132 3A       		.uleb128 0x3a
 2491 0133 0B       		.uleb128 0xb
 2492 0134 3B       		.uleb128 0x3b
 2493 0135 05       		.uleb128 0x5
 2494 0136 49       		.uleb128 0x49
 2495 0137 13       		.uleb128 0x13
 2496 0138 00       		.byte	0
 2497 0139 00       		.byte	0
 2498 013a 15       		.uleb128 0x15
 2499 013b 05       		.uleb128 0x5
 2500 013c 00       		.byte	0
 2501 013d 03       		.uleb128 0x3
 2502 013e 0E       		.uleb128 0xe
 2503 013f 3A       		.uleb128 0x3a
 2504 0140 0B       		.uleb128 0xb
 2505 0141 3B       		.uleb128 0x3b
 2506 0142 05       		.uleb128 0x5
 2507 0143 49       		.uleb128 0x49
 2508 0144 13       		.uleb128 0x13
 2509 0145 02       		.uleb128 0x2
 2510 0146 18       		.uleb128 0x18
 2511 0147 00       		.byte	0
 2512 0148 00       		.byte	0
 2513 0149 16       		.uleb128 0x16
 2514 014a 0F       		.uleb128 0xf
 2515 014b 00       		.byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 80


 2516 014c 0B       		.uleb128 0xb
 2517 014d 0B       		.uleb128 0xb
 2518 014e 49       		.uleb128 0x49
 2519 014f 13       		.uleb128 0x13
 2520 0150 00       		.byte	0
 2521 0151 00       		.byte	0
 2522 0152 17       		.uleb128 0x17
 2523 0153 01       		.uleb128 0x1
 2524 0154 01       		.byte	0x1
 2525 0155 49       		.uleb128 0x49
 2526 0156 13       		.uleb128 0x13
 2527 0157 01       		.uleb128 0x1
 2528 0158 13       		.uleb128 0x13
 2529 0159 00       		.byte	0
 2530 015a 00       		.byte	0
 2531 015b 18       		.uleb128 0x18
 2532 015c 21       		.uleb128 0x21
 2533 015d 00       		.byte	0
 2534 015e 49       		.uleb128 0x49
 2535 015f 13       		.uleb128 0x13
 2536 0160 2F       		.uleb128 0x2f
 2537 0161 0B       		.uleb128 0xb
 2538 0162 00       		.byte	0
 2539 0163 00       		.byte	0
 2540 0164 19       		.uleb128 0x19
 2541 0165 05       		.uleb128 0x5
 2542 0166 00       		.byte	0
 2543 0167 03       		.uleb128 0x3
 2544 0168 08       		.uleb128 0x8
 2545 0169 3A       		.uleb128 0x3a
 2546 016a 0B       		.uleb128 0xb
 2547 016b 3B       		.uleb128 0x3b
 2548 016c 05       		.uleb128 0x5
 2549 016d 49       		.uleb128 0x49
 2550 016e 13       		.uleb128 0x13
 2551 016f 02       		.uleb128 0x2
 2552 0170 17       		.uleb128 0x17
 2553 0171 00       		.byte	0
 2554 0172 00       		.byte	0
 2555 0173 1A       		.uleb128 0x1a
 2556 0174 05       		.uleb128 0x5
 2557 0175 00       		.byte	0
 2558 0176 03       		.uleb128 0x3
 2559 0177 08       		.uleb128 0x8
 2560 0178 3A       		.uleb128 0x3a
 2561 0179 0B       		.uleb128 0xb
 2562 017a 3B       		.uleb128 0x3b
 2563 017b 05       		.uleb128 0x5
 2564 017c 49       		.uleb128 0x49
 2565 017d 13       		.uleb128 0x13
 2566 017e 02       		.uleb128 0x2
 2567 017f 18       		.uleb128 0x18
 2568 0180 00       		.byte	0
 2569 0181 00       		.byte	0
 2570 0182 1B       		.uleb128 0x1b
 2571 0183 34       		.uleb128 0x34
 2572 0184 00       		.byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 81


 2573 0185 03       		.uleb128 0x3
 2574 0186 0E       		.uleb128 0xe
 2575 0187 3A       		.uleb128 0x3a
 2576 0188 0B       		.uleb128 0xb
 2577 0189 3B       		.uleb128 0x3b
 2578 018a 05       		.uleb128 0x5
 2579 018b 49       		.uleb128 0x49
 2580 018c 13       		.uleb128 0x13
 2581 018d 3F       		.uleb128 0x3f
 2582 018e 19       		.uleb128 0x19
 2583 018f 3C       		.uleb128 0x3c
 2584 0190 19       		.uleb128 0x19
 2585 0191 00       		.byte	0
 2586 0192 00       		.byte	0
 2587 0193 1C       		.uleb128 0x1c
 2588 0194 26       		.uleb128 0x26
 2589 0195 00       		.byte	0
 2590 0196 49       		.uleb128 0x49
 2591 0197 13       		.uleb128 0x13
 2592 0198 00       		.byte	0
 2593 0199 00       		.byte	0
 2594 019a 1D       		.uleb128 0x1d
 2595 019b 34       		.uleb128 0x34
 2596 019c 00       		.byte	0
 2597 019d 03       		.uleb128 0x3
 2598 019e 0E       		.uleb128 0xe
 2599 019f 3A       		.uleb128 0x3a
 2600 01a0 0B       		.uleb128 0xb
 2601 01a1 3B       		.uleb128 0x3b
 2602 01a2 0B       		.uleb128 0xb
 2603 01a3 49       		.uleb128 0x49
 2604 01a4 13       		.uleb128 0x13
 2605 01a5 3F       		.uleb128 0x3f
 2606 01a6 19       		.uleb128 0x19
 2607 01a7 02       		.uleb128 0x2
 2608 01a8 18       		.uleb128 0x18
 2609 01a9 00       		.byte	0
 2610 01aa 00       		.byte	0
 2611 01ab 1E       		.uleb128 0x1e
 2612 01ac 2E       		.uleb128 0x2e
 2613 01ad 00       		.byte	0
 2614 01ae 3F       		.uleb128 0x3f
 2615 01af 19       		.uleb128 0x19
 2616 01b0 3C       		.uleb128 0x3c
 2617 01b1 19       		.uleb128 0x19
 2618 01b2 6E       		.uleb128 0x6e
 2619 01b3 0E       		.uleb128 0xe
 2620 01b4 03       		.uleb128 0x3
 2621 01b5 0E       		.uleb128 0xe
 2622 01b6 3A       		.uleb128 0x3a
 2623 01b7 0B       		.uleb128 0xb
 2624 01b8 3B       		.uleb128 0x3b
 2625 01b9 0B       		.uleb128 0xb
 2626 01ba 00       		.byte	0
 2627 01bb 00       		.byte	0
 2628 01bc 00       		.byte	0
 2629              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 82


 2630              	.Ldebug_loc0:
 2631              	.LLST0:
 2632 0000 00000000 		.4byte	.LVL1
 2633 0004 07000000 		.4byte	.LVL2-1
 2634 0008 0100     		.2byte	0x1
 2635 000a 50       		.byte	0x50
 2636 000b 07000000 		.4byte	.LVL2-1
 2637 000f 18000000 		.4byte	.LFE1
 2638 0013 0400     		.2byte	0x4
 2639 0015 F3       		.byte	0xf3
 2640 0016 01       		.uleb128 0x1
 2641 0017 50       		.byte	0x50
 2642 0018 9F       		.byte	0x9f
 2643 0019 00000000 		.4byte	0
 2644 001d 00000000 		.4byte	0
 2645              	.LLST1:
 2646 0021 02000000 		.4byte	.LVL5
 2647 0025 06000000 		.4byte	.LVL6
 2648 0029 0200     		.2byte	0x2
 2649 002b 30       		.byte	0x30
 2650 002c 9F       		.byte	0x9f
 2651 002d 06000000 		.4byte	.LVL6
 2652 0031 0E000000 		.4byte	.LVL8
 2653 0035 0100     		.2byte	0x1
 2654 0037 54       		.byte	0x54
 2655 0038 10000000 		.4byte	.LVL9
 2656 003c 16000000 		.4byte	.LFE2
 2657 0040 0100     		.2byte	0x1
 2658 0042 54       		.byte	0x54
 2659 0043 00000000 		.4byte	0
 2660 0047 00000000 		.4byte	0
 2661              	.LLST2:
 2662 004b 12000000 		.4byte	.LVL12
 2663 004f 34000000 		.4byte	.LVL16
 2664 0053 0100     		.2byte	0x1
 2665 0055 54       		.byte	0x54
 2666 0056 36000000 		.4byte	.LVL17
 2667 005a 3C000000 		.4byte	.LVL18
 2668 005e 0100     		.2byte	0x1
 2669 0060 54       		.byte	0x54
 2670 0061 00000000 		.4byte	0
 2671 0065 00000000 		.4byte	0
 2672              	.LLST3:
 2673 0069 1C000000 		.4byte	.LVL13
 2674 006d 28000000 		.4byte	.LVL14
 2675 0071 0100     		.2byte	0x1
 2676 0073 53       		.byte	0x53
 2677 0074 28000000 		.4byte	.LVL14
 2678 0078 34000000 		.4byte	.LVL16
 2679 007c 0700     		.2byte	0x7
 2680 007e 31       		.byte	0x31
 2681 007f 74       		.byte	0x74
 2682 0080 00       		.sleb128 0
 2683 0081 37       		.byte	0x37
 2684 0082 1A       		.byte	0x1a
 2685 0083 24       		.byte	0x24
 2686 0084 9F       		.byte	0x9f
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 83


 2687 0085 34000000 		.4byte	.LVL16
 2688 0089 36000000 		.4byte	.LVL17
 2689 008d 0700     		.2byte	0x7
 2690 008f 31       		.byte	0x31
 2691 0090 74       		.byte	0x74
 2692 0091 7F       		.sleb128 -1
 2693 0092 37       		.byte	0x37
 2694 0093 1A       		.byte	0x1a
 2695 0094 24       		.byte	0x24
 2696 0095 9F       		.byte	0x9f
 2697 0096 00000000 		.4byte	0
 2698 009a 00000000 		.4byte	0
 2699              	.LLST4:
 2700 009e 00000000 		.4byte	.LVL19
 2701 00a2 32000000 		.4byte	.LVL27
 2702 00a6 0100     		.2byte	0x1
 2703 00a8 50       		.byte	0x50
 2704 00a9 32000000 		.4byte	.LVL27
 2705 00ad 3E000000 		.4byte	.LVL29
 2706 00b1 0400     		.2byte	0x4
 2707 00b3 F3       		.byte	0xf3
 2708 00b4 01       		.uleb128 0x1
 2709 00b5 50       		.byte	0x50
 2710 00b6 9F       		.byte	0x9f
 2711 00b7 3E000000 		.4byte	.LVL29
 2712 00bb 52000000 		.4byte	.LVL32
 2713 00bf 0100     		.2byte	0x1
 2714 00c1 50       		.byte	0x50
 2715 00c2 52000000 		.4byte	.LVL32
 2716 00c6 A4000000 		.4byte	.LFE4
 2717 00ca 0400     		.2byte	0x4
 2718 00cc F3       		.byte	0xf3
 2719 00cd 01       		.uleb128 0x1
 2720 00ce 50       		.byte	0x50
 2721 00cf 9F       		.byte	0x9f
 2722 00d0 00000000 		.4byte	0
 2723 00d4 00000000 		.4byte	0
 2724              	.LLST5:
 2725 00d8 50000000 		.4byte	.LVL31
 2726 00dc 58000000 		.4byte	.LVL33
 2727 00e0 0500     		.2byte	0x5
 2728 00e2 71       		.byte	0x71
 2729 00e3 00       		.sleb128 0
 2730 00e4 38       		.byte	0x38
 2731 00e5 24       		.byte	0x24
 2732 00e6 9F       		.byte	0x9f
 2733 00e7 58000000 		.4byte	.LVL33
 2734 00eb 5A000000 		.4byte	.LVL34
 2735 00ef 0100     		.2byte	0x1
 2736 00f1 52       		.byte	0x52
 2737 00f2 5A000000 		.4byte	.LVL34
 2738 00f6 6C000000 		.4byte	.LVL36
 2739 00fa 0100     		.2byte	0x1
 2740 00fc 53       		.byte	0x53
 2741 00fd 00000000 		.4byte	0
 2742 0101 00000000 		.4byte	0
 2743              	.LLST6:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 84


 2744 0105 18000000 		.4byte	.LVL22
 2745 0109 1C000000 		.4byte	.LVL23
 2746 010d 0100     		.2byte	0x1
 2747 010f 55       		.byte	0x55
 2748 0110 20000000 		.4byte	.LVL24
 2749 0114 8E000000 		.4byte	.LVL40
 2750 0118 0100     		.2byte	0x1
 2751 011a 55       		.byte	0x55
 2752 011b 00000000 		.4byte	0
 2753 011f 00000000 		.4byte	0
 2754              	.LLST7:
 2755 0123 0A000000 		.4byte	.LVL21
 2756 0127 2A000000 		.4byte	.LVL26
 2757 012b 0100     		.2byte	0x1
 2758 012d 53       		.byte	0x53
 2759 012e 46000000 		.4byte	.LVL30
 2760 0132 5A000000 		.4byte	.LVL34
 2761 0136 0100     		.2byte	0x1
 2762 0138 53       		.byte	0x53
 2763 0139 00000000 		.4byte	0
 2764 013d 00000000 		.4byte	0
 2765              	.LLST8:
 2766 0141 18000000 		.4byte	.LVL22
 2767 0145 1C000000 		.4byte	.LVL23
 2768 0149 0200     		.2byte	0x2
 2769 014b 31       		.byte	0x31
 2770 014c 9F       		.byte	0x9f
 2771 014d 20000000 		.4byte	.LVL24
 2772 0151 22000000 		.4byte	.LVL25
 2773 0155 0200     		.2byte	0x2
 2774 0157 30       		.byte	0x30
 2775 0158 9F       		.byte	0x9f
 2776 0159 22000000 		.4byte	.LVL25
 2777 015d 8E000000 		.4byte	.LVL40
 2778 0161 0100     		.2byte	0x1
 2779 0163 56       		.byte	0x56
 2780 0164 00000000 		.4byte	0
 2781 0168 00000000 		.4byte	0
 2782              	.LLST9:
 2783 016c 02000000 		.4byte	.LVL41
 2784 0170 06000000 		.4byte	.LVL42
 2785 0174 0200     		.2byte	0x2
 2786 0176 30       		.byte	0x30
 2787 0177 9F       		.byte	0x9f
 2788 0178 06000000 		.4byte	.LVL42
 2789 017c 20000000 		.4byte	.LVL45
 2790 0180 0100     		.2byte	0x1
 2791 0182 54       		.byte	0x54
 2792 0183 22000000 		.4byte	.LVL46
 2793 0187 28000000 		.4byte	.LVL47
 2794 018b 0100     		.2byte	0x1
 2795 018d 54       		.byte	0x54
 2796 018e 00000000 		.4byte	0
 2797 0192 00000000 		.4byte	0
 2798              	.LLST10:
 2799 0196 10000000 		.4byte	.LVL43
 2800 019a 1D000000 		.4byte	.LVL44-1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 85


 2801 019e 0100     		.2byte	0x1
 2802 01a0 53       		.byte	0x53
 2803 01a1 1D000000 		.4byte	.LVL44-1
 2804 01a5 20000000 		.4byte	.LVL45
 2805 01a9 0700     		.2byte	0x7
 2806 01ab 31       		.byte	0x31
 2807 01ac 74       		.byte	0x74
 2808 01ad 00       		.sleb128 0
 2809 01ae 37       		.byte	0x37
 2810 01af 1A       		.byte	0x1a
 2811 01b0 24       		.byte	0x24
 2812 01b1 9F       		.byte	0x9f
 2813 01b2 20000000 		.4byte	.LVL45
 2814 01b6 22000000 		.4byte	.LVL46
 2815 01ba 0700     		.2byte	0x7
 2816 01bc 31       		.byte	0x31
 2817 01bd 74       		.byte	0x74
 2818 01be 7F       		.sleb128 -1
 2819 01bf 37       		.byte	0x37
 2820 01c0 1A       		.byte	0x1a
 2821 01c1 24       		.byte	0x24
 2822 01c2 9F       		.byte	0x9f
 2823 01c3 00000000 		.4byte	0
 2824 01c7 00000000 		.4byte	0
 2825              	.LLST11:
 2826 01cb 00000000 		.4byte	.LVL48
 2827 01cf 20000000 		.4byte	.LVL51
 2828 01d3 0100     		.2byte	0x1
 2829 01d5 50       		.byte	0x50
 2830 01d6 20000000 		.4byte	.LVL51
 2831 01da 2E000000 		.4byte	.LVL52
 2832 01de 0400     		.2byte	0x4
 2833 01e0 F3       		.byte	0xf3
 2834 01e1 01       		.uleb128 0x1
 2835 01e2 50       		.byte	0x50
 2836 01e3 9F       		.byte	0x9f
 2837 01e4 2E000000 		.4byte	.LVL52
 2838 01e8 32000000 		.4byte	.LVL53
 2839 01ec 0100     		.2byte	0x1
 2840 01ee 50       		.byte	0x50
 2841 01ef 32000000 		.4byte	.LVL53
 2842 01f3 5C000000 		.4byte	.LFE6
 2843 01f7 0400     		.2byte	0x4
 2844 01f9 F3       		.byte	0xf3
 2845 01fa 01       		.uleb128 0x1
 2846 01fb 50       		.byte	0x50
 2847 01fc 9F       		.byte	0x9f
 2848 01fd 00000000 		.4byte	0
 2849 0201 00000000 		.4byte	0
 2850              	.LLST12:
 2851 0205 00000000 		.4byte	.LVL54
 2852 0209 06000000 		.4byte	.LVL56
 2853 020d 0100     		.2byte	0x1
 2854 020f 50       		.byte	0x50
 2855 0210 06000000 		.4byte	.LVL56
 2856 0214 1C000000 		.4byte	.LFE7
 2857 0218 0400     		.2byte	0x4
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 86


 2858 021a F3       		.byte	0xf3
 2859 021b 01       		.uleb128 0x1
 2860 021c 50       		.byte	0x50
 2861 021d 9F       		.byte	0x9f
 2862 021e 00000000 		.4byte	0
 2863 0222 00000000 		.4byte	0
 2864              	.LLST13:
 2865 0226 02000000 		.4byte	.LVL55
 2866 022a 06000000 		.4byte	.LVL56
 2867 022e 0200     		.2byte	0x2
 2868 0230 30       		.byte	0x30
 2869 0231 9F       		.byte	0x9f
 2870 0232 06000000 		.4byte	.LVL56
 2871 0236 12000000 		.4byte	.LVL59
 2872 023a 0100     		.2byte	0x1
 2873 023c 54       		.byte	0x54
 2874 023d 14000000 		.4byte	.LVL60
 2875 0241 1C000000 		.4byte	.LFE7
 2876 0245 0100     		.2byte	0x1
 2877 0247 54       		.byte	0x54
 2878 0248 00000000 		.4byte	0
 2879 024c 00000000 		.4byte	0
 2880              	.LLST14:
 2881 0250 02000000 		.4byte	.LVL55
 2882 0254 06000000 		.4byte	.LVL56
 2883 0258 0200     		.2byte	0x2
 2884 025a 30       		.byte	0x30
 2885 025b 9F       		.byte	0x9f
 2886 025c 06000000 		.4byte	.LVL56
 2887 0260 1C000000 		.4byte	.LFE7
 2888 0264 0100     		.2byte	0x1
 2889 0266 55       		.byte	0x55
 2890 0267 00000000 		.4byte	0
 2891 026b 00000000 		.4byte	0
 2892              	.LLST15:
 2893 026f 02000000 		.4byte	.LVL61
 2894 0273 08000000 		.4byte	.LVL62
 2895 0277 0200     		.2byte	0x2
 2896 0279 30       		.byte	0x30
 2897 027a 9F       		.byte	0x9f
 2898 027b 08000000 		.4byte	.LVL62
 2899 027f 14000000 		.4byte	.LVL65
 2900 0283 0100     		.2byte	0x1
 2901 0285 54       		.byte	0x54
 2902 0286 16000000 		.4byte	.LVL66
 2903 028a 1E000000 		.4byte	.LFE8
 2904 028e 0100     		.2byte	0x1
 2905 0290 54       		.byte	0x54
 2906 0291 00000000 		.4byte	0
 2907 0295 00000000 		.4byte	0
 2908              	.LLST16:
 2909 0299 02000000 		.4byte	.LVL61
 2910 029d 08000000 		.4byte	.LVL62
 2911 02a1 0200     		.2byte	0x2
 2912 02a3 30       		.byte	0x30
 2913 02a4 9F       		.byte	0x9f
 2914 02a5 08000000 		.4byte	.LVL62
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 87


 2915 02a9 1E000000 		.4byte	.LFE8
 2916 02ad 0100     		.2byte	0x1
 2917 02af 55       		.byte	0x55
 2918 02b0 00000000 		.4byte	0
 2919 02b4 00000000 		.4byte	0
 2920              	.LLST17:
 2921 02b8 00000000 		.4byte	.LVL67
 2922 02bc 04000000 		.4byte	.LVL69
 2923 02c0 0100     		.2byte	0x1
 2924 02c2 50       		.byte	0x50
 2925 02c3 04000000 		.4byte	.LVL69
 2926 02c7 28000000 		.4byte	.LFE9
 2927 02cb 0400     		.2byte	0x4
 2928 02cd F3       		.byte	0xf3
 2929 02ce 01       		.uleb128 0x1
 2930 02cf 50       		.byte	0x50
 2931 02d0 9F       		.byte	0x9f
 2932 02d1 00000000 		.4byte	0
 2933 02d5 00000000 		.4byte	0
 2934              	.LLST18:
 2935 02d9 10000000 		.4byte	.LVL71
 2936 02dd 16000000 		.4byte	.LVL72
 2937 02e1 0100     		.2byte	0x1
 2938 02e3 52       		.byte	0x52
 2939 02e4 16000000 		.4byte	.LVL72
 2940 02e8 1A000000 		.4byte	.LVL73
 2941 02ec 0700     		.2byte	0x7
 2942 02ee 31       		.byte	0x31
 2943 02ef 73       		.byte	0x73
 2944 02f0 00       		.sleb128 0
 2945 02f1 37       		.byte	0x37
 2946 02f2 1A       		.byte	0x1a
 2947 02f3 24       		.byte	0x24
 2948 02f4 9F       		.byte	0x9f
 2949 02f5 1A000000 		.4byte	.LVL73
 2950 02f9 1C000000 		.4byte	.LVL74
 2951 02fd 0700     		.2byte	0x7
 2952 02ff 31       		.byte	0x31
 2953 0300 73       		.byte	0x73
 2954 0301 7F       		.sleb128 -1
 2955 0302 37       		.byte	0x37
 2956 0303 1A       		.byte	0x1a
 2957 0304 24       		.byte	0x24
 2958 0305 9F       		.byte	0x9f
 2959 0306 00000000 		.4byte	0
 2960 030a 00000000 		.4byte	0
 2961              	.LLST19:
 2962 030e 02000000 		.4byte	.LVL68
 2963 0312 04000000 		.4byte	.LVL69
 2964 0316 0200     		.2byte	0x2
 2965 0318 30       		.byte	0x30
 2966 0319 9F       		.byte	0x9f
 2967 031a 04000000 		.4byte	.LVL69
 2968 031e 1A000000 		.4byte	.LVL73
 2969 0322 0100     		.2byte	0x1
 2970 0324 53       		.byte	0x53
 2971 0325 1C000000 		.4byte	.LVL74
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 88


 2972 0329 28000000 		.4byte	.LFE9
 2973 032d 0100     		.2byte	0x1
 2974 032f 53       		.byte	0x53
 2975 0330 00000000 		.4byte	0
 2976 0334 00000000 		.4byte	0
 2977              	.LLST20:
 2978 0338 00000000 		.4byte	.LVL75
 2979 033c 04000000 		.4byte	.LVL77
 2980 0340 0100     		.2byte	0x1
 2981 0342 50       		.byte	0x50
 2982 0343 04000000 		.4byte	.LVL77
 2983 0347 2C000000 		.4byte	.LFE10
 2984 034b 0400     		.2byte	0x4
 2985 034d F3       		.byte	0xf3
 2986 034e 01       		.uleb128 0x1
 2987 034f 50       		.byte	0x50
 2988 0350 9F       		.byte	0x9f
 2989 0351 00000000 		.4byte	0
 2990 0355 00000000 		.4byte	0
 2991              	.LLST21:
 2992 0359 10000000 		.4byte	.LVL79
 2993 035d 18000000 		.4byte	.LVL80
 2994 0361 0100     		.2byte	0x1
 2995 0363 52       		.byte	0x52
 2996 0364 18000000 		.4byte	.LVL80
 2997 0368 1C000000 		.4byte	.LVL81
 2998 036c 0700     		.2byte	0x7
 2999 036e 31       		.byte	0x31
 3000 036f 73       		.byte	0x73
 3001 0370 00       		.sleb128 0
 3002 0371 37       		.byte	0x37
 3003 0372 1A       		.byte	0x1a
 3004 0373 24       		.byte	0x24
 3005 0374 9F       		.byte	0x9f
 3006 0375 1C000000 		.4byte	.LVL81
 3007 0379 1E000000 		.4byte	.LVL82
 3008 037d 0700     		.2byte	0x7
 3009 037f 31       		.byte	0x31
 3010 0380 73       		.byte	0x73
 3011 0381 7F       		.sleb128 -1
 3012 0382 37       		.byte	0x37
 3013 0383 1A       		.byte	0x1a
 3014 0384 24       		.byte	0x24
 3015 0385 9F       		.byte	0x9f
 3016 0386 00000000 		.4byte	0
 3017 038a 00000000 		.4byte	0
 3018              	.LLST22:
 3019 038e 02000000 		.4byte	.LVL76
 3020 0392 04000000 		.4byte	.LVL77
 3021 0396 0200     		.2byte	0x2
 3022 0398 30       		.byte	0x30
 3023 0399 9F       		.byte	0x9f
 3024 039a 04000000 		.4byte	.LVL77
 3025 039e 1C000000 		.4byte	.LVL81
 3026 03a2 0100     		.2byte	0x1
 3027 03a4 53       		.byte	0x53
 3028 03a5 1E000000 		.4byte	.LVL82
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 89


 3029 03a9 2C000000 		.4byte	.LFE10
 3030 03ad 0100     		.2byte	0x1
 3031 03af 53       		.byte	0x53
 3032 03b0 00000000 		.4byte	0
 3033 03b4 00000000 		.4byte	0
 3034              	.LLST23:
 3035 03b8 00000000 		.4byte	.LVL83
 3036 03bc 0A000000 		.4byte	.LVL86
 3037 03c0 0100     		.2byte	0x1
 3038 03c2 50       		.byte	0x50
 3039 03c3 0A000000 		.4byte	.LVL86
 3040 03c7 2C000000 		.4byte	.LFE11
 3041 03cb 0400     		.2byte	0x4
 3042 03cd F3       		.byte	0xf3
 3043 03ce 01       		.uleb128 0x1
 3044 03cf 50       		.byte	0x50
 3045 03d0 9F       		.byte	0x9f
 3046 03d1 00000000 		.4byte	0
 3047 03d5 00000000 		.4byte	0
 3048              	.LLST24:
 3049 03d9 06000000 		.4byte	.LVL85
 3050 03dd 0E000000 		.4byte	.LVL87
 3051 03e1 0200     		.2byte	0x2
 3052 03e3 30       		.byte	0x30
 3053 03e4 9F       		.byte	0x9f
 3054 03e5 0E000000 		.4byte	.LVL87
 3055 03e9 1E000000 		.4byte	.LVL90
 3056 03ed 0100     		.2byte	0x1
 3057 03ef 53       		.byte	0x53
 3058 03f0 20000000 		.4byte	.LVL91
 3059 03f4 2C000000 		.4byte	.LFE11
 3060 03f8 0100     		.2byte	0x1
 3061 03fa 53       		.byte	0x53
 3062 03fb 00000000 		.4byte	0
 3063 03ff 00000000 		.4byte	0
 3064              	.LLST25:
 3065 0403 02000000 		.4byte	.LVL84
 3066 0407 0E000000 		.4byte	.LVL87
 3067 040b 0300     		.2byte	0x3
 3068 040d 09       		.byte	0x9
 3069 040e FF       		.byte	0xff
 3070 040f 9F       		.byte	0x9f
 3071 0410 0E000000 		.4byte	.LVL87
 3072 0414 2C000000 		.4byte	.LFE11
 3073 0418 0100     		.2byte	0x1
 3074 041a 50       		.byte	0x50
 3075 041b 00000000 		.4byte	0
 3076 041f 00000000 		.4byte	0
 3077              	.LLST26:
 3078 0423 02000000 		.4byte	.LVL84
 3079 0427 0E000000 		.4byte	.LVL87
 3080 042b 0200     		.2byte	0x2
 3081 042d 30       		.byte	0x30
 3082 042e 9F       		.byte	0x9f
 3083 042f 0E000000 		.4byte	.LVL87
 3084 0433 1A000000 		.4byte	.LVL88
 3085 0437 0100     		.2byte	0x1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 90


 3086 0439 56       		.byte	0x56
 3087 043a 1C000000 		.4byte	.LVL89
 3088 043e 26000000 		.4byte	.LVL92
 3089 0442 0100     		.2byte	0x1
 3090 0444 56       		.byte	0x56
 3091 0445 00000000 		.4byte	0
 3092 0449 00000000 		.4byte	0
 3093              	.LLST27:
 3094 044d 06000000 		.4byte	.LVL85
 3095 0451 26000000 		.4byte	.LVL92
 3096 0455 0100     		.2byte	0x1
 3097 0457 55       		.byte	0x55
 3098 0458 00000000 		.4byte	0
 3099 045c 00000000 		.4byte	0
 3100              	.LLST28:
 3101 0460 00000000 		.4byte	.LVL93
 3102 0464 18000000 		.4byte	.LVL99
 3103 0468 0100     		.2byte	0x1
 3104 046a 50       		.byte	0x50
 3105 046b 18000000 		.4byte	.LVL99
 3106 046f B0000000 		.4byte	.LFE12
 3107 0473 0400     		.2byte	0x4
 3108 0475 F3       		.byte	0xf3
 3109 0476 01       		.uleb128 0x1
 3110 0477 50       		.byte	0x50
 3111 0478 9F       		.byte	0x9f
 3112 0479 00000000 		.4byte	0
 3113 047d 00000000 		.4byte	0
 3114              	.LLST29:
 3115 0481 00000000 		.4byte	.LVL93
 3116 0485 0A000000 		.4byte	.LVL95
 3117 0489 0100     		.2byte	0x1
 3118 048b 51       		.byte	0x51
 3119 048c 0A000000 		.4byte	.LVL95
 3120 0490 B0000000 		.4byte	.LFE12
 3121 0494 0400     		.2byte	0x4
 3122 0496 F3       		.byte	0xf3
 3123 0497 01       		.uleb128 0x1
 3124 0498 51       		.byte	0x51
 3125 0499 9F       		.byte	0x9f
 3126 049a 00000000 		.4byte	0
 3127 049e 00000000 		.4byte	0
 3128              	.LLST30:
 3129 04a2 00000000 		.4byte	.LVL93
 3130 04a6 32000000 		.4byte	.LVL104
 3131 04aa 0100     		.2byte	0x1
 3132 04ac 52       		.byte	0x52
 3133 04ad 32000000 		.4byte	.LVL104
 3134 04b1 B0000000 		.4byte	.LFE12
 3135 04b5 0400     		.2byte	0x4
 3136 04b7 F3       		.byte	0xf3
 3137 04b8 01       		.uleb128 0x1
 3138 04b9 52       		.byte	0x52
 3139 04ba 9F       		.byte	0x9f
 3140 04bb 00000000 		.4byte	0
 3141 04bf 00000000 		.4byte	0
 3142              	.LLST31:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 91


 3143 04c3 00000000 		.4byte	.LVL93
 3144 04c7 A6000000 		.4byte	.LVL118
 3145 04cb 0200     		.2byte	0x2
 3146 04cd 91       		.byte	0x91
 3147 04ce 00       		.sleb128 0
 3148 04cf A6000000 		.4byte	.LVL118
 3149 04d3 B0000000 		.4byte	.LFE12
 3150 04d7 0200     		.2byte	0x2
 3151 04d9 7D       		.byte	0x7d
 3152 04da 00       		.sleb128 0
 3153 04db 00000000 		.4byte	0
 3154 04df 00000000 		.4byte	0
 3155              	.LLST32:
 3156 04e3 06000000 		.4byte	.LVL94
 3157 04e7 12000000 		.4byte	.LVL96
 3158 04eb 0200     		.2byte	0x2
 3159 04ed 30       		.byte	0x30
 3160 04ee 9F       		.byte	0x9f
 3161 04ef 12000000 		.4byte	.LVL96
 3162 04f3 14000000 		.4byte	.LVL97
 3163 04f7 0100     		.2byte	0x1
 3164 04f9 56       		.byte	0x56
 3165 04fa 14000000 		.4byte	.LVL97
 3166 04fe 16000000 		.4byte	.LVL98
 3167 0502 0200     		.2byte	0x2
 3168 0504 30       		.byte	0x30
 3169 0505 9F       		.byte	0x9f
 3170 0506 16000000 		.4byte	.LVL98
 3171 050a 28000000 		.4byte	.LVL101
 3172 050e 0100     		.2byte	0x1
 3173 0510 56       		.byte	0x56
 3174 0511 30000000 		.4byte	.LVL103
 3175 0515 44000000 		.4byte	.LVL107
 3176 0519 0100     		.2byte	0x1
 3177 051b 56       		.byte	0x56
 3178 051c 00000000 		.4byte	0
 3179 0520 00000000 		.4byte	0
 3180              	.LLST33:
 3181 0524 06000000 		.4byte	.LVL94
 3182 0528 1A000000 		.4byte	.LVL100
 3183 052c 0200     		.2byte	0x2
 3184 052e 30       		.byte	0x30
 3185 052f 9F       		.byte	0x9f
 3186 0530 1A000000 		.4byte	.LVL100
 3187 0534 7C000000 		.4byte	.LVL109
 3188 0538 0100     		.2byte	0x1
 3189 053a 50       		.byte	0x50
 3190 053b 7C000000 		.4byte	.LVL109
 3191 053f A6000000 		.4byte	.LVL118
 3192 0543 0300     		.2byte	0x3
 3193 0545 74       		.byte	0x74
 3194 0546 01       		.sleb128 1
 3195 0547 9F       		.byte	0x9f
 3196 0548 00000000 		.4byte	0
 3197 054c 00000000 		.4byte	0
 3198              	.LLST34:
 3199 0550 A0000000 		.4byte	.LVL116
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 92


 3200 0554 A4000000 		.4byte	.LVL117
 3201 0558 0900     		.2byte	0x9
 3202 055a 70       		.byte	0x70
 3203 055b 00       		.sleb128 0
 3204 055c 09       		.byte	0x9
 3205 055d EC       		.byte	0xec
 3206 055e 24       		.byte	0x24
 3207 055f 09       		.byte	0x9
 3208 0560 FC       		.byte	0xfc
 3209 0561 25       		.byte	0x25
 3210 0562 9F       		.byte	0x9f
 3211 0563 A4000000 		.4byte	.LVL117
 3212 0567 A6000000 		.4byte	.LVL118
 3213 056b 2300     		.2byte	0x23
 3214 056d 74       		.byte	0x74
 3215 056e 00       		.sleb128 0
 3216 056f 38       		.byte	0x38
 3217 0570 24       		.byte	0x24
 3218 0571 72       		.byte	0x72
 3219 0572 00       		.sleb128 0
 3220 0573 03       		.byte	0x3
 3221 0574 06000000 		.4byte	CapSense_1_centroid.5263+2
 3222 0578 94       		.byte	0x94
 3223 0579 01       		.byte	0x1
 3224 057a 08       		.byte	0x8
 3225 057b FF       		.byte	0xff
 3226 057c 1A       		.byte	0x1a
 3227 057d 71       		.byte	0x71
 3228 057e 00       		.sleb128 0
 3229 057f 22       		.byte	0x22
 3230 0580 1B       		.byte	0x1b
 3231 0581 22       		.byte	0x22
 3232 0582 73       		.byte	0x73
 3233 0583 00       		.sleb128 0
 3234 0584 1E       		.byte	0x1e
 3235 0585 23       		.byte	0x23
 3236 0586 80FE01   		.uleb128 0x7f00
 3237 0589 09       		.byte	0x9
 3238 058a EC       		.byte	0xec
 3239 058b 24       		.byte	0x24
 3240 058c 09       		.byte	0x9
 3241 058d FC       		.byte	0xfc
 3242 058e 25       		.byte	0x25
 3243 058f 9F       		.byte	0x9f
 3244 0590 00000000 		.4byte	0
 3245 0594 00000000 		.4byte	0
 3246              	.LLST35:
 3247 0598 88000000 		.4byte	.LVL110
 3248 059c 8E000000 		.4byte	.LVL112
 3249 05a0 0100     		.2byte	0x1
 3250 05a2 52       		.byte	0x52
 3251 05a3 8E000000 		.4byte	.LVL112
 3252 05a7 A6000000 		.4byte	.LVL118
 3253 05ab 0E00     		.2byte	0xe
 3254 05ad 03       		.byte	0x3
 3255 05ae 06000000 		.4byte	CapSense_1_centroid.5263+2
 3256 05b2 94       		.byte	0x94
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 93


 3257 05b3 01       		.byte	0x1
 3258 05b4 08       		.byte	0x8
 3259 05b5 FF       		.byte	0xff
 3260 05b6 1A       		.byte	0x1a
 3261 05b7 75       		.byte	0x75
 3262 05b8 00       		.sleb128 0
 3263 05b9 1C       		.byte	0x1c
 3264 05ba 9F       		.byte	0x9f
 3265 05bb A6000000 		.4byte	.LVL118
 3266 05bf B0000000 		.4byte	.LFE12
 3267 05c3 1600     		.2byte	0x16
 3268 05c5 03       		.byte	0x3
 3269 05c6 06000000 		.4byte	CapSense_1_centroid.5263+2
 3270 05ca 94       		.byte	0x94
 3271 05cb 01       		.byte	0x1
 3272 05cc 08       		.byte	0x8
 3273 05cd FF       		.byte	0xff
 3274 05ce 1A       		.byte	0x1a
 3275 05cf 03       		.byte	0x3
 3276 05d0 04000000 		.4byte	CapSense_1_centroid.5263
 3277 05d4 94       		.byte	0x94
 3278 05d5 01       		.byte	0x1
 3279 05d6 08       		.byte	0x8
 3280 05d7 FF       		.byte	0xff
 3281 05d8 1A       		.byte	0x1a
 3282 05d9 1C       		.byte	0x1c
 3283 05da 9F       		.byte	0x9f
 3284 05db 00000000 		.4byte	0
 3285 05df 00000000 		.4byte	0
 3286              	.LLST36:
 3287 05e3 8C000000 		.4byte	.LVL111
 3288 05e7 92000000 		.4byte	.LVL113
 3289 05eb 0100     		.2byte	0x1
 3290 05ed 50       		.byte	0x50
 3291 05ee 92000000 		.4byte	.LVL113
 3292 05f2 96000000 		.4byte	.LVL114
 3293 05f6 0E00     		.2byte	0xe
 3294 05f8 03       		.byte	0x3
 3295 05f9 06000000 		.4byte	CapSense_1_centroid.5263+2
 3296 05fd 94       		.byte	0x94
 3297 05fe 01       		.byte	0x1
 3298 05ff 08       		.byte	0x8
 3299 0600 FF       		.byte	0xff
 3300 0601 1A       		.byte	0x1a
 3301 0602 71       		.byte	0x71
 3302 0603 00       		.sleb128 0
 3303 0604 22       		.byte	0x22
 3304 0605 9F       		.byte	0x9f
 3305 0606 96000000 		.4byte	.LVL114
 3306 060a A0000000 		.4byte	.LVL116
 3307 060e 0100     		.2byte	0x1
 3308 0610 50       		.byte	0x50
 3309 0611 A0000000 		.4byte	.LVL116
 3310 0615 A4000000 		.4byte	.LVL117
 3311 0619 0500     		.2byte	0x5
 3312 061b 70       		.byte	0x70
 3313 061c 80827E   		.sleb128 -32512
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 94


 3314 061f 9F       		.byte	0x9f
 3315 0620 A4000000 		.4byte	.LVL117
 3316 0624 A6000000 		.4byte	.LVL118
 3317 0628 1900     		.2byte	0x19
 3318 062a 74       		.byte	0x74
 3319 062b 00       		.sleb128 0
 3320 062c 38       		.byte	0x38
 3321 062d 24       		.byte	0x24
 3322 062e 72       		.byte	0x72
 3323 062f 00       		.sleb128 0
 3324 0630 03       		.byte	0x3
 3325 0631 06000000 		.4byte	CapSense_1_centroid.5263+2
 3326 0635 94       		.byte	0x94
 3327 0636 01       		.byte	0x1
 3328 0637 08       		.byte	0x8
 3329 0638 FF       		.byte	0xff
 3330 0639 1A       		.byte	0x1a
 3331 063a 71       		.byte	0x71
 3332 063b 00       		.sleb128 0
 3333 063c 22       		.byte	0x22
 3334 063d 1B       		.byte	0x1b
 3335 063e 22       		.byte	0x22
 3336 063f 73       		.byte	0x73
 3337 0640 00       		.sleb128 0
 3338 0641 1E       		.byte	0x1e
 3339 0642 9F       		.byte	0x9f
 3340 0643 00000000 		.4byte	0
 3341 0647 00000000 		.4byte	0
 3342              	.LLST37:
 3343 064b 0A000000 		.4byte	.LVL95
 3344 064f 2C000000 		.4byte	.LVL102
 3345 0653 0100     		.2byte	0x1
 3346 0655 51       		.byte	0x51
 3347 0656 30000000 		.4byte	.LVL103
 3348 065a 38000000 		.4byte	.LVL105
 3349 065e 0100     		.2byte	0x1
 3350 0660 51       		.byte	0x51
 3351 0661 42000000 		.4byte	.LVL106
 3352 0665 4A000000 		.4byte	.LVL108
 3353 0669 0100     		.2byte	0x1
 3354 066b 51       		.byte	0x51
 3355 066c 00000000 		.4byte	0
 3356 0670 00000000 		.4byte	0
 3357              	.LLST38:
 3358 0674 00000000 		.4byte	.LVL119
 3359 0678 02000000 		.4byte	.LVL120
 3360 067c 0100     		.2byte	0x1
 3361 067e 50       		.byte	0x50
 3362 067f 02000000 		.4byte	.LVL120
 3363 0683 0C000000 		.4byte	.LFE14
 3364 0687 0400     		.2byte	0x4
 3365 0689 F3       		.byte	0xf3
 3366 068a 01       		.uleb128 0x1
 3367 068b 50       		.byte	0x50
 3368 068c 9F       		.byte	0x9f
 3369 068d 00000000 		.4byte	0
 3370 0691 00000000 		.4byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 95


 3371              	.LLST39:
 3372 0695 02000000 		.4byte	.LVL120
 3373 0699 06000000 		.4byte	.LVL121
 3374 069d 0100     		.2byte	0x1
 3375 069f 50       		.byte	0x50
 3376 06a0 06000000 		.4byte	.LVL121
 3377 06a4 0A000000 		.4byte	.LVL122
 3378 06a8 0500     		.2byte	0x5
 3379 06aa 70       		.byte	0x70
 3380 06ab 00       		.sleb128 0
 3381 06ac 32       		.byte	0x32
 3382 06ad 25       		.byte	0x25
 3383 06ae 9F       		.byte	0x9f
 3384 06af 00000000 		.4byte	0
 3385 06b3 00000000 		.4byte	0
 3386              	.LLST40:
 3387 06b7 00000000 		.4byte	.LVL123
 3388 06bb 0E000000 		.4byte	.LVL125
 3389 06bf 0100     		.2byte	0x1
 3390 06c1 50       		.byte	0x50
 3391 06c2 0E000000 		.4byte	.LVL125
 3392 06c6 5C000000 		.4byte	.LFE13
 3393 06ca 0400     		.2byte	0x4
 3394 06cc F3       		.byte	0xf3
 3395 06cd 01       		.uleb128 0x1
 3396 06ce 50       		.byte	0x50
 3397 06cf 9F       		.byte	0x9f
 3398 06d0 00000000 		.4byte	0
 3399 06d4 00000000 		.4byte	0
 3400              	.LLST41:
 3401 06d8 2E000000 		.4byte	.LVL129
 3402 06dc 4A000000 		.4byte	.LVL132
 3403 06e0 0100     		.2byte	0x1
 3404 06e2 55       		.byte	0x55
 3405 06e3 00000000 		.4byte	0
 3406 06e7 00000000 		.4byte	0
 3407              	.LLST42:
 3408 06eb 08000000 		.4byte	.LVL124
 3409 06ef 40000000 		.4byte	.LVL130
 3410 06f3 0100     		.2byte	0x1
 3411 06f5 54       		.byte	0x54
 3412 06f6 4A000000 		.4byte	.LVL132
 3413 06fa 54000000 		.4byte	.LVL133
 3414 06fe 0100     		.2byte	0x1
 3415 0700 54       		.byte	0x54
 3416 0701 00000000 		.4byte	0
 3417 0705 00000000 		.4byte	0
 3418              	.LLST43:
 3419 0709 12000000 		.4byte	.LVL126
 3420 070d 25000000 		.4byte	.LVL127-1
 3421 0711 0100     		.2byte	0x1
 3422 0713 50       		.byte	0x50
 3423 0714 4A000000 		.4byte	.LVL132
 3424 0718 54000000 		.4byte	.LVL133
 3425 071c 0100     		.2byte	0x1
 3426 071e 50       		.byte	0x50
 3427 071f 00000000 		.4byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 96


 3428 0723 00000000 		.4byte	0
 3429              	.LLST44:
 3430 0727 2A000000 		.4byte	.LVL128
 3431 072b 45000000 		.4byte	.LVL131-1
 3432 072f 0100     		.2byte	0x1
 3433 0731 50       		.byte	0x50
 3434 0732 46000000 		.4byte	.LVL131
 3435 0736 4A000000 		.4byte	.LVL132
 3436 073a 0100     		.2byte	0x1
 3437 073c 50       		.byte	0x50
 3438 073d 4A000000 		.4byte	.LVL132
 3439 0741 54000000 		.4byte	.LVL133
 3440 0745 0300     		.2byte	0x3
 3441 0747 09       		.byte	0x9
 3442 0748 FF       		.byte	0xff
 3443 0749 9F       		.byte	0x9f
 3444 074a 54000000 		.4byte	.LVL133
 3445 074e 5C000000 		.4byte	.LFE13
 3446 0752 0100     		.2byte	0x1
 3447 0754 50       		.byte	0x50
 3448 0755 00000000 		.4byte	0
 3449 0759 00000000 		.4byte	0
 3450              		.section	.debug_aranges,"",%progbits
 3451 0000 8C000000 		.4byte	0x8c
 3452 0004 0200     		.2byte	0x2
 3453 0006 00000000 		.4byte	.Ldebug_info0
 3454 000a 04       		.byte	0x4
 3455 000b 00       		.byte	0
 3456 000c 0000     		.2byte	0
 3457 000e 0000     		.2byte	0
 3458 0010 00000000 		.4byte	.LFB0
 3459 0014 28000000 		.4byte	.LFE0-.LFB0
 3460 0018 00000000 		.4byte	.LFB1
 3461 001c 18000000 		.4byte	.LFE1-.LFB1
 3462 0020 00000000 		.4byte	.LFB2
 3463 0024 16000000 		.4byte	.LFE2-.LFB2
 3464 0028 00000000 		.4byte	.LFB3
 3465 002c 44000000 		.4byte	.LFE3-.LFB3
 3466 0030 00000000 		.4byte	.LFB4
 3467 0034 A4000000 		.4byte	.LFE4-.LFB4
 3468 0038 00000000 		.4byte	.LFB5
 3469 003c 2C000000 		.4byte	.LFE5-.LFB5
 3470 0040 00000000 		.4byte	.LFB6
 3471 0044 5C000000 		.4byte	.LFE6-.LFB6
 3472 0048 00000000 		.4byte	.LFB7
 3473 004c 1C000000 		.4byte	.LFE7-.LFB7
 3474 0050 00000000 		.4byte	.LFB8
 3475 0054 1E000000 		.4byte	.LFE8-.LFB8
 3476 0058 00000000 		.4byte	.LFB9
 3477 005c 28000000 		.4byte	.LFE9-.LFB9
 3478 0060 00000000 		.4byte	.LFB10
 3479 0064 2C000000 		.4byte	.LFE10-.LFB10
 3480 0068 00000000 		.4byte	.LFB11
 3481 006c 2C000000 		.4byte	.LFE11-.LFB11
 3482 0070 00000000 		.4byte	.LFB12
 3483 0074 B0000000 		.4byte	.LFE12-.LFB12
 3484 0078 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 97


 3485 007c 0C000000 		.4byte	.LFE14-.LFB14
 3486 0080 00000000 		.4byte	.LFB13
 3487 0084 5C000000 		.4byte	.LFE13-.LFB13
 3488 0088 00000000 		.4byte	0
 3489 008c 00000000 		.4byte	0
 3490              		.section	.debug_ranges,"",%progbits
 3491              	.Ldebug_ranges0:
 3492 0000 00000000 		.4byte	.LFB0
 3493 0004 28000000 		.4byte	.LFE0
 3494 0008 00000000 		.4byte	.LFB1
 3495 000c 18000000 		.4byte	.LFE1
 3496 0010 00000000 		.4byte	.LFB2
 3497 0014 16000000 		.4byte	.LFE2
 3498 0018 00000000 		.4byte	.LFB3
 3499 001c 44000000 		.4byte	.LFE3
 3500 0020 00000000 		.4byte	.LFB4
 3501 0024 A4000000 		.4byte	.LFE4
 3502 0028 00000000 		.4byte	.LFB5
 3503 002c 2C000000 		.4byte	.LFE5
 3504 0030 00000000 		.4byte	.LFB6
 3505 0034 5C000000 		.4byte	.LFE6
 3506 0038 00000000 		.4byte	.LFB7
 3507 003c 1C000000 		.4byte	.LFE7
 3508 0040 00000000 		.4byte	.LFB8
 3509 0044 1E000000 		.4byte	.LFE8
 3510 0048 00000000 		.4byte	.LFB9
 3511 004c 28000000 		.4byte	.LFE9
 3512 0050 00000000 		.4byte	.LFB10
 3513 0054 2C000000 		.4byte	.LFE10
 3514 0058 00000000 		.4byte	.LFB11
 3515 005c 2C000000 		.4byte	.LFE11
 3516 0060 00000000 		.4byte	.LFB12
 3517 0064 B0000000 		.4byte	.LFE12
 3518 0068 00000000 		.4byte	.LFB14
 3519 006c 0C000000 		.4byte	.LFE14
 3520 0070 00000000 		.4byte	.LFB13
 3521 0074 5C000000 		.4byte	.LFE13
 3522 0078 00000000 		.4byte	0
 3523 007c 00000000 		.4byte	0
 3524              		.section	.debug_line,"",%progbits
 3525              	.Ldebug_line0:
 3526 0000 B6020000 		.section	.debug_str,"MS",%progbits,1
 3526      02007100 
 3526      00000201 
 3526      FB0E0D00 
 3526      01010101 
 3527              	.LASF47:
 3528 0000 636F756E 		.ascii	"count\000"
 3528      7400
 3529              	.LASF10:
 3530 0006 75696E74 		.ascii	"uint16\000"
 3530      313600
 3531              	.LASF28:
 3532 000d 66696C74 		.ascii	"filteredRawData\000"
 3532      65726564 
 3532      52617744 
 3532      61746100 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 98


 3533              	.LASF34:
 3534 001d 66696E67 		.ascii	"fingerThreshold\000"
 3534      65725468 
 3534      72657368 
 3534      6F6C6400 
 3535              	.LASF22:
 3536 002d 43617053 		.ascii	"CapSense_1_InitializeAllBaselines\000"
 3536      656E7365 
 3536      5F315F49 
 3536      6E697469 
 3536      616C697A 
 3537              	.LASF19:
 3538 004f 43617053 		.ascii	"CapSense_1_BaseInit\000"
 3538      656E7365 
 3538      5F315F42 
 3538      61736549 
 3538      6E697400 
 3539              	.LASF7:
 3540 0063 6C6F6E67 		.ascii	"long long unsigned int\000"
 3540      206C6F6E 
 3540      6720756E 
 3540      7369676E 
 3540      65642069 
 3541              	.LASF43:
 3542 007a 43617053 		.ascii	"CapSense_1_EnableWidget\000"
 3542      656E7365 
 3542      5F315F45 
 3542      6E61626C 
 3542      65576964 
 3543              	.LASF62:
 3544 0092 66697273 		.ascii	"firstTimeIndex\000"
 3544      7454696D 
 3544      65496E64 
 3544      657800
 3545              	.LASF38:
 3546 00a1 43617053 		.ascii	"CapSense_1_CheckIsWidgetActive\000"
 3546      656E7365 
 3546      5F315F43 
 3546      6865636B 
 3546      49735769 
 3547              	.LASF73:
 3548 00c0 43617053 		.ascii	"CapSense_1_noiseThreshold\000"
 3548      656E7365 
 3548      5F315F6E 
 3548      6F697365 
 3548      54687265 
 3549              	.LASF75:
 3550 00da 43617053 		.ascii	"CapSense_1_debounce\000"
 3550      656E7365 
 3550      5F315F64 
 3550      65626F75 
 3550      6E636500 
 3551              	.LASF64:
 3552 00ee 43617053 		.ascii	"CapSense_1_sensorRaw\000"
 3552      656E7365 
 3552      5F315F73 
 3552      656E736F 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 99


 3552      72526177 
 3553              	.LASF86:
 3554 0103 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_1_CSHL.c\000"
 3554      72617465 
 3554      645F536F 
 3554      75726365 
 3554      5C50536F 
 3555              	.LASF6:
 3556 012c 6C6F6E67 		.ascii	"long long int\000"
 3556      206C6F6E 
 3556      6720696E 
 3556      7400
 3557              	.LASF0:
 3558 013a 7369676E 		.ascii	"signed char\000"
 3558      65642063 
 3558      68617200 
 3559              	.LASF63:
 3560 0146 706F7346 		.ascii	"posFiltersMask\000"
 3560      696C7465 
 3560      72734D61 
 3560      736B00
 3561              	.LASF39:
 3562 0155 72617749 		.ascii	"rawIndex\000"
 3562      6E646578 
 3562      00
 3563              	.LASF40:
 3564 015e 6E756D62 		.ascii	"numberOfSensors\000"
 3564      65724F66 
 3564      53656E73 
 3564      6F727300 
 3565              	.LASF55:
 3566 016e 43617053 		.ascii	"CapSense_1_centroid\000"
 3566      656E7365 
 3566      5F315F63 
 3566      656E7472 
 3566      6F696400 
 3567              	.LASF13:
 3568 0182 696E7433 		.ascii	"int32\000"
 3568      3200
 3569              	.LASF41:
 3570 0188 73746174 		.ascii	"state\000"
 3570      6500
 3571              	.LASF45:
 3572 018e 43617053 		.ascii	"CapSense_1_FindMaximum\000"
 3572      656E7365 
 3572      5F315F46 
 3572      696E644D 
 3572      6178696D 
 3573              	.LASF4:
 3574 01a5 6C6F6E67 		.ascii	"long int\000"
 3574      20696E74 
 3574      00
 3575              	.LASF57:
 3576 01ae 6E756D65 		.ascii	"numerator\000"
 3576      7261746F 
 3576      7200
 3577              	.LASF44:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 100


 3578 01b8 43617053 		.ascii	"CapSense_1_DisableWidget\000"
 3578      656E7365 
 3578      5F315F44 
 3578      69736162 
 3578      6C655769 
 3579              	.LASF58:
 3580 01d1 64656E6F 		.ascii	"denominator\000"
 3580      6D696E61 
 3580      746F7200 
 3581              	.LASF9:
 3582 01dd 75696E74 		.ascii	"uint8\000"
 3582      3800
 3583              	.LASF15:
 3584 01e3 646F7562 		.ascii	"double\000"
 3584      6C6500
 3585              	.LASF11:
 3586 01ea 75696E74 		.ascii	"uint32\000"
 3586      333200
 3587              	.LASF35:
 3588 01f1 68797374 		.ascii	"hysteresis\000"
 3588      65726573 
 3588      697300
 3589              	.LASF82:
 3590 01fc 43617053 		.ascii	"CapSense_1_ScanSensor\000"
 3590      656E7365 
 3590      5F315F53 
 3590      63616E53 
 3590      656E736F 
 3591              	.LASF48:
 3592 0212 6D617869 		.ascii	"maximum\000"
 3592      6D756D00 
 3593              	.LASF77:
 3594 021a 43617053 		.ascii	"CapSense_1_rawDataIndex\000"
 3594      656E7365 
 3594      5F315F72 
 3594      61774461 
 3594      7461496E 
 3595              	.LASF54:
 3596 0232 706F734E 		.ascii	"posNext\000"
 3596      65787400 
 3597              	.LASF50:
 3598 023a 73746172 		.ascii	"startOfSlider\000"
 3598      744F6653 
 3598      6C696465 
 3598      7200
 3599              	.LASF49:
 3600 0248 74656D70 		.ascii	"temp\000"
 3600      00
 3601              	.LASF8:
 3602 024d 756E7369 		.ascii	"unsigned int\000"
 3602      676E6564 
 3602      20696E74 
 3602      00
 3603              	.LASF56:
 3604 025a 706F7369 		.ascii	"position\000"
 3604      74696F6E 
 3604      00
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 101


 3605              	.LASF84:
 3606 0263 43617053 		.ascii	"CapSense_1_ScanEnabledWidgets\000"
 3606      656E7365 
 3606      5F315F53 
 3606      63616E45 
 3606      6E61626C 
 3607              	.LASF5:
 3608 0281 6C6F6E67 		.ascii	"long unsigned int\000"
 3608      20756E73 
 3608      69676E65 
 3608      6420696E 
 3608      7400
 3609              	.LASF3:
 3610 0293 73686F72 		.ascii	"short unsigned int\000"
 3610      7420756E 
 3610      7369676E 
 3610      65642069 
 3610      6E7400
 3611              	.LASF21:
 3612 02a6 73656E73 		.ascii	"sensor\000"
 3612      6F7200
 3613              	.LASF53:
 3614 02ad 706F7350 		.ascii	"posPrev\000"
 3614      72657600 
 3615              	.LASF78:
 3616 02b5 43617053 		.ascii	"CapSense_1_numberOfSensors\000"
 3616      656E7365 
 3616      5F315F6E 
 3616      756D6265 
 3616      724F6653 
 3617              	.LASF26:
 3618 02d0 63616C63 		.ascii	"calc\000"
 3618      00
 3619              	.LASF65:
 3620 02d5 43617053 		.ascii	"CapSense_1_sensorEnableMask\000"
 3620      656E7365 
 3620      5F315F73 
 3620      656E736F 
 3620      72456E61 
 3621              	.LASF61:
 3622 02f1 706F7349 		.ascii	"posIndex\000"
 3622      6E646578 
 3622      00
 3623              	.LASF36:
 3624 02fa 6465626F 		.ascii	"debounce\000"
 3624      756E6365 
 3624      00
 3625              	.LASF24:
 3626 0303 656E4D61 		.ascii	"enMask\000"
 3626      736B00
 3627              	.LASF18:
 3628 030a 73697A65 		.ascii	"sizetype\000"
 3628      74797065 
 3628      00
 3629              	.LASF17:
 3630 0313 6C6F6E67 		.ascii	"long double\000"
 3630      20646F75 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 102


 3630      626C6500 
 3631              	.LASF81:
 3632 031f 43617053 		.ascii	"CapSense_1_posFiltersData\000"
 3632      656E7365 
 3632      5F315F70 
 3632      6F734669 
 3632      6C746572 
 3633              	.LASF71:
 3634 0339 43617053 		.ascii	"CapSense_1_lowBaselineResetCnt\000"
 3634      656E7365 
 3634      5F315F6C 
 3634      6F774261 
 3634      73656C69 
 3635              	.LASF51:
 3636 0358 43617053 		.ascii	"CapSense_1_CalcCentroid\000"
 3636      656E7365 
 3636      5F315F43 
 3636      616C6343 
 3636      656E7472 
 3637              	.LASF87:
 3638 0370 433A5C55 		.ascii	"C:\\Users\\holge\\Desktop\\cypress_PsOC_5LP\\Worksp"
 3638      73657273 
 3638      5C686F6C 
 3638      67655C44 
 3638      65736B74 
 3639 039e 61636530 		.ascii	"ace01\\CapSense_PWM_LED.cydsn\000"
 3639      315C4361 
 3639      7053656E 
 3639      73655F50 
 3639      574D5F4C 
 3640              	.LASF66:
 3641 03bb 43617053 		.ascii	"CapSense_1_widgetNumber\000"
 3641      656E7365 
 3641      5F315F77 
 3641      69646765 
 3641      744E756D 
 3642              	.LASF20:
 3643 03d3 43617053 		.ascii	"CapSense_1_InitializeSensorBaseline\000"
 3643      656E7365 
 3643      5F315F49 
 3643      6E697469 
 3643      616C697A 
 3644              	.LASF31:
 3645 03f7 43617053 		.ascii	"CapSense_1_UpdateEnabledBaselines\000"
 3645      656E7365 
 3645      5F315F55 
 3645      70646174 
 3645      65456E61 
 3646              	.LASF14:
 3647 0419 666C6F61 		.ascii	"float\000"
 3647      7400
 3648              	.LASF70:
 3649 041f 43617053 		.ascii	"CapSense_1_sensorOnMask\000"
 3649      656E7365 
 3649      5F315F73 
 3649      656E736F 
 3649      724F6E4D 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 103


 3650              	.LASF37:
 3651 0437 43617053 		.ascii	"CapSense_1_CheckIsSensorActive\000"
 3651      656E7365 
 3651      5F315F43 
 3651      6865636B 
 3651      49735365 
 3652              	.LASF42:
 3653 0456 43617053 		.ascii	"CapSense_1_CheckIsAnyWidgetActive\000"
 3653      656E7365 
 3653      5F315F43 
 3653      6865636B 
 3653      4973416E 
 3654              	.LASF1:
 3655 0478 756E7369 		.ascii	"unsigned char\000"
 3655      676E6564 
 3655      20636861 
 3655      7200
 3656              	.LASF23:
 3657 0486 43617053 		.ascii	"CapSense_1_InitializeEnabledBaselines\000"
 3657      656E7365 
 3657      5F315F49 
 3657      6E697469 
 3657      616C697A 
 3658              	.LASF30:
 3659 04ac 6E6F6973 		.ascii	"noiseThreshold\000"
 3659      65546872 
 3659      6573686F 
 3659      6C6400
 3660              	.LASF2:
 3661 04bb 73686F72 		.ascii	"short int\000"
 3661      7420696E 
 3661      7400
 3662              	.LASF29:
 3663 04c5 77696467 		.ascii	"widget\000"
 3663      657400
 3664              	.LASF33:
 3665 04cc 6F6E4D61 		.ascii	"onMask\000"
 3665      736B00
 3666              	.LASF25:
 3667 04d3 43617053 		.ascii	"CapSense_1_UpdateSensorBaseline\000"
 3667      656E7365 
 3667      5F315F55 
 3667      70646174 
 3667      6553656E 
 3668              	.LASF69:
 3669 04f3 43617053 		.ascii	"CapSense_1_sensorSignal\000"
 3669      656E7365 
 3669      5F315F73 
 3669      656E736F 
 3669      72536967 
 3670              	.LASF79:
 3671 050b 43617053 		.ascii	"CapSense_1_centroidMult\000"
 3671      656E7365 
 3671      5F315F63 
 3671      656E7472 
 3671      6F69644D 
 3672              	.LASF76:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 104


 3673 0523 43617053 		.ascii	"CapSense_1_debounceCounter\000"
 3673      656E7365 
 3673      5F315F64 
 3673      65626F75 
 3673      6E636543 
 3674              	.LASF85:
 3675 053e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3675      43313120 
 3675      352E342E 
 3675      31203230 
 3675      31363036 
 3676 0571 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3676      20726576 
 3676      6973696F 
 3676      6E203233 
 3676      37373135 
 3677 05a4 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3677      66756E63 
 3677      74696F6E 
 3677      2D736563 
 3677      74696F6E 
 3678              	.LASF52:
 3679 05cc 7265736F 		.ascii	"resolution\000"
 3679      6C757469 
 3679      6F6E00
 3680              	.LASF72:
 3681 05d7 43617053 		.ascii	"CapSense_1_fingerThreshold\000"
 3681      656E7365 
 3681      5F315F66 
 3681      696E6765 
 3681      72546872 
 3682              	.LASF16:
 3683 05f2 63686172 		.ascii	"char\000"
 3683      00
 3684              	.LASF60:
 3685 05f7 43617053 		.ascii	"CapSense_1_GetCentroidPos\000"
 3685      656E7365 
 3685      5F315F47 
 3685      65744365 
 3685      6E74726F 
 3686              	.LASF46:
 3687 0611 6F666673 		.ascii	"offset\000"
 3687      657400
 3688              	.LASF83:
 3689 0618 43617053 		.ascii	"CapSense_1_IsBusy\000"
 3689      656E7365 
 3689      5F315F49 
 3689      73427573 
 3689      7900
 3690              	.LASF68:
 3691 062a 43617053 		.ascii	"CapSense_1_sensorBaselineLow\000"
 3691      656E7365 
 3691      5F315F73 
 3691      656E736F 
 3691      72426173 
 3692              	.LASF32:
 3693 0647 6465626F 		.ascii	"debounceIndex\000"
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccXKJRa1.s 			page 105


 3693      756E6365 
 3693      496E6465 
 3693      7800
 3694              	.LASF74:
 3695 0655 43617053 		.ascii	"CapSense_1_hysteresis\000"
 3695      656E7365 
 3695      5F315F68 
 3695      79737465 
 3695      72657369 
 3696              	.LASF12:
 3697 066b 696E7431 		.ascii	"int16\000"
 3697      3600
 3698              	.LASF67:
 3699 0671 43617053 		.ascii	"CapSense_1_sensorBaseline\000"
 3699      656E7365 
 3699      5F315F73 
 3699      656E736F 
 3699      72426173 
 3700              	.LASF59:
 3701 068b 43617053 		.ascii	"CapSense_1_IIR4Filter\000"
 3701      656E7365 
 3701      5F315F49 
 3701      49523446 
 3701      696C7465 
 3702              	.LASF27:
 3703 06a1 74656D70 		.ascii	"tempRaw\000"
 3703      52617700 
 3704              	.LASF80:
 3705 06a9 43617053 		.ascii	"CapSense_1_posFiltersMask\000"
 3705      656E7365 
 3705      5F315F70 
 3705      6F734669 
 3705      6C746572 
 3706              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
