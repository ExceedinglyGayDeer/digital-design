ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	CapSense_CSD_initVar:
  21 0000 00       		.space	1
  22              		.comm	CapSense_CSD_csv,1,1
  23              		.comm	CapSense_CSD_sensorIndex,1,1
  24              		.comm	CapSense_CSD_sensorRaw,10,4
  25              		.global	CapSense_CSD_sensorEnableMask
  26              		.data
  27              		.align	2
  28              		.type	CapSense_CSD_sensorEnableMask, %object
  29              		.size	CapSense_CSD_sensorEnableMask, 1
  30              	CapSense_CSD_sensorEnableMask:
  31 0000 1F       		.byte	31
  32              		.global	CapSense_CSD_pcTable
  33              		.section	.rodata
  34              		.align	2
  35              		.type	CapSense_CSD_pcTable, %object
  36              		.size	CapSense_CSD_pcTable, 20
  37              	CapSense_CSD_pcTable:
  38 0000 18500040 		.word	1073762328
  39 0004 19500040 		.word	1073762329
  40 0008 1A500040 		.word	1073762330
  41 000c 1B500040 		.word	1073762331
  42 0010 1C500040 		.word	1073762332
  43              		.global	CapSense_CSD_portTable
  44              		.align	2
  45              		.type	CapSense_CSD_portTable, %object
  46              		.size	CapSense_CSD_portTable, 5
  47              	CapSense_CSD_portTable:
  48 0014 03       		.byte	3
  49 0015 03       		.byte	3
  50 0016 03       		.byte	3
  51 0017 03       		.byte	3
  52 0018 03       		.byte	3
  53              		.global	CapSense_CSD_maskTable
  54 0019 000000   		.align	2
  55              		.type	CapSense_CSD_maskTable, %object
  56              		.size	CapSense_CSD_maskTable, 5
  57              	CapSense_CSD_maskTable:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 2


  58 001c 01       		.byte	1
  59 001d 02       		.byte	2
  60 001e 04       		.byte	4
  61 001f 08       		.byte	8
  62 0020 10       		.byte	16
  63              		.global	CapSense_CSD_csTable
  64 0021 000000   		.align	2
  65              		.type	CapSense_CSD_csTable, %object
  66              		.size	CapSense_CSD_csTable, 32
  67              	CapSense_CSD_csTable:
  68 0024 06520040 		.word	1073762822
  69 0028 0E520040 		.word	1073762830
  70 002c 16520040 		.word	1073762838
  71 0030 1E520040 		.word	1073762846
  72 0034 26520040 		.word	1073762854
  73 0038 2E520040 		.word	1073762862
  74 003c 36520040 		.word	1073762870
  75 0040 7E520040 		.word	1073762942
  76              		.global	CapSense_CSD_idacSettings
  77              		.align	2
  78              		.type	CapSense_CSD_idacSettings, %object
  79              		.size	CapSense_CSD_idacSettings, 5
  80              	CapSense_CSD_idacSettings:
  81 0044 30       		.byte	48
  82 0045 31       		.byte	49
  83 0046 29       		.byte	41
  84 0047 26       		.byte	38
  85 0048 22       		.byte	34
  86              		.global	CapSense_CSD_widgetResolution
  87 0049 000000   		.align	2
  88              		.type	CapSense_CSD_widgetResolution, %object
  89              		.size	CapSense_CSD_widgetResolution, 1
  90              	CapSense_CSD_widgetResolution:
  91 004c 3F       		.byte	63
  92              		.global	CapSense_CSD_analogSwitchDivider
  93              		.data
  94 0001 000000   		.align	2
  95              		.type	CapSense_CSD_analogSwitchDivider, %object
  96              		.size	CapSense_CSD_analogSwitchDivider, 5
  97              	CapSense_CSD_analogSwitchDivider:
  98 0004 03       		.byte	3
  99 0005 03       		.byte	3
 100 0006 03       		.byte	3
 101 0007 03       		.byte	3
 102 0008 03       		.byte	3
 103              		.global	CapSense_CSD_widgetNumber
 104              		.section	.rodata
 105 004d 000000   		.align	2
 106              		.type	CapSense_CSD_widgetNumber, %object
 107              		.size	CapSense_CSD_widgetNumber, 5
 108              	CapSense_CSD_widgetNumber:
 109 0050 00000000 		.space	5
 109      00
 110              		.section	.text.CapSense_CSD_Init,"ax",%progbits
 111              		.align	2
 112              		.global	CapSense_CSD_Init
 113              		.thumb
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 3


 114              		.thumb_func
 115              		.type	CapSense_CSD_Init, %function
 116              	CapSense_CSD_Init:
 117              	.LFB0:
 118              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD.c"
   1:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD.c **** * File Name: CapSense_CSD.c
   3:Generated_Source\PSoC5/CapSense_CSD.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense_CSD.c **** *  component.
   8:Generated_Source\PSoC5/CapSense_CSD.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSD.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD.c **** #include "CapSense_CSD.h"
  19:Generated_Source\PSoC5/CapSense_CSD.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense_CSD.c **** 
  21:Generated_Source\PSoC5/CapSense_CSD.c **** 
  22:Generated_Source\PSoC5/CapSense_CSD.c **** static uint8 CapSense_CSD_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense_CSD.c ****             
  24:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense_CSD.c **** 
  28:Generated_Source\PSoC5/CapSense_CSD.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_lowLevelTuningDone = 1u;
  31:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense_CSD.c **** 
  33:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8  CapSense_CSD_extRbCh0Cur = CapSense_CSD_RBLEED1;
  35:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8  CapSense_CSD_extRbCh1Cur = (CapSense_CSD_RBLEED1 + CapSense_CSD_TOTAL_RB_NUMBER__CH0
  37:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense_CSD.c ****         
  40:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense_CSD.c **** 
  43:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense_CSD.c **** 0x1Fu, };
  45:Generated_Source\PSoC5/CapSense_CSD.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e0__LS__PC, 
  48:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e1__LS__PC, 
  49:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e2__LS__PC, 
  50:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e3__LS__PC, 
  51:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e4__LS__PC, 
  52:Generated_Source\PSoC5/CapSense_CSD.c **** };
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 4


  53:Generated_Source\PSoC5/CapSense_CSD.c **** 
  54:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_portTable[] = {
  55:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e0__LS__PORT, 
  56:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e1__LS__PORT, 
  57:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e2__LS__PORT, 
  58:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e3__LS__PORT, 
  59:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e4__LS__PORT, 
  60:Generated_Source\PSoC5/CapSense_CSD.c **** };
  61:Generated_Source\PSoC5/CapSense_CSD.c **** 
  62:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_maskTable[] = {
  63:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e0__LS__MASK,
  64:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e1__LS__MASK,
  65:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e2__LS__MASK,
  66:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e3__LS__MASK,
  67:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e4__LS__MASK,
  68:Generated_Source\PSoC5/CapSense_CSD.c **** };
  69:Generated_Source\PSoC5/CapSense_CSD.c **** 
  70:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_csTable[] = {
  71:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  72:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  73:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  74:Generated_Source\PSoC5/CapSense_CSD.c **** };
  75:Generated_Source\PSoC5/CapSense_CSD.c **** 
  76:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_idacSettings[] = {
  77:Generated_Source\PSoC5/CapSense_CSD.c ****     48u,49u,41u,38u,34u,
  78:Generated_Source\PSoC5/CapSense_CSD.c **** };
  79:Generated_Source\PSoC5/CapSense_CSD.c **** 
  80:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetResolution[] = {
  81:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_14_BITS,
  82:Generated_Source\PSoC5/CapSense_CSD.c **** };
  83:Generated_Source\PSoC5/CapSense_CSD.c **** 
  84:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_analogSwitchDivider[CapSense_CSD_TOTAL_SCANSLOT_COUNT] = {
  85:Generated_Source\PSoC5/CapSense_CSD.c ****     3u, 3u, 3u, 3u, 3u, 
  86:Generated_Source\PSoC5/CapSense_CSD.c **** };
  87:Generated_Source\PSoC5/CapSense_CSD.c **** 
  88:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetNumber[] = {
  89:Generated_Source\PSoC5/CapSense_CSD.c ****     0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
  90:Generated_Source\PSoC5/CapSense_CSD.c ****     
  91:Generated_Source\PSoC5/CapSense_CSD.c **** };
  92:Generated_Source\PSoC5/CapSense_CSD.c **** 
  93:Generated_Source\PSoC5/CapSense_CSD.c **** 
  94:Generated_Source\PSoC5/CapSense_CSD.c **** 
  95:Generated_Source\PSoC5/CapSense_CSD.c **** 
  96:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
  97:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Init
  98:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  99:Generated_Source\PSoC5/CapSense_CSD.c **** *
 100:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 101:Generated_Source\PSoC5/CapSense_CSD.c **** *  Inits default CapSense configuration provided with customizer that defines 
 102:Generated_Source\PSoC5/CapSense_CSD.c **** *  mode of component operations and resets all sensors to an inactive state.
 103:Generated_Source\PSoC5/CapSense_CSD.c **** *
 104:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 105:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 106:Generated_Source\PSoC5/CapSense_CSD.c **** *
 107:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 108:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 109:Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 5


 110:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 111:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Init(void) 
 112:Generated_Source\PSoC5/CapSense_CSD.c **** {
 119              		.loc 1 112 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 8
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123 0000 80B5     		push	{r7, lr}
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0002 82B0     		sub	sp, sp, #8
 128              		.cfi_def_cfa_offset 16
 129 0004 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 113:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ( (CapSense_CSD_PRS_OPTIONS) || \
 114:Generated_Source\PSoC5/CapSense_CSD.c ****           (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 115:Generated_Source\PSoC5/CapSense_CSD.c ****           ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 116:Generated_Source\PSoC5/CapSense_CSD.c ****             (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) )
 117:Generated_Source\PSoC5/CapSense_CSD.c ****         
 118:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enableInterrupts;
 119:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* ( (CapSense_CSD_PRS_OPTIONS) || \
 120:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 121:Generated_Source\PSoC5/CapSense_CSD.c ****            * ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 122:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) ) 
 123:Generated_Source\PSoC5/CapSense_CSD.c ****            */
 124:Generated_Source\PSoC5/CapSense_CSD.c ****     
 125:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 126:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 131              		.loc 1 126 0
 132 0006 FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 127:Generated_Source\PSoC5/CapSense_CSD.c **** 
 128:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Prescaler */
 129:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 130:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 131:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 132:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL_REG   = (CapSense_CSD_PRESCALER_CTRL_ENABLE |
 133:Generated_Source\PSoC5/CapSense_CSD.c ****                                                     CapSense_CSD_PRESCALER_CTRL_MODE_CMP);
 134:Generated_Source\PSoC5/CapSense_CSD.c ****                                                
 135:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL2_REG |= CapSense_CSD_PRESCALER_CTRL_CMP_LESS_EQ;
 136:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 137:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 138:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 139:Generated_Source\PSoC5/CapSense_CSD.c **** 
 140:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set PRS */
 141:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS)
 142:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SetAnalogSwitchesSource(CapSense_CSD_ANALOG_SWITCHES_SRC_PRS);
 133              		.loc 1 142 0
 134 000a 0220     		movs	r0, #2
 135 000c FFF7FEFF 		bl	CapSense_CSD_SetAnalogSwitchesSource
 143:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS) */
 144:Generated_Source\PSoC5/CapSense_CSD.c **** 
 145:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS)
 146:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 147:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 148:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 149:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 6


 150:Generated_Source\PSoC5/CapSense_CSD.c ****         
 151:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 152:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_REG   = CapSense_CSD_PRS8_DEFAULT_POLYNOM;
 153:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 154:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 155:Generated_Source\PSoC5/CapSense_CSD.c ****         
 156:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS)
 157:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */ 
 158:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();  
 136              		.loc 1 158 0
 137 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 138 0014 0346     		mov	r3, r0
 139 0016 FB71     		strb	r3, [r7, #7]
 159:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 140              		.loc 1 159 0
 141 0018 3B4A     		ldr	r2, .L2
 142 001a 3B4B     		ldr	r3, .L2
 143 001c 1B78     		ldrb	r3, [r3]
 144 001e DBB2     		uxtb	r3, r3
 145 0020 43F00303 		orr	r3, r3, #3
 146 0024 DBB2     		uxtb	r3, r3
 147 0026 1370     		strb	r3, [r2]
 160:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_B_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 148              		.loc 1 160 0
 149 0028 384A     		ldr	r2, .L2+4
 150 002a 384B     		ldr	r3, .L2+4
 151 002c 1B78     		ldrb	r3, [r3]
 152 002e DBB2     		uxtb	r3, r3
 153 0030 43F00303 		orr	r3, r3, #3
 154 0034 DBB2     		uxtb	r3, r3
 155 0036 1370     		strb	r3, [r2]
 161:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 156              		.loc 1 161 0
 157 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 158 003a 1846     		mov	r0, r3
 159 003c FFF7FEFF 		bl	CyExitCriticalSection
 162:Generated_Source\PSoC5/CapSense_CSD.c ****         
 163:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 164:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_POLYNOM_PTR, CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 160              		.loc 1 164 0
 161 0040 334B     		ldr	r3, .L2+8
 162 0042 4FF43442 		mov	r2, #46080
 163 0046 1A80     		strh	r2, [r3]	@ movhi
 165:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 166:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_SEED_COPY_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 164              		.loc 1 166 0
 165 0048 324B     		ldr	r3, .L2+12
 166 004a 4FF6FF72 		movw	r2, #65535
 167 004e 1A80     		strh	r2, [r3]	@ movhi
 167:Generated_Source\PSoC5/CapSense_CSD.c ****                 
 168:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS_4X)
 169:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 170:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 171:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG  |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 172:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 173:Generated_Source\PSoC5/CapSense_CSD.c ****         
 174:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 7


 175:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D1_REG   = HI8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 176:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D0_REG   = LO8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 177:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 178:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F1_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 179:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F0_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW; 
 180:Generated_Source\PSoC5/CapSense_CSD.c ****         
 181:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 182:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without PRS */
 183:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS) */ 
 184:Generated_Source\PSoC5/CapSense_CSD.c ****     
 185:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set ScanSpeed */
 186:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = CapSense_CSD_SCANSPEED_VALUE;
 168              		.loc 1 186 0
 169 0050 314B     		ldr	r3, .L2+16
 170 0052 0722     		movs	r2, #7
 171 0054 1A70     		strb	r2, [r3]
 187:Generated_Source\PSoC5/CapSense_CSD.c ****     
 188:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set the Measure */
 189:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 190:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 191:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 192:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 193:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_PWM_CH0_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 194:Generated_Source\PSoC5/CapSense_CSD.c ****         
 195:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 196:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 197:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 198:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_RAW_CH0_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 199:Generated_Source\PSoC5/CapSense_CSD.c ****     
 200:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 201:Generated_Source\PSoC5/CapSense_CSD.c ****         /*Window PWM and Raw Counter AUX set */
 202:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 172              		.loc 1 202 0
 173 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 174 005a 0346     		mov	r3, r0
 175 005c FB71     		strb	r3, [r7, #7]
 203:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 176              		.loc 1 203 0
 177 005e 2F4A     		ldr	r2, .L2+20
 178 0060 2E4B     		ldr	r3, .L2+20
 179 0062 1B78     		ldrb	r3, [r3]
 180 0064 DBB2     		uxtb	r3, r3
 181 0066 43F00303 		orr	r3, r3, #3
 182 006a DBB2     		uxtb	r3, r3
 183 006c 1370     		strb	r3, [r2]
 204:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 184              		.loc 1 204 0
 185 006e 2C4A     		ldr	r2, .L2+24
 186 0070 2B4B     		ldr	r3, .L2+24
 187 0072 1B78     		ldrb	r3, [r3]
 188 0074 DBB2     		uxtb	r3, r3
 189 0076 43F00303 		orr	r3, r3, #3
 190 007a DBB2     		uxtb	r3, r3
 191 007c 1370     		strb	r3, [r2]
 205:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 192              		.loc 1 205 0
 193 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 8


 194 0080 1846     		mov	r0, r3
 195 0082 FFF7FEFF 		bl	CyExitCriticalSection
 206:Generated_Source\PSoC5/CapSense_CSD.c ****         
 207:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 208:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 196              		.loc 1 208 0
 197 0086 274B     		ldr	r3, .L2+28
 198 0088 FF22     		movs	r2, #255
 199 008a 1A70     		strb	r2, [r3]
 209:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 200              		.loc 1 209 0
 201 008c 264B     		ldr	r3, .L2+32
 202 008e FF22     		movs	r2, #255
 203 0090 1A70     		strb	r2, [r3]
 210:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 204              		.loc 1 210 0
 205 0092 264B     		ldr	r3, .L2+36
 206 0094 FF22     		movs	r2, #255
 207 0096 1A70     		strb	r2, [r3]
 211:Generated_Source\PSoC5/CapSense_CSD.c ****         
 212:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 213:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 208              		.loc 1 213 0
 209 0098 254B     		ldr	r3, .L2+40
 210 009a FF22     		movs	r2, #255
 211 009c 1A70     		strb	r2, [r3]
 214:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 212              		.loc 1 214 0
 213 009e 254B     		ldr	r3, .L2+44
 214 00a0 FF22     		movs	r2, #255
 215 00a2 1A70     		strb	r2, [r3]
 215:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 216              		.loc 1 215 0
 217 00a4 244B     		ldr	r3, .L2+48
 218 00a6 FF22     		movs	r2, #255
 219 00a8 1A70     		strb	r2, [r3]
 216:Generated_Source\PSoC5/CapSense_CSD.c ****         
 217:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 218:Generated_Source\PSoC5/CapSense_CSD.c ****     
 219:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 220:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 221:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 222:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 223:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 224:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH1_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 225:Generated_Source\PSoC5/CapSense_CSD.c ****             
 226:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 227:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 228:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 229:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_RAW_CH1_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 230:Generated_Source\PSoC5/CapSense_CSD.c ****            
 231:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 232:Generated_Source\PSoC5/CapSense_CSD.c ****             /*Window PWM and Raw Counter AUX set */
 233:Generated_Source\PSoC5/CapSense_CSD.c ****             enableInterrupts = CyEnterCriticalSection();
 234:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 235:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 236:Generated_Source\PSoC5/CapSense_CSD.c ****             CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 9


 237:Generated_Source\PSoC5/CapSense_CSD.c ****             
 238:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 239:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 240:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 241:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 242:Generated_Source\PSoC5/CapSense_CSD.c ****             
 243:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 244:Generated_Source\PSoC5/CapSense_CSD.c ****             
 245:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 246:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 247:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 248:Generated_Source\PSoC5/CapSense_CSD.c ****             
 249:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 250:Generated_Source\PSoC5/CapSense_CSD.c ****     
 251:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 252:Generated_Source\PSoC5/CapSense_CSD.c ****     
 253:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup ISR */
 254:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 220              		.loc 1 254 0
 221 00aa 244B     		ldr	r3, .L2+52
 222 00ac 0122     		movs	r2, #1
 223 00ae 1A60     		str	r2, [r3]
 255:Generated_Source\PSoC5/CapSense_CSD.c ****     (void)CyIntSetVector(CapSense_CSD_IsrCH0_ISR_NUMBER, &CapSense_CSD_IsrCH0_ISR);
 224              		.loc 1 255 0
 225 00b0 2349     		ldr	r1, .L2+56
 226 00b2 0020     		movs	r0, #0
 227 00b4 FFF7FEFF 		bl	CyIntSetVector
 256:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntSetPriority(CapSense_CSD_IsrCH0_ISR_NUMBER, CapSense_CSD_IsrCH0_ISR_PRIORITY);
 228              		.loc 1 256 0
 229 00b8 0721     		movs	r1, #7
 230 00ba 0020     		movs	r0, #0
 231 00bc FFF7FEFF 		bl	CyIntSetPriority
 257:Generated_Source\PSoC5/CapSense_CSD.c ****     
 258:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 259:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 260:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetVector(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR);
 261:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetPriority(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR_PRIORITY);
 262:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 263:Generated_Source\PSoC5/CapSense_CSD.c ****     
 264:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 265:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Init();
 232              		.loc 1 265 0
 233 00c0 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Init
 266:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMOD_CHANNEL);
 234              		.loc 1 266 0
 235 00c4 0520     		movs	r0, #5
 236 00c6 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 267:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMP_VP_CHANNEL);
 237              		.loc 1 267 0
 238 00ca 0620     		movs	r0, #6
 239 00cc FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 268:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 269:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
 240              		.loc 1 269 0
 241 00d0 0720     		movs	r0, #7
 242 00d2 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 270:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 10


 271:Generated_Source\PSoC5/CapSense_CSD.c ****     
 272:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 273:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Init();
 274:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMOD_CHANNEL);
 275:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMP_VP_CHANNEL);
 276:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 277:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
 278:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 279:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 280:Generated_Source\PSoC5/CapSense_CSD.c ****     
 281:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Int Rb */
 282:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
 283:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_InitRb();
 284:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */
 285:Generated_Source\PSoC5/CapSense_CSD.c ****     
 286:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable window generation */
 287:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 243              		.loc 1 287 0
 244 00d6 1B4A     		ldr	r2, .L2+60
 245 00d8 1A4B     		ldr	r3, .L2+60
 246 00da 1B78     		ldrb	r3, [r3]
 247 00dc DBB2     		uxtb	r3, r3
 248 00de 43F00403 		orr	r3, r3, #4
 249 00e2 DBB2     		uxtb	r3, r3
 250 00e4 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 289:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 290:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 291:Generated_Source\PSoC5/CapSense_CSD.c ****     
 292:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Cmp and Idac */
 293:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Init();
 251              		.loc 1 293 0
 252 00e6 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Init
 294:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 295:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Init();
 253              		.loc 1 295 0
 254 00ea FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Init
 296:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetPolarity(CapSense_CSD_IdacCH0_IDIR);
 255              		.loc 1 296 0
 256 00ee 0020     		movs	r0, #0
 257 00f0 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetPolarity
 297:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 258              		.loc 1 297 0
 259 00f4 0420     		movs	r0, #4
 260 00f6 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetRange
 298:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 261              		.loc 1 298 0
 262 00fa 0020     		movs	r0, #0
 263 00fc FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 299:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 300:Generated_Source\PSoC5/CapSense_CSD.c ****     
 301:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 302:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Init();
 303:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 304:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Init();
 305:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetPolarity(CapSense_CSD_IdacCH1_IDIR);
 306:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 11


 307:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 308:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 309:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 310:Generated_Source\PSoC5/CapSense_CSD.c ****     
 311:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Vref if as VDAC */
 312:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 313:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Init();
 314:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 315:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Init();
 316:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 317:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 318:Generated_Source\PSoC5/CapSense_CSD.c **** }
 264              		.loc 1 318 0
 265 0100 00BF     		nop
 266 0102 0837     		adds	r7, r7, #8
 267              		.cfi_def_cfa_offset 8
 268 0104 BD46     		mov	sp, r7
 269              		.cfi_def_cfa_register 13
 270              		@ sp needed
 271 0106 80BD     		pop	{r7, pc}
 272              	.L3:
 273              		.align	2
 274              	.L2:
 275 0108 9C640040 		.word	1073767580
 276 010c 9D640040 		.word	1073767581
 277 0110 2C640040 		.word	1073767468
 278 0114 4C640040 		.word	1073767500
 279 0118 8A640040 		.word	1073767562
 280 011c 9E640040 		.word	1073767582
 281 0120 9F640040 		.word	1073767583
 282 0124 2E640040 		.word	1073767470
 283 0128 4E640040 		.word	1073767502
 284 012c 0E640040 		.word	1073767438
 285 0130 2F640040 		.word	1073767471
 286 0134 5F640040 		.word	1073767519
 287 0138 4F640040 		.word	1073767503
 288 013c 80E100E0 		.word	-536813184
 289 0140 00000000 		.word	CapSense_CSD_IsrCH0_ISR
 290 0144 7C640040 		.word	1073767548
 291              		.cfi_endproc
 292              	.LFE0:
 293              		.size	CapSense_CSD_Init, .-CapSense_CSD_Init
 294              		.section	.text.CapSense_CSD_Enable,"ax",%progbits
 295              		.align	2
 296              		.global	CapSense_CSD_Enable
 297              		.thumb
 298              		.thumb_func
 299              		.type	CapSense_CSD_Enable, %function
 300              	CapSense_CSD_Enable:
 301              	.LFB1:
 319:Generated_Source\PSoC5/CapSense_CSD.c **** 
 320:Generated_Source\PSoC5/CapSense_CSD.c **** 
 321:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 322:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Enable
 323:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 324:Generated_Source\PSoC5/CapSense_CSD.c **** *
 325:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 12


 326:Generated_Source\PSoC5/CapSense_CSD.c **** *  Enables active mode power template bits for number of component used within 
 327:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense.
 328:Generated_Source\PSoC5/CapSense_CSD.c **** *
 329:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 330:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 331:Generated_Source\PSoC5/CapSense_CSD.c **** *
 332:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 333:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 334:Generated_Source\PSoC5/CapSense_CSD.c **** *
 335:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 336:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Enable(void) 
 337:Generated_Source\PSoC5/CapSense_CSD.c **** {
 302              		.loc 1 337 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 8
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 80B5     		push	{r7, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 82B0     		sub	sp, sp, #8
 311              		.cfi_def_cfa_offset 16
 312 0004 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 338:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 enableInterrupts;
 339:Generated_Source\PSoC5/CapSense_CSD.c ****     
 340:Generated_Source\PSoC5/CapSense_CSD.c ****     enableInterrupts = CyEnterCriticalSection();
 314              		.loc 1 340 0
 315 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 316 000a 0346     		mov	r3, r0
 317 000c FB71     		strb	r3, [r7, #7]
 341:Generated_Source\PSoC5/CapSense_CSD.c ****     
 342:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Prescaler */
 343:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 344:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 345:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 346:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  |= CapSense_CSD_PRESCALER_ACT_PWR_EN;
 347:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG |= CapSense_CSD_PRESCALER_STBY_PWR_EN;
 348:Generated_Source\PSoC5/CapSense_CSD.c ****         
 349:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 350:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 351:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 352:Generated_Source\PSoC5/CapSense_CSD.c ****     
 353:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable ScanSpeed */
 354:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG |= CapSense_CSD_SCANSPEED_CTRL_ENABLE;
 318              		.loc 1 354 0
 319 000e 1C4A     		ldr	r2, .L5
 320 0010 1B4B     		ldr	r3, .L5
 321 0012 1B78     		ldrb	r3, [r3]
 322 0014 DBB2     		uxtb	r3, r3
 323 0016 43F02003 		orr	r3, r3, #32
 324 001a DBB2     		uxtb	r3, r3
 325 001c 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC5/CapSense_CSD.c ****     
 356:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH0 */
 357:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 358:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 13


 359:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 360:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 361:Generated_Source\PSoC5/CapSense_CSD.c ****         
 362:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 363:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 364:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 365:Generated_Source\PSoC5/CapSense_CSD.c ****         
 366:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 367:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 368:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 369:Generated_Source\PSoC5/CapSense_CSD.c ****         
 370:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 371:Generated_Source\PSoC5/CapSense_CSD.c ****     
 372:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH1*/
 373:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 374:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 375:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 376:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 377:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 378:Generated_Source\PSoC5/CapSense_CSD.c ****             
 379:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 380:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 381:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 382:Generated_Source\PSoC5/CapSense_CSD.c ****            
 383:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 384:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 385:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 386:Generated_Source\PSoC5/CapSense_CSD.c ****         
 387:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 388:Generated_Source\PSoC5/CapSense_CSD.c ****     
 389:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 390:Generated_Source\PSoC5/CapSense_CSD.c ****     
 391:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable the Clock */
 392:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 393:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Enable();
 326              		.loc 1 393 0
 327 001e FFF7FEFF 		bl	CapSense_CSD_IntClock_Start
 394:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 395:Generated_Source\PSoC5/CapSense_CSD.c ****     
 396:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup Cmp and Idac */
 397:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Enable();
 328              		.loc 1 397 0
 329 0022 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Enable
 398:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 399:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Enable();
 330              		.loc 1 399 0
 331 0026 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Enable
 400:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 401:Generated_Source\PSoC5/CapSense_CSD.c ****     
 402:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 403:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Enable();
 404:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 405:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Enable();
 406:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 407:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 408:Generated_Source\PSoC5/CapSense_CSD.c ****     
 409:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Vref */
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 14


 410:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 411:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Enable();
 412:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_SetValue(CapSense_CSD_VdacRefCH0_DEFAULT_DATA);
 413:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 414:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Enable();
 415:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_SetValue(CapSense_CSD_VdacRefCH1_DEFAULT_DATA);
 416:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 417:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 418:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 419:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG |= CapSense_CSD_BufCH0_STBY_PWR_EN;
 332              		.loc 1 419 0
 333 002a 164A     		ldr	r2, .L5+4
 334 002c 154B     		ldr	r3, .L5+4
 335 002e 1B78     		ldrb	r3, [r3]
 336 0030 DBB2     		uxtb	r3, r3
 337 0032 43F02003 		orr	r3, r3, #32
 338 0036 DBB2     		uxtb	r3, r3
 339 0038 1370     		strb	r3, [r2]
 420:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH0_ACT_PWR_EN;
 340              		.loc 1 420 0
 341 003a 134A     		ldr	r2, .L5+8
 342 003c 124B     		ldr	r3, .L5+8
 343 003e 1B78     		ldrb	r3, [r3]
 344 0040 DBB2     		uxtb	r3, r3
 345 0042 43F02003 		orr	r3, r3, #32
 346 0046 DBB2     		uxtb	r3, r3
 347 0048 1370     		strb	r3, [r2]
 421:Generated_Source\PSoC5/CapSense_CSD.c ****         
 422:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 423:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG |= CapSense_CSD_BufCH1_STBY_PWR_EN;
 424:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH1_ACT_PWR_EN;
 425:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 426:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 427:Generated_Source\PSoC5/CapSense_CSD.c ****     
 428:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set reference on AMux Bus */
 429:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 430:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Connect Vdac to AMux Bus */
 431:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
 432:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 433:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
 434:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 435:Generated_Source\PSoC5/CapSense_CSD.c ****         
 436:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 437:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 438:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 348              		.loc 1 438 0
 349 004a 104A     		ldr	r2, .L5+12
 350 004c 0F4B     		ldr	r3, .L5+12
 351 004e 1B78     		ldrb	r3, [r3]
 352 0050 DBB2     		uxtb	r3, r3
 353 0052 43F00103 		orr	r3, r3, #1
 354 0056 DBB2     		uxtb	r3, r3
 355 0058 1370     		strb	r3, [r2]
 439:Generated_Source\PSoC5/CapSense_CSD.c ****         
 440:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 441:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 442:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 15


 443:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)*/
 444:Generated_Source\PSoC5/CapSense_CSD.c ****     
 445:Generated_Source\PSoC5/CapSense_CSD.c ****     CyExitCriticalSection(enableInterrupts);
 356              		.loc 1 445 0
 357 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 358 005c 1846     		mov	r0, r3
 359 005e FFF7FEFF 		bl	CyExitCriticalSection
 446:Generated_Source\PSoC5/CapSense_CSD.c ****     
 447:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable interrupt */
 448:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 360              		.loc 1 448 0
 361 0062 0B4B     		ldr	r3, .L5+16
 362 0064 0122     		movs	r2, #1
 363 0066 1A60     		str	r2, [r3]
 449:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 450:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntEnable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 451:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 452:Generated_Source\PSoC5/CapSense_CSD.c ****     
 453:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Enable state */
 454:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_CAPSENSE_EN;
 364              		.loc 1 454 0
 365 0068 0A4A     		ldr	r2, .L5+20
 366 006a 0A4B     		ldr	r3, .L5+20
 367 006c 1B78     		ldrb	r3, [r3]
 368 006e DBB2     		uxtb	r3, r3
 369 0070 63F07F03 		orn	r3, r3, #127
 370 0074 DBB2     		uxtb	r3, r3
 371 0076 1370     		strb	r3, [r2]
 455:Generated_Source\PSoC5/CapSense_CSD.c **** }
 372              		.loc 1 455 0
 373 0078 00BF     		nop
 374 007a 0837     		adds	r7, r7, #8
 375              		.cfi_def_cfa_offset 8
 376 007c BD46     		mov	sp, r7
 377              		.cfi_def_cfa_register 13
 378              		@ sp needed
 379 007e 80BD     		pop	{r7, pc}
 380              	.L6:
 381              		.align	2
 382              	.L5:
 383 0080 9A640040 		.word	1073767578
 384 0084 BB430040 		.word	1073759163
 385 0088 AB430040 		.word	1073759147
 386 008c 72580040 		.word	1073764466
 387 0090 00E100E0 		.word	-536813312
 388 0094 7C640040 		.word	1073767548
 389              		.cfi_endproc
 390              	.LFE1:
 391              		.size	CapSense_CSD_Enable, .-CapSense_CSD_Enable
 392              		.section	.text.CapSense_CSD_Start,"ax",%progbits
 393              		.align	2
 394              		.global	CapSense_CSD_Start
 395              		.thumb
 396              		.thumb_func
 397              		.type	CapSense_CSD_Start, %function
 398              	CapSense_CSD_Start:
 399              	.LFB2:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 16


 456:Generated_Source\PSoC5/CapSense_CSD.c **** 
 457:Generated_Source\PSoC5/CapSense_CSD.c **** 
 458:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 459:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Start
 460:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 461:Generated_Source\PSoC5/CapSense_CSD.c **** *
 462:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 463:Generated_Source\PSoC5/CapSense_CSD.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 464:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 465:Generated_Source\PSoC5/CapSense_CSD.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 466:Generated_Source\PSoC5/CapSense_CSD.c **** *  applied for all sensors.
 467:Generated_Source\PSoC5/CapSense_CSD.c **** *
 468:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 469:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 470:Generated_Source\PSoC5/CapSense_CSD.c **** *
 471:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 472:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 473:Generated_Source\PSoC5/CapSense_CSD.c **** *
 474:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 475:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_initVar - used to check initial configuration, modified on 
 476:Generated_Source\PSoC5/CapSense_CSD.c **** *  first function call.
 477:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_lowLevelTuningDone - used to notify the Tuner GUI that 
 478:Generated_Source\PSoC5/CapSense_CSD.c **** *  tuning of scanning parameters are done.
 479:Generated_Source\PSoC5/CapSense_CSD.c **** *
 480:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 481:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 482:Generated_Source\PSoC5/CapSense_CSD.c **** *
 483:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
 484:Generated_Source\PSoC5/CapSense_CSD.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 485:Generated_Source\PSoC5/CapSense_CSD.c **** *  must be manually enabled as their long scan time is incompatible 
 486:Generated_Source\PSoC5/CapSense_CSD.c **** *  with the fast response required of other widget types. 
 487:Generated_Source\PSoC5/CapSense_CSD.c **** *
 488:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 489:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Start(void)  
 490:Generated_Source\PSoC5/CapSense_CSD.c **** {
 400              		.loc 1 490 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 1, uses_anonymous_args = 0
 404 0000 80B5     		push	{r7, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
 408 0002 00AF     		add	r7, sp, #0
 409              		.cfi_def_cfa_register 7
 491:Generated_Source\PSoC5/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 410              		.loc 1 491 0
 411 0004 064B     		ldr	r3, .L9
 412 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 413 0008 002B     		cmp	r3, #0
 414 000a 04D1     		bne	.L8
 492:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 493:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_Init();
 415              		.loc 1 493 0
 416 000c FFF7FEFF 		bl	CapSense_CSD_Init
 494:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 417              		.loc 1 494 0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 17


 418 0010 034B     		ldr	r3, .L9
 419 0012 0122     		movs	r2, #1
 420 0014 1A70     		strb	r2, [r3]
 421              	.L8:
 495:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 496:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_Enable();
 422              		.loc 1 496 0
 423 0016 FFF7FEFF 		bl	CapSense_CSD_Enable
 497:Generated_Source\PSoC5/CapSense_CSD.c ****     
 498:Generated_Source\PSoC5/CapSense_CSD.c ****     /* AutoTunning start */
 499:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 500:Generated_Source\PSoC5/CapSense_CSD.c ****         /* AutoTune by sensor or pair of sensor basis */
 501:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AutoTune();
 502:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_lowLevelTuningDone = 1u;
 503:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 504:Generated_Source\PSoC5/CapSense_CSD.c **** }
 424              		.loc 1 504 0
 425 001a 00BF     		nop
 426 001c 80BD     		pop	{r7, pc}
 427              	.L10:
 428 001e 00BF     		.align	2
 429              	.L9:
 430 0020 00000000 		.word	CapSense_CSD_initVar
 431              		.cfi_endproc
 432              	.LFE2:
 433              		.size	CapSense_CSD_Start, .-CapSense_CSD_Start
 434              		.section	.text.CapSense_CSD_Stop,"ax",%progbits
 435              		.align	2
 436              		.global	CapSense_CSD_Stop
 437              		.thumb
 438              		.thumb_func
 439              		.type	CapSense_CSD_Stop, %function
 440              	CapSense_CSD_Stop:
 441              	.LFB3:
 505:Generated_Source\PSoC5/CapSense_CSD.c **** 
 506:Generated_Source\PSoC5/CapSense_CSD.c **** 
 507:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 508:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Stop
 509:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 510:Generated_Source\PSoC5/CapSense_CSD.c **** *
 511:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 512:Generated_Source\PSoC5/CapSense_CSD.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 513:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 514:Generated_Source\PSoC5/CapSense_CSD.c **** *  number of component used within CapSense.
 515:Generated_Source\PSoC5/CapSense_CSD.c **** *
 516:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 517:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 518:Generated_Source\PSoC5/CapSense_CSD.c **** *
 519:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 520:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 521:Generated_Source\PSoC5/CapSense_CSD.c **** *
 522:Generated_Source\PSoC5/CapSense_CSD.c **** * Side Effects:
 523:Generated_Source\PSoC5/CapSense_CSD.c **** *  This function should be called after scans will be completed.
 524:Generated_Source\PSoC5/CapSense_CSD.c **** *
 525:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 526:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Stop(void) 
 527:Generated_Source\PSoC5/CapSense_CSD.c **** {
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 18


 442              		.loc 1 527 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 0000 80B5     		push	{r7, lr}
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 0002 00AF     		add	r7, sp, #0
 451              		.cfi_def_cfa_register 7
 528:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Stop Capsensing */
 529:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_START);
 452              		.loc 1 529 0
 453 0004 1E4A     		ldr	r2, .L12
 454 0006 1E4B     		ldr	r3, .L12
 455 0008 1B78     		ldrb	r3, [r3]
 456 000a DBB2     		uxtb	r3, r3
 457 000c 23F00203 		bic	r3, r3, #2
 458 0010 DBB2     		uxtb	r3, r3
 459 0012 1370     		strb	r3, [r2]
 530:Generated_Source\PSoC5/CapSense_CSD.c ****     
 531:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable interrupt */
 532:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 460              		.loc 1 532 0
 461 0014 1B4B     		ldr	r3, .L12+4
 462 0016 0122     		movs	r2, #1
 463 0018 1A60     		str	r2, [r3]
 533:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 534:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 535:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 536:Generated_Source\PSoC5/CapSense_CSD.c ****     
 537:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 538:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 464              		.loc 1 538 0
 465 001a FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 539:Generated_Source\PSoC5/CapSense_CSD.c ****     
 540:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Prescaler */
 541:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 542:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 543:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)        
 544:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_CSD_PRESCALER_ACT_PWR_EN;
 545:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_CSD_PRESCALER_STBY_PWR_EN;
 546:Generated_Source\PSoC5/CapSense_CSD.c ****         
 547:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 548:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 549:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 550:Generated_Source\PSoC5/CapSense_CSD.c ****     
 551:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable ScanSpeed */
 552:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_CSD_SCANSPEED_CTRL_ENABLE);
 466              		.loc 1 552 0
 467 001e 1A4A     		ldr	r2, .L12+8
 468 0020 194B     		ldr	r3, .L12+8
 469 0022 1B78     		ldrb	r3, [r3]
 470 0024 DBB2     		uxtb	r3, r3
 471 0026 23F02003 		bic	r3, r3, #32
 472 002a DBB2     		uxtb	r3, r3
 473 002c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 19


 553:Generated_Source\PSoC5/CapSense_CSD.c ****     
 554:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH0 */
 555:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 556:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 557:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 558:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 559:Generated_Source\PSoC5/CapSense_CSD.c **** 
 560:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 561:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 562:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 563:Generated_Source\PSoC5/CapSense_CSD.c **** 
 564:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 565:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 566:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 567:Generated_Source\PSoC5/CapSense_CSD.c ****         
 568:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 569:Generated_Source\PSoC5/CapSense_CSD.c ****     
 570:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH1 */
 571:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 572:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 573:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 574:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 575:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 576:Generated_Source\PSoC5/CapSense_CSD.c ****     
 577:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 578:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 579:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 580:Generated_Source\PSoC5/CapSense_CSD.c ****            
 581:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 582:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 583:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 584:Generated_Source\PSoC5/CapSense_CSD.c ****         
 585:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 586:Generated_Source\PSoC5/CapSense_CSD.c ****     
 587:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 588:Generated_Source\PSoC5/CapSense_CSD.c ****     
 589:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable the Clock */
 590:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 591:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Stop();
 474              		.loc 1 591 0
 475 002e FFF7FEFF 		bl	CapSense_CSD_IntClock_Stop
 592:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 593:Generated_Source\PSoC5/CapSense_CSD.c ****     
 594:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable power from Cmp and Idac */
 595:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Stop();
 476              		.loc 1 595 0
 477 0032 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Stop
 596:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 597:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Stop();
 478              		.loc 1 597 0
 479 0036 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Stop
 598:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 599:Generated_Source\PSoC5/CapSense_CSD.c ****     
 600:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 601:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Stop();
 602:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 603:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Stop();
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 20


 604:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 605:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */    
 606:Generated_Source\PSoC5/CapSense_CSD.c ****     
 607:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Vref if as VDAC */
 608:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 609:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Stop();
 610:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 611:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Stop();
 612:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 613:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 614:Generated_Source\PSoC5/CapSense_CSD.c **** 
 615:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
 616:Generated_Source\PSoC5/CapSense_CSD.c ****         /* The Idac turn off before */
 617:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 618:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 619:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 480              		.loc 1 619 0
 481 003a 144A     		ldr	r2, .L12+12
 482 003c 134B     		ldr	r3, .L12+12
 483 003e 1B78     		ldrb	r3, [r3]
 484 0040 DBB2     		uxtb	r3, r3
 485 0042 23F00103 		bic	r3, r3, #1
 486 0046 DBB2     		uxtb	r3, r3
 487 0048 1370     		strb	r3, [r2]
 620:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_ACT_PWR_EN);
 488              		.loc 1 620 0
 489 004a 114A     		ldr	r2, .L12+16
 490 004c 104B     		ldr	r3, .L12+16
 491 004e 1B78     		ldrb	r3, [r3]
 492 0050 DBB2     		uxtb	r3, r3
 493 0052 23F02003 		bic	r3, r3, #32
 494 0056 DBB2     		uxtb	r3, r3
 495 0058 1370     		strb	r3, [r2]
 621:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_STBY_PWR_EN);
 496              		.loc 1 621 0
 497 005a 0E4A     		ldr	r2, .L12+20
 498 005c 0D4B     		ldr	r3, .L12+20
 499 005e 1B78     		ldrb	r3, [r3]
 500 0060 DBB2     		uxtb	r3, r3
 501 0062 23F02003 		bic	r3, r3, #32
 502 0066 DBB2     		uxtb	r3, r3
 503 0068 1370     		strb	r3, [r2]
 622:Generated_Source\PSoC5/CapSense_CSD.c ****         
 623:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 624:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 625:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_ACT_PWR_EN);
 626:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_STBY_PWR_EN);
 627:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /*(CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 628:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 629:Generated_Source\PSoC5/CapSense_CSD.c ****     
 630:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Disable state */
 631:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_CAPSENSE_EN);
 504              		.loc 1 631 0
 505 006a 054A     		ldr	r2, .L12
 506 006c 044B     		ldr	r3, .L12
 507 006e 1B78     		ldrb	r3, [r3]
 508 0070 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 21


 509 0072 03F07F03 		and	r3, r3, #127
 510 0076 DBB2     		uxtb	r3, r3
 511 0078 1370     		strb	r3, [r2]
 632:Generated_Source\PSoC5/CapSense_CSD.c **** }
 512              		.loc 1 632 0
 513 007a 00BF     		nop
 514 007c 80BD     		pop	{r7, pc}
 515              	.L13:
 516 007e 00BF     		.align	2
 517              	.L12:
 518 0080 7C640040 		.word	1073767548
 519 0084 80E100E0 		.word	-536813184
 520 0088 9A640040 		.word	1073767578
 521 008c 72580040 		.word	1073764466
 522 0090 AB430040 		.word	1073759147
 523 0094 BB430040 		.word	1073759163
 524              		.cfi_endproc
 525              	.LFE3:
 526              		.size	CapSense_CSD_Stop, .-CapSense_CSD_Stop
 527              		.section	.text.CapSense_CSD_FindNextSensor,"ax",%progbits
 528              		.align	2
 529              		.global	CapSense_CSD_FindNextSensor
 530              		.thumb
 531              		.thumb_func
 532              		.type	CapSense_CSD_FindNextSensor, %function
 533              	CapSense_CSD_FindNextSensor:
 534              	.LFB4:
 633:Generated_Source\PSoC5/CapSense_CSD.c **** 
 634:Generated_Source\PSoC5/CapSense_CSD.c **** 
 635:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 636:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 637:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextSensor
 638:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 639:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 640:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 641:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next sensor to scan. 
 642:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 643:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 644:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index of sensor.
 645:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 646:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 647:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next sensor index to scan.
 648:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 649:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 650:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 651:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 652:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 653:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 654:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 655:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 656:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 657:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 658:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 659:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 660:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on current scanning scanning and should not
 661:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 662:Generated_Source\PSoC5/CapSense_CSD.c ****     *
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 22


 663:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 664:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextSensor(uint8 snsIndex) CYREENTRANT
 665:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 535              		.loc 1 665 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 16
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540 0000 80B4     		push	{r7}
 541              		.cfi_def_cfa_offset 4
 542              		.cfi_offset 7, -4
 543 0002 85B0     		sub	sp, sp, #20
 544              		.cfi_def_cfa_offset 24
 545 0004 00AF     		add	r7, sp, #0
 546              		.cfi_def_cfa_register 7
 547 0006 0346     		mov	r3, r0
 548 0008 FB71     		strb	r3, [r7, #7]
 549              	.L17:
 666:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 pos;
 667:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMask;
 668:Generated_Source\PSoC5/CapSense_CSD.c ****         
 669:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor enabled */
 670:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 671:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 672:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Proceed with the next sensor */
 673:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex++;
 550              		.loc 1 673 0
 551 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 552 000c 0133     		adds	r3, r3, #1
 553 000e FB71     		strb	r3, [r7, #7]
 674:Generated_Source\PSoC5/CapSense_CSD.c ****             if(snsIndex == CapSense_CSD_TOTAL_SENSOR_COUNT)
 554              		.loc 1 674 0
 555 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 556 0012 052B     		cmp	r3, #5
 557 0014 12D0     		beq	.L19
 675:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 676:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 677:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 678:Generated_Source\PSoC5/CapSense_CSD.c ****             pos = (snsIndex >> 3u);
 558              		.loc 1 678 0
 559 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 560 0018 DB08     		lsrs	r3, r3, #3
 561 001a FB73     		strb	r3, [r7, #15]
 679:Generated_Source\PSoC5/CapSense_CSD.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 562              		.loc 1 679 0
 563 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 564 001e 03F00703 		and	r3, r3, #7
 565 0022 0122     		movs	r2, #1
 566 0024 02FA03F3 		lsl	r3, r2, r3
 567 0028 BB73     		strb	r3, [r7, #14]
 680:Generated_Source\PSoC5/CapSense_CSD.c ****         }    
 681:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u);
 568              		.loc 1 681 0
 569 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 570 002c 074A     		ldr	r2, .L20
 571 002e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 572 0030 BB7B     		ldrb	r3, [r7, #14]
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 23


 573 0032 1340     		ands	r3, r3, r2
 574 0034 DBB2     		uxtb	r3, r3
 575 0036 002B     		cmp	r3, #0
 576 0038 E7D0     		beq	.L17
 577 003a 00E0     		b	.L16
 578              	.L19:
 676:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 579              		.loc 1 676 0
 580 003c 00BF     		nop
 581              	.L16:
 682:Generated_Source\PSoC5/CapSense_CSD.c ****         
 683:Generated_Source\PSoC5/CapSense_CSD.c ****         return snsIndex;
 582              		.loc 1 683 0
 583 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 684:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 584              		.loc 1 684 0
 585 0040 1846     		mov	r0, r3
 586 0042 1437     		adds	r7, r7, #20
 587              		.cfi_def_cfa_offset 4
 588 0044 BD46     		mov	sp, r7
 589              		.cfi_def_cfa_register 13
 590              		@ sp needed
 591 0046 80BC     		pop	{r7}
 592              		.cfi_restore 7
 593              		.cfi_def_cfa_offset 0
 594 0048 7047     		bx	lr
 595              	.L21:
 596 004a 00BF     		.align	2
 597              	.L20:
 598 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 599              		.cfi_endproc
 600              	.LFE4:
 601              		.size	CapSense_CSD_FindNextSensor, .-CapSense_CSD_FindNextSensor
 602              		.section	.text.CapSense_CSD_SetScanSlotSettings,"ax",%progbits
 603              		.align	2
 604              		.global	CapSense_CSD_SetScanSlotSettings
 605              		.thumb
 606              		.thumb_func
 607              		.type	CapSense_CSD_SetScanSlotSettings, %function
 608              	CapSense_CSD_SetScanSlotSettings:
 609              	.LFB5:
 685:Generated_Source\PSoC5/CapSense_CSD.c ****  #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
 686:Generated_Source\PSoC5/CapSense_CSD.c ****  
 687:Generated_Source\PSoC5/CapSense_CSD.c ****  
 688:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 689:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 690:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextPair
 691:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 692:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 693:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 694:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 695:Generated_Source\PSoC5/CapSense_CSD.c ****     *  
 696:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 697:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index pair of sensors.
 698:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 699:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 700:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next pair of sensors index to scan.
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 24


 701:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 702:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 703:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 704:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 705:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 706:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 707:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 708:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 709:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 710:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 711:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 712:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 713:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on control signals set for scanning and should not
 714:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 715:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 716:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 717:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextPair(uint8 snsIndex) CYREENTRANT
 718:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 719:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 posCh;
 720:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMaskCh;
 721:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 newRegValue;
 722:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh0 = snsIndex;
 723:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh1 = snsIndex + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 724:Generated_Source\PSoC5/CapSense_CSD.c ****         
 725:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 0 */
 726:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 727:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 728:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 729:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh0++;
 730:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh0 >= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 731:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 732:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH1 */
 733:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh0 = CapSense_CSD_END_OF_SCAN__CH0;
 734:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 735:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 736:Generated_Source\PSoC5/CapSense_CSD.c ****             
 737:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh0 >> 3u);
 738:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 739:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 740:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 741:Generated_Source\PSoC5/CapSense_CSD.c ****         
 742:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 1 */
 743:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 744:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 745:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 746:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh1++;        
 747:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh1 >= CapSense_CSD_TOTAL_SENSOR_COUNT)
 748:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 749:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH0 */
 750:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh1 = CapSense_CSD_END_OF_SCAN__CH1;
 751:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 752:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 753:Generated_Source\PSoC5/CapSense_CSD.c ****             
 754:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh1 >> 3u);
 755:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 756:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
 757:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 25


 758:Generated_Source\PSoC5/CapSense_CSD.c ****         
 759:Generated_Source\PSoC5/CapSense_CSD.c ****         indexCh1 -= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 760:Generated_Source\PSoC5/CapSense_CSD.c ****         
 761:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find the pair to scan */
 762:Generated_Source\PSoC5/CapSense_CSD.c ****         if(indexCh0 == indexCh1)
 763:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 764:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans TWO Channels */
 765:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh0;
 766:Generated_Source\PSoC5/CapSense_CSD.c ****             
 767:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= (CapSense_CSD_CTRL_WINDOW_EN__CH0 | 
 768:Generated_Source\PSoC5/CapSense_CSD.c ****                                              CapSense_CSD_CTRL_WINDOW_EN__CH1);
 769:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 770:Generated_Source\PSoC5/CapSense_CSD.c ****         else if(indexCh0 < indexCh1)
 771:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 772:Generated_Source\PSoC5/CapSense_CSD.c ****            /* Scans Channel ONE only */
 773:Generated_Source\PSoC5/CapSense_CSD.c ****            snsIndex = indexCh0;
 774:Generated_Source\PSoC5/CapSense_CSD.c ****            
 775:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 776:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 777:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 778:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 779:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 780:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 781:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 782:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans Channel TWO only */
 783:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh1;
 784:Generated_Source\PSoC5/CapSense_CSD.c ****             
 785:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 786:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 787:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 788:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 789:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 790:Generated_Source\PSoC5/CapSense_CSD.c ****         
 791:Generated_Source\PSoC5/CapSense_CSD.c ****         return (snsIndex);
 792:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 793:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN */
 794:Generated_Source\PSoC5/CapSense_CSD.c **** 
 795:Generated_Source\PSoC5/CapSense_CSD.c **** 
 796:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 797:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSlotSettings
 798:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 799:Generated_Source\PSoC5/CapSense_CSD.c **** *
 800:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 801:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 802:Generated_Source\PSoC5/CapSense_CSD.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 803:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 804:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 805:Generated_Source\PSoC5/CapSense_CSD.c **** *
 806:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 807:Generated_Source\PSoC5/CapSense_CSD.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 808:Generated_Source\PSoC5/CapSense_CSD.c **** *
 809:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 810:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 811:Generated_Source\PSoC5/CapSense_CSD.c **** *
 812:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 813:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_idacSettings[] - used to store idac value for every sensor.
 814:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_widgetResolution[] - used to store scan resolution of every 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 26


 815:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 816:Generated_Source\PSoC5/CapSense_CSD.c **** *
 817:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 818:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSlotSettings(uint8 slot) CYREENTRANT
 819:Generated_Source\PSoC5/CapSense_CSD.c **** {
 610              		.loc 1 819 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 16
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614 0000 80B5     		push	{r7, lr}
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 7, -8
 617              		.cfi_offset 14, -4
 618 0002 84B0     		sub	sp, sp, #16
 619              		.cfi_def_cfa_offset 24
 620 0004 00AF     		add	r7, sp, #0
 621              		.cfi_def_cfa_register 7
 622 0006 0346     		mov	r3, r0
 623 0008 FB71     		strb	r3, [r7, #7]
 820:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 widget;
 821:Generated_Source\PSoC5/CapSense_CSD.c ****     
 822:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 823:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Define widget sensor belongs to */
 824:Generated_Source\PSoC5/CapSense_CSD.c ****         widget = CapSense_CSD_widgetNumber[slot];
 624              		.loc 1 824 0
 625 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 626 000c 0A4A     		ldr	r2, .L23
 627 000e D35C     		ldrb	r3, [r2, r3]
 628 0010 FB73     		strb	r3, [r7, #15]
 825:Generated_Source\PSoC5/CapSense_CSD.c ****         
 826:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Idac Value */
 827:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 828:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 629              		.loc 1 828 0
 630 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 631 0014 094A     		ldr	r2, .L23+4
 632 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 633 0018 1846     		mov	r0, r3
 634 001a FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 829:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 830:Generated_Source\PSoC5/CapSense_CSD.c ****         
 831:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 832:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 833:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 834:Generated_Source\PSoC5/CapSense_CSD.c ****                 ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FULL_
 835:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 836:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 635              		.loc 1 836 0
 636 001e 084B     		ldr	r3, .L23+8
 637 0020 3F22     		movs	r2, #63
 638 0022 1A70     		strb	r2, [r3]
 837:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 838:Generated_Source\PSoC5/CapSense_CSD.c **** 
 839:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 840:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 841:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 639              		.loc 1 841 0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 27


 640 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 641 0026 074A     		ldr	r2, .L23+12
 642 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 643 002a 1846     		mov	r0, r3
 644 002c FFF7FEFF 		bl	CapSense_CSD_SetPrescaler
 842:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 843:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 844:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 845:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 846:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 847:Generated_Source\PSoC5/CapSense_CSD.c **** 
 848:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 849:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 850:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 851:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Define widget sensor belongs to */
 852:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot];
 853:Generated_Source\PSoC5/CapSense_CSD.c ****             
 854:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 855:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 856:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 857:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 858:Generated_Source\PSoC5/CapSense_CSD.c ****             
 859:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 860:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 861:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 862:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 863:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 864:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 865:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 866:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 867:Generated_Source\PSoC5/CapSense_CSD.c ****         
 868:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 869:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 870:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot+CapSense_CSD_TOTAL_SENSOR_COUNT__CH0];
 871:Generated_Source\PSoC5/CapSense_CSD.c ****         
 872:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 873:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 874:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_idacSettings[slot+
 875:Generated_Source\PSoC5/CapSense_CSD.c ****                                                                              CapSense_CSD_TOTAL_SEN
 876:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 877:Generated_Source\PSoC5/CapSense_CSD.c ****             
 878:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 879:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 880:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH1_PERIOD_PTR,
 881:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 882:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 883:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH1_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 884:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 885:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 886:Generated_Source\PSoC5/CapSense_CSD.c **** 
 887:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 888:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 889:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 890:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 891:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 892:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 893:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 28


 894:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 895:Generated_Source\PSoC5/CapSense_CSD.c **** 
 896:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 897:Generated_Source\PSoC5/CapSense_CSD.c **** }
 645              		.loc 1 897 0
 646 0030 00BF     		nop
 647 0032 1037     		adds	r7, r7, #16
 648              		.cfi_def_cfa_offset 8
 649 0034 BD46     		mov	sp, r7
 650              		.cfi_def_cfa_register 13
 651              		@ sp needed
 652 0036 80BD     		pop	{r7, pc}
 653              	.L24:
 654              		.align	2
 655              	.L23:
 656 0038 00000000 		.word	CapSense_CSD_widgetNumber
 657 003c 00000000 		.word	CapSense_CSD_idacSettings
 658 0040 5E640040 		.word	1073767518
 659 0044 00000000 		.word	CapSense_CSD_analogSwitchDivider
 660              		.cfi_endproc
 661              	.LFE5:
 662              		.size	CapSense_CSD_SetScanSlotSettings, .-CapSense_CSD_SetScanSlotSettings
 663              		.section	.text.CapSense_CSD_ScanSensor,"ax",%progbits
 664              		.align	2
 665              		.global	CapSense_CSD_ScanSensor
 666              		.thumb
 667              		.thumb_func
 668              		.type	CapSense_CSD_ScanSensor, %function
 669              	CapSense_CSD_ScanSensor:
 670              	.LFB6:
 898:Generated_Source\PSoC5/CapSense_CSD.c **** 
 899:Generated_Source\PSoC5/CapSense_CSD.c **** 
 900:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 901:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanSensor
 902:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 903:Generated_Source\PSoC5/CapSense_CSD.c **** *
 904:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 905:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 906:Generated_Source\PSoC5/CapSense_CSD.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 907:Generated_Source\PSoC5/CapSense_CSD.c **** *  at the same time. After scanning is complete the isr copies the measured 
 908:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 909:Generated_Source\PSoC5/CapSense_CSD.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 910:Generated_Source\PSoC5/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 911:Generated_Source\PSoC5/CapSense_CSD.c **** *
 912:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 913:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
 914:Generated_Source\PSoC5/CapSense_CSD.c **** *
 915:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 916:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 917:Generated_Source\PSoC5/CapSense_CSD.c **** *
 918:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 919:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 920:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 921:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 922:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one.
 923:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 924:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to provided sensor argument.
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 29


 925:Generated_Source\PSoC5/CapSense_CSD.c **** *
 926:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 927:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 928:Generated_Source\PSoC5/CapSense_CSD.c **** *
 929:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 930:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanSensor(uint8 sensor)  
 931:Generated_Source\PSoC5/CapSense_CSD.c **** {
 671              		.loc 1 931 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 8
 674              		@ frame_needed = 1, uses_anonymous_args = 0
 675 0000 80B5     		push	{r7, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 7, -8
 678              		.cfi_offset 14, -4
 679 0002 82B0     		sub	sp, sp, #8
 680              		.cfi_def_cfa_offset 16
 681 0004 00AF     		add	r7, sp, #0
 682              		.cfi_def_cfa_register 7
 683 0006 0346     		mov	r3, r0
 684 0008 FB71     		strb	r3, [r7, #7]
 932:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 933:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 685              		.loc 1 933 0
 686 000a 084B     		ldr	r3, .L26
 687 000c 0022     		movs	r2, #0
 688 000e 1A70     		strb	r2, [r3]
 934:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = sensor;
 689              		.loc 1 934 0
 690 0010 074A     		ldr	r2, .L26+4
 691 0012 FB79     		ldrb	r3, [r7, #7]
 692 0014 1370     		strb	r3, [r2]
 935:Generated_Source\PSoC5/CapSense_CSD.c ****     
 936:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 937:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start of sensor scan */
 938:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_csv = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 693              		.loc 1 938 0
 694 0016 054B     		ldr	r3, .L26
 695 0018 8122     		movs	r2, #129
 696 001a 1A70     		strb	r2, [r3]
 939:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan(sensor);
 697              		.loc 1 939 0
 698 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 699 001e 1846     		mov	r0, r3
 700 0020 FFF7FEFF 		bl	CapSense_CSD_PreScan
 940:Generated_Source\PSoC5/CapSense_CSD.c ****         
 941:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 942:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH0: check end of scan conditions */
 943:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 944:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 945:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 946:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 947:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 948:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 949:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 950:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 951:Generated_Source\PSoC5/CapSense_CSD.c ****         
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 30


 952:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH1: check end of scan conditions */
 953:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 954:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 955:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 956:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 957:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 958:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 959:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 960:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 961:Generated_Source\PSoC5/CapSense_CSD.c ****         
 962:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
 963:Generated_Source\PSoC5/CapSense_CSD.c ****         if( ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u) || 
 964:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u) )
 965:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 966:Generated_Source\PSoC5/CapSense_CSD.c ****         
 967:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 968:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(sensor);
 969:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 970:Generated_Source\PSoC5/CapSense_CSD.c ****         
 971:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 972:Generated_Source\PSoC5/CapSense_CSD.c **** }
 701              		.loc 1 972 0
 702 0024 00BF     		nop
 703 0026 0837     		adds	r7, r7, #8
 704              		.cfi_def_cfa_offset 8
 705 0028 BD46     		mov	sp, r7
 706              		.cfi_def_cfa_register 13
 707              		@ sp needed
 708 002a 80BD     		pop	{r7, pc}
 709              	.L27:
 710              		.align	2
 711              	.L26:
 712 002c 00000000 		.word	CapSense_CSD_csv
 713 0030 00000000 		.word	CapSense_CSD_sensorIndex
 714              		.cfi_endproc
 715              	.LFE6:
 716              		.size	CapSense_CSD_ScanSensor, .-CapSense_CSD_ScanSensor
 717              		.section	.text.CapSense_CSD_ScanEnabledWidgets,"ax",%progbits
 718              		.align	2
 719              		.global	CapSense_CSD_ScanEnabledWidgets
 720              		.thumb
 721              		.thumb_func
 722              		.type	CapSense_CSD_ScanEnabledWidgets, %function
 723              	CapSense_CSD_ScanEnabledWidgets:
 724              	.LFB7:
 973:Generated_Source\PSoC5/CapSense_CSD.c **** 
 974:Generated_Source\PSoC5/CapSense_CSD.c **** 
 975:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 976:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanEnableWidgets
 977:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 978:Generated_Source\PSoC5/CapSense_CSD.c **** *
 979:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 980:Generated_Source\PSoC5/CapSense_CSD.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 981:Generated_Source\PSoC5/CapSense_CSD.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 982:Generated_Source\PSoC5/CapSense_CSD.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 983:Generated_Source\PSoC5/CapSense_CSD.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 984:Generated_Source\PSoC5/CapSense_CSD.c **** *  Proximity widgets must be manually enabled as their long scan time is 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 31


 985:Generated_Source\PSoC5/CapSense_CSD.c **** *  incompatible with fast response desired of other widget types.
 986:Generated_Source\PSoC5/CapSense_CSD.c **** *
 987:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 988:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 989:Generated_Source\PSoC5/CapSense_CSD.c **** *
 990:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 991:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 992:Generated_Source\PSoC5/CapSense_CSD.c **** *
 993:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 994:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 995:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 996:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 997:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one. 
 998:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 999:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
1000:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_FindNextPair, these functions starts with sensor index
1001:Generated_Source\PSoC5/CapSense_CSD.c **** *  increment and overflow of uint8 gives desired index 0.
1002:Generated_Source\PSoC5/CapSense_CSD.c **** *
1003:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
1004:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
1005:Generated_Source\PSoC5/CapSense_CSD.c **** *
1006:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1007:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanEnabledWidgets(void) 
1008:Generated_Source\PSoC5/CapSense_CSD.c **** {
 725              		.loc 1 1008 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729 0000 80B5     		push	{r7, lr}
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 7, -8
 732              		.cfi_offset 14, -4
 733 0002 00AF     		add	r7, sp, #0
 734              		.cfi_def_cfa_register 7
1009:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
1010:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 735              		.loc 1 1010 0
 736 0004 124B     		ldr	r3, .L31
 737 0006 0022     		movs	r2, #0
 738 0008 1A70     		strb	r2, [r3]
1011:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
 739              		.loc 1 1011 0
 740 000a 124B     		ldr	r3, .L31+4
 741 000c FF22     		movs	r2, #255
 742 000e 1A70     		strb	r2, [r3]
1012:Generated_Source\PSoC5/CapSense_CSD.c ****     
1013:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1014:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor */
1015:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextSensor(CapSense_CSD_sensorIndex);
 743              		.loc 1 1015 0
 744 0010 104B     		ldr	r3, .L31+4
 745 0012 1B78     		ldrb	r3, [r3]
 746 0014 DBB2     		uxtb	r3, r3
 747 0016 1846     		mov	r0, r3
 748 0018 FFF7FEFF 		bl	CapSense_CSD_FindNextSensor
 749 001c 0346     		mov	r3, r0
 750 001e 1A46     		mov	r2, r3
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 32


 751 0020 0C4B     		ldr	r3, .L31+4
 752 0022 1A70     		strb	r2, [r3]
1016:Generated_Source\PSoC5/CapSense_CSD.c **** 
1017:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check end of scan condition */
1018:Generated_Source\PSoC5/CapSense_CSD.c ****         if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
 753              		.loc 1 1018 0
 754 0024 0B4B     		ldr	r3, .L31+4
 755 0026 1B78     		ldrb	r3, [r3]
 756 0028 DBB2     		uxtb	r3, r3
 757 002a 042B     		cmp	r3, #4
 758 002c 0DD8     		bhi	.L30
1019:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1020:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
 759              		.loc 1 1020 0
 760 002e 084B     		ldr	r3, .L31
 761 0030 1B78     		ldrb	r3, [r3]
 762 0032 DBB2     		uxtb	r3, r3
 763 0034 43F00103 		orr	r3, r3, #1
 764 0038 DAB2     		uxtb	r2, r3
 765 003a 054B     		ldr	r3, .L31
 766 003c 1A70     		strb	r2, [r3]
1021:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
 767              		.loc 1 1021 0
 768 003e 054B     		ldr	r3, .L31+4
 769 0040 1B78     		ldrb	r3, [r3]
 770 0042 DBB2     		uxtb	r3, r3
 771 0044 1846     		mov	r0, r3
 772 0046 FFF7FEFF 		bl	CapSense_CSD_PreScan
 773              	.L30:
1022:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1023:Generated_Source\PSoC5/CapSense_CSD.c ****         
1024:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1025:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor and set proper control register */
1026:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextPair(CapSense_CSD_sensorIndex);
1027:Generated_Source\PSoC5/CapSense_CSD.c ****         
1028:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
1029:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) || 
1030:Generated_Source\PSoC5/CapSense_CSD.c ****            (CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1))
1031:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1032:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
1033:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
1034:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1035:Generated_Source\PSoC5/CapSense_CSD.c ****         
1036:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1037:Generated_Source\PSoC5/CapSense_CSD.c **** }
 774              		.loc 1 1037 0
 775 004a 00BF     		nop
 776 004c 80BD     		pop	{r7, pc}
 777              	.L32:
 778 004e 00BF     		.align	2
 779              	.L31:
 780 0050 00000000 		.word	CapSense_CSD_csv
 781 0054 00000000 		.word	CapSense_CSD_sensorIndex
 782              		.cfi_endproc
 783              	.LFE7:
 784              		.size	CapSense_CSD_ScanEnabledWidgets, .-CapSense_CSD_ScanEnabledWidgets
 785              		.section	.text.CapSense_CSD_IsBusy,"ax",%progbits
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 33


 786              		.align	2
 787              		.global	CapSense_CSD_IsBusy
 788              		.thumb
 789              		.thumb_func
 790              		.type	CapSense_CSD_IsBusy, %function
 791              	CapSense_CSD_IsBusy:
 792              	.LFB8:
1038:Generated_Source\PSoC5/CapSense_CSD.c **** 
1039:Generated_Source\PSoC5/CapSense_CSD.c **** 
1040:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1041:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_IsBusy
1042:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1043:Generated_Source\PSoC5/CapSense_CSD.c **** *
1044:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1045:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1046:Generated_Source\PSoC5/CapSense_CSD.c **** *  progress and 0 means that scanning is complete.
1047:Generated_Source\PSoC5/CapSense_CSD.c **** *
1048:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1049:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1050:Generated_Source\PSoC5/CapSense_CSD.c **** *
1051:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1052:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1053:Generated_Source\PSoC5/CapSense_CSD.c **** *  completed.
1054:Generated_Source\PSoC5/CapSense_CSD.c **** *
1055:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1056:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1057:Generated_Source\PSoC5/CapSense_CSD.c **** *  Checks the busy status.
1058:Generated_Source\PSoC5/CapSense_CSD.c **** *
1059:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1060:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_IsBusy(void) 
1061:Generated_Source\PSoC5/CapSense_CSD.c **** {
 793              		.loc 1 1061 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797              		@ link register save eliminated.
 798 0000 80B4     		push	{r7}
 799              		.cfi_def_cfa_offset 4
 800              		.cfi_offset 7, -4
 801 0002 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
1062:Generated_Source\PSoC5/CapSense_CSD.c ****     return ((0u != (CapSense_CSD_csv & CapSense_CSD_SW_STS_BUSY)) ? 1u : 0u);
 803              		.loc 1 1062 0
 804 0004 044B     		ldr	r3, .L35
 805 0006 1B78     		ldrb	r3, [r3]
 806 0008 DBB2     		uxtb	r3, r3
 807 000a 03F00103 		and	r3, r3, #1
 808 000e DBB2     		uxtb	r3, r3
1063:Generated_Source\PSoC5/CapSense_CSD.c **** }
 809              		.loc 1 1063 0
 810 0010 1846     		mov	r0, r3
 811 0012 BD46     		mov	sp, r7
 812              		.cfi_def_cfa_register 13
 813              		@ sp needed
 814 0014 80BC     		pop	{r7}
 815              		.cfi_restore 7
 816              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 34


 817 0016 7047     		bx	lr
 818              	.L36:
 819              		.align	2
 820              	.L35:
 821 0018 00000000 		.word	CapSense_CSD_csv
 822              		.cfi_endproc
 823              	.LFE8:
 824              		.size	CapSense_CSD_IsBusy, .-CapSense_CSD_IsBusy
 825              		.section	.text.CapSense_CSD_ReadSensorRaw,"ax",%progbits
 826              		.align	2
 827              		.global	CapSense_CSD_ReadSensorRaw
 828              		.thumb
 829              		.thumb_func
 830              		.type	CapSense_CSD_ReadSensorRaw, %function
 831              	CapSense_CSD_ReadSensorRaw:
 832              	.LFB9:
1064:Generated_Source\PSoC5/CapSense_CSD.c **** 
1065:Generated_Source\PSoC5/CapSense_CSD.c **** 
1066:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1067:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadSensorRaw
1068:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1069:Generated_Source\PSoC5/CapSense_CSD.c **** *
1070:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1071:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns scan sensor raw data from the CapSense_CSD_sensorRaw[] array. 
1072:Generated_Source\PSoC5/CapSense_CSD.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1073:Generated_Source\PSoC5/CapSense_CSD.c **** *  is assigned by the CapSense customizer in sequence.
1074:Generated_Source\PSoC5/CapSense_CSD.c **** *
1075:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1076:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1077:Generated_Source\PSoC5/CapSense_CSD.c **** *
1078:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1079:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns current raw data value for defined sensor number.
1080:Generated_Source\PSoC5/CapSense_CSD.c **** *
1081:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1082:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1083:Generated_Source\PSoC5/CapSense_CSD.c **** *
1084:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1085:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_ReadSensorRaw(uint8 sensor) 
1086:Generated_Source\PSoC5/CapSense_CSD.c **** {
 833              		.loc 1 1086 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 8
 836              		@ frame_needed = 1, uses_anonymous_args = 0
 837              		@ link register save eliminated.
 838 0000 80B4     		push	{r7}
 839              		.cfi_def_cfa_offset 4
 840              		.cfi_offset 7, -4
 841 0002 83B0     		sub	sp, sp, #12
 842              		.cfi_def_cfa_offset 16
 843 0004 00AF     		add	r7, sp, #0
 844              		.cfi_def_cfa_register 7
 845 0006 0346     		mov	r3, r0
 846 0008 FB71     		strb	r3, [r7, #7]
1087:Generated_Source\PSoC5/CapSense_CSD.c ****     return (CapSense_CSD_sensorRaw[sensor]);
 847              		.loc 1 1087 0
 848 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 849 000c 034A     		ldr	r2, .L39
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 35


 850 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1088:Generated_Source\PSoC5/CapSense_CSD.c **** }
 851              		.loc 1 1088 0
 852 0012 1846     		mov	r0, r3
 853 0014 0C37     		adds	r7, r7, #12
 854              		.cfi_def_cfa_offset 4
 855 0016 BD46     		mov	sp, r7
 856              		.cfi_def_cfa_register 13
 857              		@ sp needed
 858 0018 80BC     		pop	{r7}
 859              		.cfi_restore 7
 860              		.cfi_def_cfa_offset 0
 861 001a 7047     		bx	lr
 862              	.L40:
 863              		.align	2
 864              	.L39:
 865 001c 00000000 		.word	CapSense_CSD_sensorRaw
 866              		.cfi_endproc
 867              	.LFE9:
 868              		.size	CapSense_CSD_ReadSensorRaw, .-CapSense_CSD_ReadSensorRaw
 869              		.section	.text.CapSense_CSD_ClearSensors,"ax",%progbits
 870              		.align	2
 871              		.global	CapSense_CSD_ClearSensors
 872              		.thumb
 873              		.thumb_func
 874              		.type	CapSense_CSD_ClearSensors, %function
 875              	CapSense_CSD_ClearSensors:
 876              	.LFB10:
1089:Generated_Source\PSoC5/CapSense_CSD.c **** 
1090:Generated_Source\PSoC5/CapSense_CSD.c **** 
1091:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1092:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ClearSensors
1093:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1094:Generated_Source\PSoC5/CapSense_CSD.c **** *
1095:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1096:Generated_Source\PSoC5/CapSense_CSD.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1097:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1098:Generated_Source\PSoC5/CapSense_CSD.c **** *
1099:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1100:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1101:Generated_Source\PSoC5/CapSense_CSD.c **** *
1102:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1103:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1104:Generated_Source\PSoC5/CapSense_CSD.c **** *
1105:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1106:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ClearSensors(void) 
1107:Generated_Source\PSoC5/CapSense_CSD.c **** {
 877              		.loc 1 1107 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881 0000 80B5     		push	{r7, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 7, -8
 884              		.cfi_offset 14, -4
 885 0002 82B0     		sub	sp, sp, #8
 886              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 36


 887 0004 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
1108:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 i;
1109:Generated_Source\PSoC5/CapSense_CSD.c ****    
1110:Generated_Source\PSoC5/CapSense_CSD.c ****     for (i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 889              		.loc 1 1110 0
 890 0006 0023     		movs	r3, #0
 891 0008 FB71     		strb	r3, [r7, #7]
 892 000a 06E0     		b	.L42
 893              	.L43:
1111:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1112:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(i);
 894              		.loc 1 1112 0 discriminator 3
 895 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 896 000e 1846     		mov	r0, r3
 897 0010 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1110:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 898              		.loc 1 1110 0 discriminator 3
 899 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 900 0016 0133     		adds	r3, r3, #1
 901 0018 FB71     		strb	r3, [r7, #7]
 902              	.L42:
1110:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 903              		.loc 1 1110 0 is_stmt 0 discriminator 1
 904 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 905 001c 042B     		cmp	r3, #4
 906 001e F5D9     		bls	.L43
1113:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1114:Generated_Source\PSoC5/CapSense_CSD.c **** }
 907              		.loc 1 1114 0 is_stmt 1
 908 0020 00BF     		nop
 909 0022 0837     		adds	r7, r7, #8
 910              		.cfi_def_cfa_offset 8
 911 0024 BD46     		mov	sp, r7
 912              		.cfi_def_cfa_register 13
 913              		@ sp needed
 914 0026 80BD     		pop	{r7, pc}
 915              		.cfi_endproc
 916              	.LFE10:
 917              		.size	CapSense_CSD_ClearSensors, .-CapSense_CSD_ClearSensors
 918              		.section	.text.CapSense_CSD_EnableSensor,"ax",%progbits
 919              		.align	2
 920              		.global	CapSense_CSD_EnableSensor
 921              		.thumb
 922              		.thumb_func
 923              		.type	CapSense_CSD_EnableSensor, %function
 924              	CapSense_CSD_EnableSensor:
 925              	.LFB11:
1115:Generated_Source\PSoC5/CapSense_CSD.c **** 
1116:Generated_Source\PSoC5/CapSense_CSD.c **** 
1117:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1118:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1119:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_EnableScanSlot
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1121:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1122:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1123:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Configures the selected slot to measure during the next measurement 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 37


1124:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1125:Generated_Source\PSoC5/CapSense_CSD.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1126:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1127:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1128:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1129:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1130:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1131:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1132:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1133:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Constants:
1134:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1135:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1136:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1137:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1138:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1139:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1140:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1141:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1142:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1143:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1144:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_EnableScanSlot(uint8 slot) CYREENTRANT
1145:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1146:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1147:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1148:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1149:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1150:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1151:Generated_Source\PSoC5/CapSense_CSD.c ****         
1152:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1153:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1154:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1155:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable sensor (signle) */
1156:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableSensor(slot);
1157:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1158:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1159:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1160:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable complex sensor */
1161:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1162:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1163:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1164:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1165:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1166:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1167:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableSensor(index[j]);
1168:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1169:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1170:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1171:Generated_Source\PSoC5/CapSense_CSD.c ****     
1172:Generated_Source\PSoC5/CapSense_CSD.c ****     
1173:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1174:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_DisableScanSlot
1175:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1176:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1177:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1178:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1179:Generated_Source\PSoC5/CapSense_CSD.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1180:Generated_Source\PSoC5/CapSense_CSD.c ****     *
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 38


1181:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1182:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1183:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1184:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1185:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1186:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1187:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1188:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1189:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1190:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1191:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1192:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1193:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1194:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1195:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1196:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1197:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1198:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_DisableScanSlot(uint8 slot) CYREENTRANT
1199:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1200:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1201:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1202:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1203:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1204:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1205:Generated_Source\PSoC5/CapSense_CSD.c ****         
1206:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1207:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1208:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1209:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable sensor (signle) */
1210:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_DisableSensor(slot);
1211:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1212:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1213:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1214:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable complex sensor */
1215:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1216:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1217:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1218:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1219:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1220:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1221:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_DisableSensor(index[j]);
1222:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1223:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1224:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1225:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1226:Generated_Source\PSoC5/CapSense_CSD.c **** 
1227:Generated_Source\PSoC5/CapSense_CSD.c **** 
1228:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1229:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableSensor
1230:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1231:Generated_Source\PSoC5/CapSense_CSD.c **** *
1232:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1233:Generated_Source\PSoC5/CapSense_CSD.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1234:Generated_Source\PSoC5/CapSense_CSD.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1235:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus. This also enables the comparator function.
1236:Generated_Source\PSoC5/CapSense_CSD.c **** *
1237:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 39


1238:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1239:Generated_Source\PSoC5/CapSense_CSD.c **** *
1240:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1241:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1242:Generated_Source\PSoC5/CapSense_CSD.c **** *
1243:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1244:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1245:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1246:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1247:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1248:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1249:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1250:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1251:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1252:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1253:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1254:Generated_Source\PSoC5/CapSense_CSD.c **** *
1255:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1256:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_EnableSensor(uint8 sensor) CYREENTRANT
1257:Generated_Source\PSoC5/CapSense_CSD.c **** {
 926              		.loc 1 1257 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 16
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930 0000 80B5     		push	{r7, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 84B0     		sub	sp, sp, #16
 935              		.cfi_def_cfa_offset 24
 936 0004 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
 938 0006 0346     		mov	r3, r0
 939 0008 FB71     		strb	r3, [r7, #7]
1258:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 940              		.loc 1 1258 0
 941 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 942 000c 134A     		ldr	r2, .L46
 943 000e D35C     		ldrb	r3, [r2, r3]
 944 0010 FB73     		strb	r3, [r7, #15]
1259:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 945              		.loc 1 1259 0
 946 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 947 0014 124A     		ldr	r2, .L46+4
 948 0016 D35C     		ldrb	r3, [r2, r3]
 949 0018 BB73     		strb	r3, [r7, #14]
1260:Generated_Source\PSoC5/CapSense_CSD.c ****     
1261:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1262:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1263:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1264:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1265:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1266:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1267:Generated_Source\PSoC5/CapSense_CSD.c ****     
1268:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Make sensor High-Z */
1269:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
 950              		.loc 1 1269 0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 40


 951 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 952 001c 114A     		ldr	r2, .L46+8
 953 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 954 0022 0922     		movs	r2, #9
 955 0024 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/CapSense_CSD.c ****     
1271:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to DSI output */
1272:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 956              		.loc 1 1272 0
 957 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 958 0028 0F2B     		cmp	r3, #15
 959 002a 01D1     		bne	.L45
1273:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1274:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 960              		.loc 1 1274 0
 961 002c 0723     		movs	r3, #7
 962 002e FB73     		strb	r3, [r7, #15]
 963              	.L45:
1275:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1276:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] |= mask;
 964              		.loc 1 1276 0
 965 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966 0032 0D4A     		ldr	r2, .L46+12
 967 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 968 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 969 003a 0B49     		ldr	r1, .L46+12
 970 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 971 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 972 0042 BA7B     		ldrb	r2, [r7, #14]
 973 0044 0A43     		orrs	r2, r2, r1
 974 0046 D2B2     		uxtb	r2, r2
 975 0048 1A70     		strb	r2, [r3]
1277:Generated_Source\PSoC5/CapSense_CSD.c ****     
1278:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to AMUX */
1279:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1280:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1281:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_amuxIndex[sensor]);
1282:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1283:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(sensor);
 976              		.loc 1 1283 0
 977 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 978 004c 1846     		mov	r0, r3
 979 004e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
1284:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1285:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1286:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1287:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1288:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1289:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1290:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(amuxCh);
1291:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1292:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1293:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1294:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1295:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(amuxCh);
1296:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1297:Generated_Source\PSoC5/CapSense_CSD.c ****             
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 41


1298:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1299:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1300:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1301:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(sensor);
1302:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1303:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1304:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1305:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1306:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1307:Generated_Source\PSoC5/CapSense_CSD.c ****             
1308:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1309:Generated_Source\PSoC5/CapSense_CSD.c ****         
1310:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
1311:Generated_Source\PSoC5/CapSense_CSD.c **** }
 980              		.loc 1 1311 0
 981 0052 00BF     		nop
 982 0054 1037     		adds	r7, r7, #16
 983              		.cfi_def_cfa_offset 8
 984 0056 BD46     		mov	sp, r7
 985              		.cfi_def_cfa_register 13
 986              		@ sp needed
 987 0058 80BD     		pop	{r7, pc}
 988              	.L47:
 989 005a 00BF     		.align	2
 990              	.L46:
 991 005c 00000000 		.word	CapSense_CSD_portTable
 992 0060 00000000 		.word	CapSense_CSD_maskTable
 993 0064 00000000 		.word	CapSense_CSD_pcTable
 994 0068 00000000 		.word	CapSense_CSD_csTable
 995              		.cfi_endproc
 996              	.LFE11:
 997              		.size	CapSense_CSD_EnableSensor, .-CapSense_CSD_EnableSensor
 998              		.section	.text.CapSense_CSD_DisableSensor,"ax",%progbits
 999              		.align	2
 1000              		.global	CapSense_CSD_DisableSensor
 1001              		.thumb
 1002              		.thumb_func
 1003              		.type	CapSense_CSD_DisableSensor, %function
 1004              	CapSense_CSD_DisableSensor:
 1005              	.LFB12:
1312:Generated_Source\PSoC5/CapSense_CSD.c **** 
1313:Generated_Source\PSoC5/CapSense_CSD.c **** 
1314:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1315:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_DisableSensor
1316:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1317:Generated_Source\PSoC5/CapSense_CSD.c **** *
1318:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1319:Generated_Source\PSoC5/CapSense_CSD.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1320:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1321:Generated_Source\PSoC5/CapSense_CSD.c **** *
1322:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1323:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number
1324:Generated_Source\PSoC5/CapSense_CSD.c **** *
1325:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1326:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1327:Generated_Source\PSoC5/CapSense_CSD.c **** *
1328:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 42


1329:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1330:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1331:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1332:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1333:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1334:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1335:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1336:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1337:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1338:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1339:Generated_Source\PSoC5/CapSense_CSD.c **** *
1340:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1341:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_DisableSensor(uint8 sensor) CYREENTRANT
1342:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1006              		.loc 1 1342 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 16
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 84B0     		sub	sp, sp, #16
 1015              		.cfi_def_cfa_offset 24
 1016 0004 00AF     		add	r7, sp, #0
 1017              		.cfi_def_cfa_register 7
 1018 0006 0346     		mov	r3, r0
 1019 0008 FB71     		strb	r3, [r7, #7]
1343:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 1020              		.loc 1 1343 0
 1021 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1022 000c 144A     		ldr	r2, .L50
 1023 000e D35C     		ldrb	r3, [r2, r3]
 1024 0010 FB73     		strb	r3, [r7, #15]
1344:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 1025              		.loc 1 1344 0
 1026 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1027 0014 134A     		ldr	r2, .L50+4
 1028 0016 D35C     		ldrb	r3, [r2, r3]
 1029 0018 BB73     		strb	r3, [r7, #14]
1345:Generated_Source\PSoC5/CapSense_CSD.c ****     
1346:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1347:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1348:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1349:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1350:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1351:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1352:Generated_Source\PSoC5/CapSense_CSD.c ****     
1353:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from AMUX */
1354:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1355:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1356:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_amuxIndex[sensor]);
1357:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1358:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(sensor);
 1030              		.loc 1 1358 0
 1031 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1032 001c 1846     		mov	r0, r3
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 43


 1033 001e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Unset
1359:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1360:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1361:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1362:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1363:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1364:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1365:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(amuxCh);
1366:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1367:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1368:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1369:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1370:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(amuxCh);
1371:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1372:Generated_Source\PSoC5/CapSense_CSD.c ****             
1373:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1374:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1375:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1376:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(sensor);
1377:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1378:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1379:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1380:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1381:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1382:Generated_Source\PSoC5/CapSense_CSD.c ****             
1383:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1384:Generated_Source\PSoC5/CapSense_CSD.c ****         
1385:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1386:Generated_Source\PSoC5/CapSense_CSD.c ****     
1387:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from DSI output */
1388:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 1034              		.loc 1 1388 0
 1035 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1036 0024 0F2B     		cmp	r3, #15
 1037 0026 01D1     		bne	.L49
1389:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1390:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 1038              		.loc 1 1390 0
 1039 0028 0723     		movs	r3, #7
 1040 002a FB73     		strb	r3, [r7, #15]
 1041              	.L49:
1391:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1392:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] &= (uint8)~mask;
 1042              		.loc 1 1392 0
 1043 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1044 002e 0E4A     		ldr	r2, .L50+8
 1045 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1046 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1047 0036 0C49     		ldr	r1, .L50+8
 1048 0038 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1049 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1050 003e BA7B     		ldrb	r2, [r7, #14]
 1051 0040 D243     		mvns	r2, r2
 1052 0042 D2B2     		uxtb	r2, r2
 1053 0044 0A40     		ands	r2, r2, r1
 1054 0046 D2B2     		uxtb	r2, r2
 1055 0048 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 44


1393:Generated_Source\PSoC5/CapSense_CSD.c ****     
1394:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set sensor to inactive state */
1395:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND)
1396:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_GND;
 1056              		.loc 1 1396 0
 1057 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1058 004c 074A     		ldr	r2, .L50+12
 1059 004e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1060 0052 0822     		movs	r2, #8
 1061 0054 1A70     		strb	r2, [r3]
1397:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_HIGHZ)
1398:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
1399:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1400:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_SHIELD;
1401:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND) */
1402:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1062              		.loc 1 1402 0
 1063 0056 00BF     		nop
 1064 0058 1037     		adds	r7, r7, #16
 1065              		.cfi_def_cfa_offset 8
 1066 005a BD46     		mov	sp, r7
 1067              		.cfi_def_cfa_register 13
 1068              		@ sp needed
 1069 005c 80BD     		pop	{r7, pc}
 1070              	.L51:
 1071 005e 00BF     		.align	2
 1072              	.L50:
 1073 0060 00000000 		.word	CapSense_CSD_portTable
 1074 0064 00000000 		.word	CapSense_CSD_maskTable
 1075 0068 00000000 		.word	CapSense_CSD_csTable
 1076 006c 00000000 		.word	CapSense_CSD_pcTable
 1077              		.cfi_endproc
 1078              	.LFE12:
 1079              		.size	CapSense_CSD_DisableSensor, .-CapSense_CSD_DisableSensor
 1080              		.section	.text.CapSense_CSD_PreScan,"ax",%progbits
 1081              		.align	2
 1082              		.global	CapSense_CSD_PreScan
 1083              		.thumb
 1084              		.thumb_func
 1085              		.type	CapSense_CSD_PreScan, %function
 1086              	CapSense_CSD_PreScan:
 1087              	.LFB13:
1403:Generated_Source\PSoC5/CapSense_CSD.c **** 
1404:Generated_Source\PSoC5/CapSense_CSD.c **** 
1405:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1406:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_PreScan
1407:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1408:Generated_Source\PSoC5/CapSense_CSD.c **** *
1409:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1410:Generated_Source\PSoC5/CapSense_CSD.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1411:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanning process of the sensor.
1412:Generated_Source\PSoC5/CapSense_CSD.c **** *
1413:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1414:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1415:Generated_Source\PSoC5/CapSense_CSD.c **** *
1416:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1417:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 45


1418:Generated_Source\PSoC5/CapSense_CSD.c **** *
1419:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1420:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_rbTable[] - used to store pointers to PC pin registers for 
1421:Generated_Source\PSoC5/CapSense_CSD.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1422:Generated_Source\PSoC5/CapSense_CSD.c **** *  resistor.
1423:Generated_Source\PSoC5/CapSense_CSD.c **** *
1424:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1425:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_PreScan(uint8 sensor) CYREENTRANT
1426:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1088              		.loc 1 1426 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 8
 1091              		@ frame_needed = 1, uses_anonymous_args = 0
 1092 0000 80B5     		push	{r7, lr}
 1093              		.cfi_def_cfa_offset 8
 1094              		.cfi_offset 7, -8
 1095              		.cfi_offset 14, -4
 1096 0002 82B0     		sub	sp, sp, #8
 1097              		.cfi_def_cfa_offset 16
 1098 0004 00AF     		add	r7, sp, #0
 1099              		.cfi_def_cfa_register 7
 1100 0006 0346     		mov	r3, r0
 1101 0008 FB71     		strb	r3, [r7, #7]
1427:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Sensor Settings */
1428:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SetScanSlotSettings(sensor);
 1102              		.loc 1 1428 0
 1103 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1104 000c 1846     		mov	r0, r3
 1105 000e FFF7FEFF 		bl	CapSense_CSD_SetScanSlotSettings
1429:Generated_Source\PSoC5/CapSense_CSD.c ****     
1430:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1431:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_DisableInt` */
1432:Generated_Source\PSoC5/CapSense_CSD.c **** 
1433:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1434:Generated_Source\PSoC5/CapSense_CSD.c ****     
1435:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK
1436:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PreScan_DisableInt_Callback();
1437:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK */
1438:Generated_Source\PSoC5/CapSense_CSD.c **** 
1439:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Resets digital and pre-charge clocks */
1440:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_SYNC_EN;
 1106              		.loc 1 1440 0
 1107 0012 104A     		ldr	r2, .L53
 1108 0014 0F4B     		ldr	r3, .L53
 1109 0016 1B78     		ldrb	r3, [r3]
 1110 0018 DBB2     		uxtb	r3, r3
 1111 001a 43F00103 		orr	r3, r3, #1
 1112 001e DBB2     		uxtb	r3, r3
 1113 0020 1370     		strb	r3, [r2]
1441:Generated_Source\PSoC5/CapSense_CSD.c ****         
1442:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1443:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1444:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable Vref from AMux */
1445:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1446:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1447:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1448:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 46


 1114              		.loc 1 1448 0
 1115 0022 0D4A     		ldr	r2, .L53+4
 1116 0024 0C4B     		ldr	r3, .L53+4
 1117 0026 1B78     		ldrb	r3, [r3]
 1118 0028 DBB2     		uxtb	r3, r3
 1119 002a 23F00103 		bic	r3, r3, #1
 1120 002e DBB2     		uxtb	r3, r3
 1121 0030 1370     		strb	r3, [r2]
1449:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1450:Generated_Source\PSoC5/CapSense_CSD.c **** 
1451:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1452:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
 1122              		.loc 1 1452 0
 1123 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1124 0034 1846     		mov	r0, r3
 1125 0036 FFF7FEFF 		bl	CapSense_CSD_EnableSensor
1453:Generated_Source\PSoC5/CapSense_CSD.c ****             
1454:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1455:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect IDAC */
1456:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1457:Generated_Source\PSoC5/CapSense_CSD.c ****             
1458:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1459:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1460:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1461:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1462:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSD_CSBUF_ENABLE;
1463:Generated_Source\PSoC5/CapSense_CSD.c ****             
1464:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1465:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect DSI output to Rb */
1466:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1467:Generated_Source\PSoC5/CapSense_CSD.c ****             
1468:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1469:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1470:Generated_Source\PSoC5/CapSense_CSD.c ****              
1471:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1472:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1473:Generated_Source\PSoC5/CapSense_CSD.c ****         
1474:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1475:Generated_Source\PSoC5/CapSense_CSD.c ****         
1476:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1477:Generated_Source\PSoC5/CapSense_CSD.c **** 
1478:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u)
1479:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1480:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1481:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1482:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1483:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1484:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else
1485:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1486:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1487:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1488:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1489:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1490:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1491:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1492:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1493:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 47


1494:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1495:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1496:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1497:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1498:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1499:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1500:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1501:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1502:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1503:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1504:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1505:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1506:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1507:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1508:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1509:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1510:Generated_Source\PSoC5/CapSense_CSD.c ****             
1511:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1512:Generated_Source\PSoC5/CapSense_CSD.c ****             
1513:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1514:Generated_Source\PSoC5/CapSense_CSD.c ****         
1515:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u)
1516:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1517:Generated_Source\PSoC5/CapSense_CSD.c ****             sensor += CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
1518:Generated_Source\PSoC5/CapSense_CSD.c ****             
1519:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1520:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1521:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1522:Generated_Source\PSoC5/CapSense_CSD.c ****                    CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1523:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else 
1524:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1525:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1526:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1527:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1528:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1529:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1530:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1531:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1532:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1533:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1534:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1535:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1536:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1537:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1538:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1539:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1540:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1541:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1542:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] |= CapSense_CSD_BYP_MASK;
1543:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1544:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1545:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1546:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1547:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1548:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1549:Generated_Source\PSoC5/CapSense_CSD.c ****             
1550:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 48


1551:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1552:Generated_Source\PSoC5/CapSense_CSD.c ****     
1553:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
1554:Generated_Source\PSoC5/CapSense_CSD.c ****     
1555:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1556:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_START;
 1126              		.loc 1 1556 0
 1127 003a 064A     		ldr	r2, .L53
 1128 003c 054B     		ldr	r3, .L53
 1129 003e 1B78     		ldrb	r3, [r3]
 1130 0040 DBB2     		uxtb	r3, r3
 1131 0042 43F00203 		orr	r3, r3, #2
 1132 0046 DBB2     		uxtb	r3, r3
 1133 0048 1370     		strb	r3, [r2]
1557:Generated_Source\PSoC5/CapSense_CSD.c ****     
1558:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1559:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_EnableInt` */
1560:Generated_Source\PSoC5/CapSense_CSD.c **** 
1561:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1562:Generated_Source\PSoC5/CapSense_CSD.c **** 
1563:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK
1564:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan_EnableInt_Callback();
1565:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK */
1566:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1134              		.loc 1 1566 0
 1135 004a 00BF     		nop
 1136 004c 0837     		adds	r7, r7, #8
 1137              		.cfi_def_cfa_offset 8
 1138 004e BD46     		mov	sp, r7
 1139              		.cfi_def_cfa_register 13
 1140              		@ sp needed
 1141 0050 80BD     		pop	{r7, pc}
 1142              	.L54:
 1143 0052 00BF     		.align	2
 1144              	.L53:
 1145 0054 7C640040 		.word	1073767548
 1146 0058 72580040 		.word	1073764466
 1147              		.cfi_endproc
 1148              	.LFE13:
 1149              		.size	CapSense_CSD_PreScan, .-CapSense_CSD_PreScan
 1150              		.section	.text.CapSense_CSD_PostScan,"ax",%progbits
 1151              		.align	2
 1152              		.global	CapSense_CSD_PostScan
 1153              		.thumb
 1154              		.thumb_func
 1155              		.type	CapSense_CSD_PostScan, %function
 1156              	CapSense_CSD_PostScan:
 1157              	.LFB14:
1567:Generated_Source\PSoC5/CapSense_CSD.c **** 
1568:Generated_Source\PSoC5/CapSense_CSD.c **** 
1569:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1570:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1571:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1572:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1573:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1574:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1575:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 49


1576:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1577:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1578:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only one channel designs.
1579:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1580:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1581:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1582:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1583:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1584:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1585:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1586:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1587:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1588:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1589:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1590:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1591:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1592:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1593:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScan(uint8 sensor) CYREENTRANT
1594:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1158              		.loc 1 1594 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 8
 1161              		@ frame_needed = 1, uses_anonymous_args = 0
 1162 0000 80B5     		push	{r7, lr}
 1163              		.cfi_def_cfa_offset 8
 1164              		.cfi_offset 7, -8
 1165              		.cfi_offset 14, -4
 1166 0002 82B0     		sub	sp, sp, #8
 1167              		.cfi_def_cfa_offset 16
 1168 0004 00AF     		add	r7, sp, #0
 1169              		.cfi_def_cfa_register 7
 1170 0006 0346     		mov	r3, r0
 1171 0008 FB71     		strb	r3, [r7, #7]
1595:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Stop Capsensing and rearm sync */
1596:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG &= (uint8)~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
 1172              		.loc 1 1596 0
 1173 000a 1E4A     		ldr	r2, .L56
 1174 000c 1D4B     		ldr	r3, .L56
 1175 000e 1B78     		ldrb	r3, [r3]
 1176 0010 DBB2     		uxtb	r3, r3
 1177 0012 23F00303 		bic	r3, r3, #3
 1178 0016 DBB2     		uxtb	r3, r3
 1179 0018 1370     		strb	r3, [r2]
1597:Generated_Source\PSoC5/CapSense_CSD.c ****         
1598:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1599:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1600:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1601:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1602:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1603:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
 1180              		.loc 1 1603 0
 1181 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1182 001c 1A4A     		ldr	r2, .L56+4
 1183 001e 1278     		ldrb	r2, [r2]
 1184 0020 D2B2     		uxtb	r2, r2
 1185 0022 92B2     		uxth	r2, r2
 1186 0024 1202     		lsls	r2, r2, #8
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 50


 1187 0026 91B2     		uxth	r1, r2
 1188 0028 184A     		ldr	r2, .L56+8
 1189 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1604:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
 1190              		.loc 1 1604 0
 1191 002e 184B     		ldr	r3, .L56+12
 1192 0030 1B78     		ldrb	r3, [r3]
 1193 0032 DBB2     		uxtb	r3, r3
 1194 0034 9AB2     		uxth	r2, r3
 1195 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1196 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1197 003a 1448     		ldr	r0, .L56+8
 1198 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1199 0040 0A43     		orrs	r2, r2, r1
 1200 0042 91B2     		uxth	r1, r2
 1201 0044 114A     		ldr	r2, .L56+8
 1202 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1605:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1203              		.loc 1 1605 0
 1204 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1606:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
 1205              		.loc 1 1606 0
 1206 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1207 004e 0F49     		ldr	r1, .L56+8
 1208 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1605:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1209              		.loc 1 1605 0
 1210 0054 D243     		mvns	r2, r2
 1211 0056 91B2     		uxth	r1, r2
 1212 0058 0C4A     		ldr	r2, .L56+8
 1213 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1607:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
1608:Generated_Source\PSoC5/CapSense_CSD.c ****         
1609:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1610:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
 1214              		.loc 1 1610 0
 1215 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1216 0060 1846     		mov	r0, r3
 1217 0062 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1611:Generated_Source\PSoC5/CapSense_CSD.c ****         
1612:Generated_Source\PSoC5/CapSense_CSD.c ****         #if(CapSense_CSD_CURRENT_SOURCE)
1613:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1614:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 1218              		.loc 1 1614 0
 1219 0066 0020     		movs	r0, #0
 1220 0068 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
1615:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1616:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1617:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1618:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1619:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1620:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1621:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1622:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1623:Generated_Source\PSoC5/CapSense_CSD.c ****             
1624:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1625:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 51


1626:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1627:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1628:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 1221              		.loc 1 1628 0
 1222 006c 094A     		ldr	r2, .L56+16
 1223 006e 094B     		ldr	r3, .L56+16
 1224 0070 1B78     		ldrb	r3, [r3]
 1225 0072 DBB2     		uxtb	r3, r3
 1226 0074 43F00103 		orr	r3, r3, #1
 1227 0078 DBB2     		uxtb	r3, r3
 1228 007a 1370     		strb	r3, [r2]
1629:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1630:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1229              		.loc 1 1630 0
 1230 007c 00BF     		nop
 1231 007e 0837     		adds	r7, r7, #8
 1232              		.cfi_def_cfa_offset 8
 1233 0080 BD46     		mov	sp, r7
 1234              		.cfi_def_cfa_register 13
 1235              		@ sp needed
 1236 0082 80BD     		pop	{r7, pc}
 1237              	.L57:
 1238              		.align	2
 1239              	.L56:
 1240 0084 7C640040 		.word	1073767548
 1241 0088 1F640040 		.word	1073767455
 1242 008c 00000000 		.word	CapSense_CSD_sensorRaw
 1243 0090 0F640040 		.word	1073767439
 1244 0094 72580040 		.word	1073764466
 1245              		.cfi_endproc
 1246              	.LFE14:
 1247              		.size	CapSense_CSD_PostScan, .-CapSense_CSD_PostScan
 1248              		.section	.text.CapSense_CSD_SetPrescaler,"ax",%progbits
 1249              		.align	2
 1250              		.global	CapSense_CSD_SetPrescaler
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	CapSense_CSD_SetPrescaler, %function
 1254              	CapSense_CSD_SetPrescaler:
 1255              	.LFB15:
1631:Generated_Source\PSoC5/CapSense_CSD.c ****     
1632:Generated_Source\PSoC5/CapSense_CSD.c **** #else
1633:Generated_Source\PSoC5/CapSense_CSD.c **** 
1634:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1635:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1636:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1637:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1638:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1639:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1640:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1641:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1642:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 0 in two channes designs.
1643:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1644:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1645:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1646:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1647:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 52


1648:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1649:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1650:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1651:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1652:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1653:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1654:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1655:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1656:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1657:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh0(uint8 sensor) CYREENTRANT
1658:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1659:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1660:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u)) 
1661:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1662:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1663:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1664:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1665:Generated_Source\PSoC5/CapSense_CSD.c ****         
1666:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1667:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1668:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1669:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1670:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1671:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
1672:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
1673:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1674:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1675:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1676:Generated_Source\PSoC5/CapSense_CSD.c ****         
1677:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1678:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1679:Generated_Source\PSoC5/CapSense_CSD.c ****         
1680:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1681:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1682:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1683:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1684:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1685:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1686:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1687:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1688:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1689:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1690:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1691:Generated_Source\PSoC5/CapSense_CSD.c ****         
1692:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1693:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1694:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1695:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1696:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1697:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1698:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1699:Generated_Source\PSoC5/CapSense_CSD.c ****     
1700:Generated_Source\PSoC5/CapSense_CSD.c ****     
1701:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1702:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScanCh1
1703:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1704:Generated_Source\PSoC5/CapSense_CSD.c ****     *
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 53


1705:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1706:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1707:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1708:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1709:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 1 in two channes designs.
1710:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1711:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1712:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1713:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1714:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1715:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1716:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1717:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1718:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1719:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1720:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1721:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1722:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1723:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1724:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh1(uint8 sensor) CYREENTRANT
1725:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1726:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1727:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u))
1728:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1729:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1730:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1731:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1732:Generated_Source\PSoC5/CapSense_CSD.c ****         
1733:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1734:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1735:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1736:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH1_COUNTER_PTR
1737:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1738:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH1_COUNTER_HI_REG << 8u);
1739:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH1_COUNTER_LO_REG;
1740:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1741:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1742:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1743:Generated_Source\PSoC5/CapSense_CSD.c ****         
1744:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1745:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1746:Generated_Source\PSoC5/CapSense_CSD.c ****         
1747:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1748:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1749:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1750:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1751:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1752:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1753:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1754:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1755:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1756:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] &= ~CapSense_CSD_BYP_MASK; 
1757:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1758:Generated_Source\PSoC5/CapSense_CSD.c **** 
1759:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1760:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1761:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 54


1762:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1763:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1764:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1765:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1766:Generated_Source\PSoC5/CapSense_CSD.c ****     
1767:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE */
1768:Generated_Source\PSoC5/CapSense_CSD.c **** 
1769:Generated_Source\PSoC5/CapSense_CSD.c **** 
1770:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
1771:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1772:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name:  CapSense_CSD_InitRb
1773:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1774:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1775:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1776:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1777:Generated_Source\PSoC5/CapSense_CSD.c ****     *  while next measure.
1778:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1779:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1780:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1781:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1782:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1783:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1784:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1785:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1786:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************/
1787:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_InitRb(void) 
1788:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1789:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 i;
1790:Generated_Source\PSoC5/CapSense_CSD.c ****         
1791:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable all Rb */
1792:Generated_Source\PSoC5/CapSense_CSD.c ****         for(i = 0u; i < CapSense_CSD_TOTAL_RB_NUMBER; i++)
1793:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1794:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Make High-Z */
1795:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[i] = CapSense_CSD_PRT_PC_HIGHZ;
1796:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1797:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1798:Generated_Source\PSoC5/CapSense_CSD.c ****     
1799:Generated_Source\PSoC5/CapSense_CSD.c ****     
1800:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1801:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetRBleed
1802:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1803:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1804:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1805:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1806:Generated_Source\PSoC5/CapSense_CSD.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1807:Generated_Source\PSoC5/CapSense_CSD.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1808:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1809:Generated_Source\PSoC5/CapSense_CSD.c ****     * 
1810:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1811:Generated_Source\PSoC5/CapSense_CSD.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1812:Generated_Source\PSoC5/CapSense_CSD.c ****     *  customizer.
1813:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1814:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1815:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1816:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1817:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1818:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh0Cur - used to store current number of active 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 55


1819:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 0.
1820:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh1Cur - used to store current number of active 
1821:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 1.
1822:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1823:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle.
1824:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1825:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1826:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1827:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1828:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1829:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetRBleed(uint8 rbleed) 
1830:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1831:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1832:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_extRbCh0Cur = rbleed;
1833:Generated_Source\PSoC5/CapSense_CSD.c ****             
1834:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1835:Generated_Source\PSoC5/CapSense_CSD.c ****             if(rbleed < CapSense_CSD_TOTAL_RB_NUMBER__CH0)
1836:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1837:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh0Cur = rbleed;
1838:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1839:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1840:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1841:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh1Cur = (rbleed - CapSense_CSD_TOTAL_RB_NUMBER__CH0);   
1842:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1843:Generated_Source\PSoC5/CapSense_CSD.c ****     
1844:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */ 
1845:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1846:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB */ 
1847:Generated_Source\PSoC5/CapSense_CSD.c **** 
1848:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRESCALER_OPTIONS)
1849:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1850:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetPrescaler
1851:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1852:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1853:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1854:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets analog switch divider.
1855:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1856:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1857:Generated_Source\PSoC5/CapSense_CSD.c ****     *  prescaler:  Sets prescaler divider values.
1858:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1859:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1860:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1861:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1862:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1863:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetPrescaler(uint8 prescaler) CYREENTRANT
1864:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1256              		.loc 1 1864 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 8
 1259              		@ frame_needed = 1, uses_anonymous_args = 0
 1260              		@ link register save eliminated.
 1261 0000 80B4     		push	{r7}
 1262              		.cfi_def_cfa_offset 4
 1263              		.cfi_offset 7, -4
 1264 0002 83B0     		sub	sp, sp, #12
 1265              		.cfi_def_cfa_offset 16
 1266 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 56


 1267              		.cfi_def_cfa_register 7
 1268 0006 0346     		mov	r3, r0
 1269 0008 FB71     		strb	r3, [r7, #7]
1865:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Prescaler */
1866:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1867:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_PERIOD_REG = prescaler;
 1270              		.loc 1 1867 0
 1271 000a 064A     		ldr	r2, .L59
 1272 000c FB79     		ldrb	r3, [r7, #7]
 1273 000e 1370     		strb	r3, [r2]
1868:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1274              		.loc 1 1868 0
 1275 0010 054A     		ldr	r2, .L59+4
 1276 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1277 0014 5B08     		lsrs	r3, r3, #1
 1278 0016 DBB2     		uxtb	r3, r3
 1279 0018 1370     		strb	r3, [r2]
1869:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1870:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1871:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1872:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1873:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1874:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1875:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1280              		.loc 1 1875 0
 1281 001a 00BF     		nop
 1282 001c 0C37     		adds	r7, r7, #12
 1283              		.cfi_def_cfa_offset 4
 1284 001e BD46     		mov	sp, r7
 1285              		.cfi_def_cfa_register 13
 1286              		@ sp needed
 1287 0020 80BC     		pop	{r7}
 1288              		.cfi_restore 7
 1289              		.cfi_def_cfa_offset 0
 1290 0022 7047     		bx	lr
 1291              	.L60:
 1292              		.align	2
 1293              	.L59:
 1294 0024 2A640040 		.word	1073767466
 1295 0028 3A640040 		.word	1073767482
 1296              		.cfi_endproc
 1297              	.LFE15:
 1298              		.size	CapSense_CSD_SetPrescaler, .-CapSense_CSD_SetPrescaler
 1299              		.section	.text.CapSense_CSD_GetPrescaler,"ax",%progbits
 1300              		.align	2
 1301              		.global	CapSense_CSD_GetPrescaler
 1302              		.thumb
 1303              		.thumb_func
 1304              		.type	CapSense_CSD_GetPrescaler, %function
 1305              	CapSense_CSD_GetPrescaler:
 1306              	.LFB16:
1876:Generated_Source\PSoC5/CapSense_CSD.c **** 
1877:Generated_Source\PSoC5/CapSense_CSD.c **** 
1878:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1879:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_GetPrescaler
1880:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1881:Generated_Source\PSoC5/CapSense_CSD.c ****     *
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 57


1882:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1883:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Gets analog switch divider.
1884:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1885:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1886:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1887:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1888:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1889:Generated_Source\PSoC5/CapSense_CSD.c ****     *   Returns the prescaler divider value.
1890:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1891:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1892:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_GetPrescaler(void) 
1893:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1307              		.loc 1 1893 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 8
 1310              		@ frame_needed = 1, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
 1312 0000 80B4     		push	{r7}
 1313              		.cfi_def_cfa_offset 4
 1314              		.cfi_offset 7, -4
 1315 0002 83B0     		sub	sp, sp, #12
 1316              		.cfi_def_cfa_offset 16
 1317 0004 00AF     		add	r7, sp, #0
 1318              		.cfi_def_cfa_register 7
1894:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 prescaler = 0u;
 1319              		.loc 1 1894 0
 1320 0006 0023     		movs	r3, #0
 1321 0008 FB71     		strb	r3, [r7, #7]
1895:Generated_Source\PSoC5/CapSense_CSD.c **** 
1896:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Get Prescaler */
1897:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1898:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = CapSense_CSD_PRESCALER_PERIOD_REG;
 1322              		.loc 1 1898 0
 1323 000a 044B     		ldr	r3, .L63
 1324 000c 1B78     		ldrb	r3, [r3]
 1325 000e FB71     		strb	r3, [r7, #7]
1899:Generated_Source\PSoC5/CapSense_CSD.c ****             
1900:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1901:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR);
1902:Generated_Source\PSoC5/CapSense_CSD.c ****             
1903:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1904:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1905:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1906:Generated_Source\PSoC5/CapSense_CSD.c ****         
1907:Generated_Source\PSoC5/CapSense_CSD.c ****         return (prescaler);
 1326              		.loc 1 1907 0
 1327 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1908:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1328              		.loc 1 1908 0
 1329 0012 1846     		mov	r0, r3
 1330 0014 0C37     		adds	r7, r7, #12
 1331              		.cfi_def_cfa_offset 4
 1332 0016 BD46     		mov	sp, r7
 1333              		.cfi_def_cfa_register 13
 1334              		@ sp needed
 1335 0018 80BC     		pop	{r7}
 1336              		.cfi_restore 7
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 58


 1337              		.cfi_def_cfa_offset 0
 1338 001a 7047     		bx	lr
 1339              	.L64:
 1340              		.align	2
 1341              	.L63:
 1342 001c 2A640040 		.word	1073767466
 1343              		.cfi_endproc
 1344              	.LFE16:
 1345              		.size	CapSense_CSD_GetPrescaler, .-CapSense_CSD_GetPrescaler
 1346              		.section	.text.CapSense_CSD_SetScanSpeed,"ax",%progbits
 1347              		.align	2
 1348              		.global	CapSense_CSD_SetScanSpeed
 1349              		.thumb
 1350              		.thumb_func
 1351              		.type	CapSense_CSD_SetScanSpeed, %function
 1352              	CapSense_CSD_SetScanSpeed:
 1353              	.LFB17:
1909:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_PRESCALER_OPTIONS */
1910:Generated_Source\PSoC5/CapSense_CSD.c **** 
1911:Generated_Source\PSoC5/CapSense_CSD.c **** 
1912:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1913:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSpeed
1914:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1915:Generated_Source\PSoC5/CapSense_CSD.c **** *
1916:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1917:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets ScanSpeed divider.
1918:Generated_Source\PSoC5/CapSense_CSD.c **** *
1919:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1920:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanspeed:  Sets ScanSpeed divider.
1921:Generated_Source\PSoC5/CapSense_CSD.c **** *
1922:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1923:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1924:Generated_Source\PSoC5/CapSense_CSD.c **** *
1925:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1926:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSpeed(uint8 scanSpeed) 
1927:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1354              		.loc 1 1927 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 8
 1357              		@ frame_needed = 1, uses_anonymous_args = 0
 1358              		@ link register save eliminated.
 1359 0000 80B4     		push	{r7}
 1360              		.cfi_def_cfa_offset 4
 1361              		.cfi_offset 7, -4
 1362 0002 83B0     		sub	sp, sp, #12
 1363              		.cfi_def_cfa_offset 16
 1364 0004 00AF     		add	r7, sp, #0
 1365              		.cfi_def_cfa_register 7
 1366 0006 0346     		mov	r3, r0
 1367 0008 FB71     		strb	r3, [r7, #7]
1928:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = scanSpeed; 
 1368              		.loc 1 1928 0
 1369 000a 044A     		ldr	r2, .L66
 1370 000c FB79     		ldrb	r3, [r7, #7]
 1371 000e 1370     		strb	r3, [r2]
1929:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1372              		.loc 1 1929 0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 59


 1373 0010 00BF     		nop
 1374 0012 0C37     		adds	r7, r7, #12
 1375              		.cfi_def_cfa_offset 4
 1376 0014 BD46     		mov	sp, r7
 1377              		.cfi_def_cfa_register 13
 1378              		@ sp needed
 1379 0016 80BC     		pop	{r7}
 1380              		.cfi_restore 7
 1381              		.cfi_def_cfa_offset 0
 1382 0018 7047     		bx	lr
 1383              	.L67:
 1384 001a 00BF     		.align	2
 1385              	.L66:
 1386 001c 8A640040 		.word	1073767562
 1387              		.cfi_endproc
 1388              	.LFE17:
 1389              		.size	CapSense_CSD_SetScanSpeed, .-CapSense_CSD_SetScanSpeed
 1390              		.section	.text.CapSense_CSD_SetAnalogSwitchesSource,"ax",%progbits
 1391              		.align	2
 1392              		.global	CapSense_CSD_SetAnalogSwitchesSource
 1393              		.thumb
 1394              		.thumb_func
 1395              		.type	CapSense_CSD_SetAnalogSwitchesSource, %function
 1396              	CapSense_CSD_SetAnalogSwitchesSource:
 1397              	.LFB18:
1930:Generated_Source\PSoC5/CapSense_CSD.c **** 
1931:Generated_Source\PSoC5/CapSense_CSD.c **** 
1932:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRS_OPTIONS)
1933:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1934:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetAnalogSwitchesSource
1935:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1936:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1937:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1938:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1939:Generated_Source\PSoC5/CapSense_CSD.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1940:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is used in auto-tuning procedure.
1941:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1942:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1943:Generated_Source\PSoC5/CapSense_CSD.c ****     *  src:  analog switches source:
1944:Generated_Source\PSoC5/CapSense_CSD.c ****     *           CapSense_CSD_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1945:Generated_Source\PSoC5/CapSense_CSD.c ****     *           CapSense_CSD_ANALOG_SWITCHES_SRC_PRS - selects PRS
1946:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1947:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1948:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1949:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1950:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1951:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1952:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1953:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetAnalogSwitchesSource(uint8 src)
1954:Generated_Source\PSoC5/CapSense_CSD.c ****                       
1955:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1398              		.loc 1 1955 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 8
 1401              		@ frame_needed = 1, uses_anonymous_args = 0
 1402              		@ link register save eliminated.
 1403 0000 80B4     		push	{r7}
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 60


 1404              		.cfi_def_cfa_offset 4
 1405              		.cfi_offset 7, -4
 1406 0002 83B0     		sub	sp, sp, #12
 1407              		.cfi_def_cfa_offset 16
 1408 0004 00AF     		add	r7, sp, #0
 1409              		.cfi_def_cfa_register 7
 1410 0006 0346     		mov	r3, r0
 1411 0008 FB71     		strb	r3, [r7, #7]
1956:Generated_Source\PSoC5/CapSense_CSD.c ****         if(src == CapSense_CSD_ANALOG_SWITCHES_SRC_PRESCALER)
 1412              		.loc 1 1956 0
 1413 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1414 000c 012B     		cmp	r3, #1
 1415 000e 08D1     		bne	.L69
1957:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1958:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= (uint8)~0x10u;
 1416              		.loc 1 1958 0
 1417 0010 0A4A     		ldr	r2, .L72
 1418 0012 0A4B     		ldr	r3, .L72
 1419 0014 1B78     		ldrb	r3, [r3]
 1420 0016 DBB2     		uxtb	r3, r3
 1421 0018 23F01003 		bic	r3, r3, #16
 1422 001c DBB2     		uxtb	r3, r3
 1423 001e 1370     		strb	r3, [r2]
1959:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1960:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1961:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1962:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= 0x10u;
1963:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1964:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1424              		.loc 1 1964 0
 1425 0020 07E0     		b	.L71
 1426              	.L69:
1962:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 1427              		.loc 1 1962 0
 1428 0022 064A     		ldr	r2, .L72
 1429 0024 054B     		ldr	r3, .L72
 1430 0026 1B78     		ldrb	r3, [r3]
 1431 0028 DBB2     		uxtb	r3, r3
 1432 002a 43F01003 		orr	r3, r3, #16
 1433 002e DBB2     		uxtb	r3, r3
 1434 0030 1370     		strb	r3, [r2]
 1435              	.L71:
 1436              		.loc 1 1964 0
 1437 0032 00BF     		nop
 1438 0034 0C37     		adds	r7, r7, #12
 1439              		.cfi_def_cfa_offset 4
 1440 0036 BD46     		mov	sp, r7
 1441              		.cfi_def_cfa_register 13
 1442              		@ sp needed
 1443 0038 80BC     		pop	{r7}
 1444              		.cfi_restore 7
 1445              		.cfi_def_cfa_offset 0
 1446 003a 7047     		bx	lr
 1447              	.L73:
 1448              		.align	2
 1449              	.L72:
 1450 003c 7C640040 		.word	1073767548
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 61


 1451              		.cfi_endproc
 1452              	.LFE18:
 1453              		.size	CapSense_CSD_SetAnalogSwitchesSource, .-CapSense_CSD_SetAnalogSwitchesSource
 1454              		.text
 1455              	.Letext0:
 1456              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1457              		.section	.debug_info,"",%progbits
 1458              	.Ldebug_info0:
 1459 0000 59050000 		.4byte	0x559
 1460 0004 0400     		.2byte	0x4
 1461 0006 00000000 		.4byte	.Ldebug_abbrev0
 1462 000a 04       		.byte	0x4
 1463 000b 01       		.uleb128 0x1
 1464 000c 10000000 		.4byte	.LASF61
 1465 0010 0C       		.byte	0xc
 1466 0011 21020000 		.4byte	.LASF62
 1467 0015 60040000 		.4byte	.LASF63
 1468 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1469 001d 00000000 		.4byte	0
 1470 0021 00000000 		.4byte	.Ldebug_line0
 1471 0025 02       		.uleb128 0x2
 1472 0026 01       		.byte	0x1
 1473 0027 06       		.byte	0x6
 1474 0028 0B010000 		.4byte	.LASF0
 1475 002c 02       		.uleb128 0x2
 1476 002d 01       		.byte	0x1
 1477 002e 08       		.byte	0x8
 1478 002f 8B030000 		.4byte	.LASF1
 1479 0033 02       		.uleb128 0x2
 1480 0034 02       		.byte	0x2
 1481 0035 05       		.byte	0x5
 1482 0036 99030000 		.4byte	.LASF2
 1483 003a 02       		.uleb128 0x2
 1484 003b 02       		.byte	0x2
 1485 003c 07       		.byte	0x7
 1486 003d 68020000 		.4byte	.LASF3
 1487 0041 02       		.uleb128 0x2
 1488 0042 04       		.byte	0x4
 1489 0043 05       		.byte	0x5
 1490 0044 42010000 		.4byte	.LASF4
 1491 0048 02       		.uleb128 0x2
 1492 0049 04       		.byte	0x4
 1493 004a 07       		.byte	0x7
 1494 004b 0F020000 		.4byte	.LASF5
 1495 004f 02       		.uleb128 0x2
 1496 0050 08       		.byte	0x8
 1497 0051 05       		.byte	0x5
 1498 0052 FD000000 		.4byte	.LASF6
 1499 0056 02       		.uleb128 0x2
 1500 0057 08       		.byte	0x8
 1501 0058 07       		.byte	0x7
 1502 0059 B8000000 		.4byte	.LASF7
 1503 005d 03       		.uleb128 0x3
 1504 005e 04       		.byte	0x4
 1505 005f 05       		.byte	0x5
 1506 0060 696E7400 		.ascii	"int\000"
 1507 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 62


 1508 0065 04       		.byte	0x4
 1509 0066 07       		.byte	0x7
 1510 0067 02020000 		.4byte	.LASF8
 1511 006b 04       		.uleb128 0x4
 1512 006c 80010000 		.4byte	.LASF9
 1513 0070 02       		.byte	0x2
 1514 0071 E401     		.2byte	0x1e4
 1515 0073 2C000000 		.4byte	0x2c
 1516 0077 04       		.uleb128 0x4
 1517 0078 00000000 		.4byte	.LASF10
 1518 007c 02       		.byte	0x2
 1519 007d E501     		.2byte	0x1e5
 1520 007f 3A000000 		.4byte	0x3a
 1521 0083 04       		.uleb128 0x4
 1522 0084 A2010000 		.4byte	.LASF11
 1523 0088 02       		.byte	0x2
 1524 0089 E601     		.2byte	0x1e6
 1525 008b 48000000 		.4byte	0x48
 1526 008f 02       		.uleb128 0x2
 1527 0090 04       		.byte	0x4
 1528 0091 04       		.byte	0x4
 1529 0092 5C030000 		.4byte	.LASF12
 1530 0096 02       		.uleb128 0x2
 1531 0097 08       		.byte	0x8
 1532 0098 04       		.byte	0x4
 1533 0099 86010000 		.4byte	.LASF13
 1534 009d 02       		.uleb128 0x2
 1535 009e 01       		.byte	0x1
 1536 009f 08       		.byte	0x8
 1537 00a0 01040000 		.4byte	.LASF14
 1538 00a4 04       		.uleb128 0x4
 1539 00a5 86030000 		.4byte	.LASF15
 1540 00a9 02       		.byte	0x2
 1541 00aa 8E02     		.2byte	0x28e
 1542 00ac B0000000 		.4byte	0xb0
 1543 00b0 05       		.uleb128 0x5
 1544 00b1 6B000000 		.4byte	0x6b
 1545 00b5 04       		.uleb128 0x4
 1546 00b6 7A010000 		.4byte	.LASF16
 1547 00ba 02       		.byte	0x2
 1548 00bb 8F02     		.2byte	0x28f
 1549 00bd C1000000 		.4byte	0xc1
 1550 00c1 05       		.uleb128 0x5
 1551 00c2 77000000 		.4byte	0x77
 1552 00c6 04       		.uleb128 0x4
 1553 00c7 E5020000 		.4byte	.LASF17
 1554 00cb 02       		.byte	0x2
 1555 00cc 9002     		.2byte	0x290
 1556 00ce D2000000 		.4byte	0xd2
 1557 00d2 05       		.uleb128 0x5
 1558 00d3 83000000 		.4byte	0x83
 1559 00d7 02       		.uleb128 0x2
 1560 00d8 08       		.byte	0x8
 1561 00d9 04       		.byte	0x4
 1562 00da 0E030000 		.4byte	.LASF18
 1563 00de 02       		.uleb128 0x2
 1564 00df 04       		.byte	0x4
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 63


 1565 00e0 07       		.byte	0x7
 1566 00e1 05030000 		.4byte	.LASF19
 1567 00e5 06       		.uleb128 0x6
 1568 00e6 30010000 		.4byte	.LASF20
 1569 00ea 01       		.byte	0x1
 1570 00eb 6F       		.byte	0x6f
 1571 00ec 00000000 		.4byte	.LFB0
 1572 00f0 48010000 		.4byte	.LFE0-.LFB0
 1573 00f4 01       		.uleb128 0x1
 1574 00f5 9C       		.byte	0x9c
 1575 00f6 09010000 		.4byte	0x109
 1576 00fa 07       		.uleb128 0x7
 1577 00fb 24050000 		.4byte	.LASF22
 1578 00ff 01       		.byte	0x1
 1579 0100 76       		.byte	0x76
 1580 0101 6B000000 		.4byte	0x6b
 1581 0105 02       		.uleb128 0x2
 1582 0106 91       		.byte	0x91
 1583 0107 77       		.sleb128 -9
 1584 0108 00       		.byte	0
 1585 0109 08       		.uleb128 0x8
 1586 010a 10050000 		.4byte	.LASF21
 1587 010e 01       		.byte	0x1
 1588 010f 5001     		.2byte	0x150
 1589 0111 00000000 		.4byte	.LFB1
 1590 0115 98000000 		.4byte	.LFE1-.LFB1
 1591 0119 01       		.uleb128 0x1
 1592 011a 9C       		.byte	0x9c
 1593 011b 2F010000 		.4byte	0x12f
 1594 011f 09       		.uleb128 0x9
 1595 0120 24050000 		.4byte	.LASF22
 1596 0124 01       		.byte	0x1
 1597 0125 5201     		.2byte	0x152
 1598 0127 6B000000 		.4byte	0x6b
 1599 012b 02       		.uleb128 0x2
 1600 012c 91       		.byte	0x91
 1601 012d 77       		.sleb128 -9
 1602 012e 00       		.byte	0
 1603 012f 0A       		.uleb128 0xa
 1604 0130 1A030000 		.4byte	.LASF23
 1605 0134 01       		.byte	0x1
 1606 0135 E901     		.2byte	0x1e9
 1607 0137 00000000 		.4byte	.LFB2
 1608 013b 24000000 		.4byte	.LFE2-.LFB2
 1609 013f 01       		.uleb128 0x1
 1610 0140 9C       		.byte	0x9c
 1611 0141 0A       		.uleb128 0xa
 1612 0142 EF030000 		.4byte	.LASF24
 1613 0146 01       		.byte	0x1
 1614 0147 0E02     		.2byte	0x20e
 1615 0149 00000000 		.4byte	.LFB3
 1616 014d 98000000 		.4byte	.LFE3-.LFB3
 1617 0151 01       		.uleb128 0x1
 1618 0152 9C       		.byte	0x9c
 1619 0153 0B       		.uleb128 0xb
 1620 0154 35050000 		.4byte	.LASF33
 1621 0158 01       		.byte	0x1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 64


 1622 0159 9802     		.2byte	0x298
 1623 015b 6B000000 		.4byte	0x6b
 1624 015f 00000000 		.4byte	.LFB4
 1625 0163 50000000 		.4byte	.LFE4-.LFB4
 1626 0167 01       		.uleb128 0x1
 1627 0168 9C       		.byte	0x9c
 1628 0169 9B010000 		.4byte	0x19b
 1629 016d 0C       		.uleb128 0xc
 1630 016e 07000000 		.4byte	.LASF27
 1631 0172 01       		.byte	0x1
 1632 0173 9802     		.2byte	0x298
 1633 0175 6B000000 		.4byte	0x6b
 1634 0179 02       		.uleb128 0x2
 1635 017a 91       		.byte	0x91
 1636 017b 6F       		.sleb128 -17
 1637 017c 0D       		.uleb128 0xd
 1638 017d 706F7300 		.ascii	"pos\000"
 1639 0181 01       		.byte	0x1
 1640 0182 9A02     		.2byte	0x29a
 1641 0184 6B000000 		.4byte	0x6b
 1642 0188 02       		.uleb128 0x2
 1643 0189 91       		.byte	0x91
 1644 018a 77       		.sleb128 -9
 1645 018b 09       		.uleb128 0x9
 1646 018c 37030000 		.4byte	.LASF25
 1647 0190 01       		.byte	0x1
 1648 0191 9B02     		.2byte	0x29b
 1649 0193 6B000000 		.4byte	0x6b
 1650 0197 02       		.uleb128 0x2
 1651 0198 91       		.byte	0x91
 1652 0199 76       		.sleb128 -10
 1653 019a 00       		.byte	0
 1654 019b 08       		.uleb128 0x8
 1655 019c 06040000 		.4byte	.LASF26
 1656 01a0 01       		.byte	0x1
 1657 01a1 3203     		.2byte	0x332
 1658 01a3 00000000 		.4byte	.LFB5
 1659 01a7 48000000 		.4byte	.LFE5-.LFB5
 1660 01ab 01       		.uleb128 0x1
 1661 01ac 9C       		.byte	0x9c
 1662 01ad D0010000 		.4byte	0x1d0
 1663 01b1 0C       		.uleb128 0xc
 1664 01b2 B3020000 		.4byte	.LASF28
 1665 01b6 01       		.byte	0x1
 1666 01b7 3203     		.2byte	0x332
 1667 01b9 6B000000 		.4byte	0x6b
 1668 01bd 02       		.uleb128 0x2
 1669 01be 91       		.byte	0x91
 1670 01bf 6F       		.sleb128 -17
 1671 01c0 09       		.uleb128 0x9
 1672 01c1 A3030000 		.4byte	.LASF29
 1673 01c5 01       		.byte	0x1
 1674 01c6 3403     		.2byte	0x334
 1675 01c8 6B000000 		.4byte	0x6b
 1676 01cc 02       		.uleb128 0x2
 1677 01cd 91       		.byte	0x91
 1678 01ce 77       		.sleb128 -9
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 65


 1679 01cf 00       		.byte	0
 1680 01d0 08       		.uleb128 0x8
 1681 01d1 CD020000 		.4byte	.LASF30
 1682 01d5 01       		.byte	0x1
 1683 01d6 A203     		.2byte	0x3a2
 1684 01d8 00000000 		.4byte	.LFB6
 1685 01dc 34000000 		.4byte	.LFE6-.LFB6
 1686 01e0 01       		.uleb128 0x1
 1687 01e1 9C       		.byte	0x9c
 1688 01e2 F6010000 		.4byte	0x1f6
 1689 01e6 0C       		.uleb128 0xc
 1690 01e7 7B020000 		.4byte	.LASF31
 1691 01eb 01       		.byte	0x1
 1692 01ec A203     		.2byte	0x3a2
 1693 01ee 6B000000 		.4byte	0x6b
 1694 01f2 02       		.uleb128 0x2
 1695 01f3 91       		.byte	0x91
 1696 01f4 77       		.sleb128 -9
 1697 01f5 00       		.byte	0
 1698 01f6 0A       		.uleb128 0xa
 1699 01f7 A9010000 		.4byte	.LASF32
 1700 01fb 01       		.byte	0x1
 1701 01fc EF03     		.2byte	0x3ef
 1702 01fe 00000000 		.4byte	.LFB7
 1703 0202 58000000 		.4byte	.LFE7-.LFB7
 1704 0206 01       		.uleb128 0x1
 1705 0207 9C       		.byte	0x9c
 1706 0208 0E       		.uleb128 0xe
 1707 0209 AA030000 		.4byte	.LASF64
 1708 020d 01       		.byte	0x1
 1709 020e 2404     		.2byte	0x424
 1710 0210 6B000000 		.4byte	0x6b
 1711 0214 00000000 		.4byte	.LFB8
 1712 0218 1C000000 		.4byte	.LFE8-.LFB8
 1713 021c 01       		.uleb128 0x1
 1714 021d 9C       		.byte	0x9c
 1715 021e 0B       		.uleb128 0xb
 1716 021f 27040000 		.4byte	.LASF34
 1717 0223 01       		.byte	0x1
 1718 0224 3D04     		.2byte	0x43d
 1719 0226 77000000 		.4byte	0x77
 1720 022a 00000000 		.4byte	.LFB9
 1721 022e 20000000 		.4byte	.LFE9-.LFB9
 1722 0232 01       		.uleb128 0x1
 1723 0233 9C       		.byte	0x9c
 1724 0234 48020000 		.4byte	0x248
 1725 0238 0C       		.uleb128 0xc
 1726 0239 7B020000 		.4byte	.LASF31
 1727 023d 01       		.byte	0x1
 1728 023e 3D04     		.2byte	0x43d
 1729 0240 6B000000 		.4byte	0x6b
 1730 0244 02       		.uleb128 0x2
 1731 0245 91       		.byte	0x91
 1732 0246 77       		.sleb128 -9
 1733 0247 00       		.byte	0
 1734 0248 08       		.uleb128 0x8
 1735 0249 CE010000 		.4byte	.LASF35
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 66


 1736 024d 01       		.byte	0x1
 1737 024e 5204     		.2byte	0x452
 1738 0250 00000000 		.4byte	.LFB10
 1739 0254 28000000 		.4byte	.LFE10-.LFB10
 1740 0258 01       		.uleb128 0x1
 1741 0259 9C       		.byte	0x9c
 1742 025a 6C020000 		.4byte	0x26c
 1743 025e 0D       		.uleb128 0xd
 1744 025f 6900     		.ascii	"i\000"
 1745 0261 01       		.byte	0x1
 1746 0262 5404     		.2byte	0x454
 1747 0264 6B000000 		.4byte	0x6b
 1748 0268 02       		.uleb128 0x2
 1749 0269 91       		.byte	0x91
 1750 026a 77       		.sleb128 -9
 1751 026b 00       		.byte	0
 1752 026c 08       		.uleb128 0x8
 1753 026d EB020000 		.4byte	.LASF36
 1754 0271 01       		.byte	0x1
 1755 0272 E804     		.2byte	0x4e8
 1756 0274 00000000 		.4byte	.LFB11
 1757 0278 6C000000 		.4byte	.LFE11-.LFB11
 1758 027c 01       		.uleb128 0x1
 1759 027d 9C       		.byte	0x9c
 1760 027e B0020000 		.4byte	0x2b0
 1761 0282 0C       		.uleb128 0xc
 1762 0283 7B020000 		.4byte	.LASF31
 1763 0287 01       		.byte	0x1
 1764 0288 E804     		.2byte	0x4e8
 1765 028a 6B000000 		.4byte	0x6b
 1766 028e 02       		.uleb128 0x2
 1767 028f 91       		.byte	0x91
 1768 0290 6F       		.sleb128 -17
 1769 0291 09       		.uleb128 0x9
 1770 0292 E8010000 		.4byte	.LASF37
 1771 0296 01       		.byte	0x1
 1772 0297 EA04     		.2byte	0x4ea
 1773 0299 6B000000 		.4byte	0x6b
 1774 029d 02       		.uleb128 0x2
 1775 029e 91       		.byte	0x91
 1776 029f 77       		.sleb128 -9
 1777 02a0 09       		.uleb128 0x9
 1778 02a1 C9010000 		.4byte	.LASF38
 1779 02a5 01       		.byte	0x1
 1780 02a6 EB04     		.2byte	0x4eb
 1781 02a8 6B000000 		.4byte	0x6b
 1782 02ac 02       		.uleb128 0x2
 1783 02ad 91       		.byte	0x91
 1784 02ae 76       		.sleb128 -10
 1785 02af 00       		.byte	0
 1786 02b0 08       		.uleb128 0x8
 1787 02b1 82020000 		.4byte	.LASF39
 1788 02b5 01       		.byte	0x1
 1789 02b6 3D05     		.2byte	0x53d
 1790 02b8 00000000 		.4byte	.LFB12
 1791 02bc 70000000 		.4byte	.LFE12-.LFB12
 1792 02c0 01       		.uleb128 0x1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 67


 1793 02c1 9C       		.byte	0x9c
 1794 02c2 F4020000 		.4byte	0x2f4
 1795 02c6 0C       		.uleb128 0xc
 1796 02c7 7B020000 		.4byte	.LASF31
 1797 02cb 01       		.byte	0x1
 1798 02cc 3D05     		.2byte	0x53d
 1799 02ce 6B000000 		.4byte	0x6b
 1800 02d2 02       		.uleb128 0x2
 1801 02d3 91       		.byte	0x91
 1802 02d4 6F       		.sleb128 -17
 1803 02d5 09       		.uleb128 0x9
 1804 02d6 E8010000 		.4byte	.LASF37
 1805 02da 01       		.byte	0x1
 1806 02db 3F05     		.2byte	0x53f
 1807 02dd 6B000000 		.4byte	0x6b
 1808 02e1 02       		.uleb128 0x2
 1809 02e2 91       		.byte	0x91
 1810 02e3 77       		.sleb128 -9
 1811 02e4 09       		.uleb128 0x9
 1812 02e5 C9010000 		.4byte	.LASF38
 1813 02e9 01       		.byte	0x1
 1814 02ea 4005     		.2byte	0x540
 1815 02ec 6B000000 		.4byte	0x6b
 1816 02f0 02       		.uleb128 0x2
 1817 02f1 91       		.byte	0x91
 1818 02f2 76       		.sleb128 -10
 1819 02f3 00       		.byte	0
 1820 02f4 08       		.uleb128 0x8
 1821 02f5 ED010000 		.4byte	.LASF40
 1822 02f9 01       		.byte	0x1
 1823 02fa 9105     		.2byte	0x591
 1824 02fc 00000000 		.4byte	.LFB13
 1825 0300 5C000000 		.4byte	.LFE13-.LFB13
 1826 0304 01       		.uleb128 0x1
 1827 0305 9C       		.byte	0x9c
 1828 0306 1A030000 		.4byte	0x31a
 1829 030a 0C       		.uleb128 0xc
 1830 030b 7B020000 		.4byte	.LASF31
 1831 030f 01       		.byte	0x1
 1832 0310 9105     		.2byte	0x591
 1833 0312 6B000000 		.4byte	0x6b
 1834 0316 02       		.uleb128 0x2
 1835 0317 91       		.byte	0x91
 1836 0318 77       		.sleb128 -9
 1837 0319 00       		.byte	0
 1838 031a 08       		.uleb128 0x8
 1839 031b 9D020000 		.4byte	.LASF41
 1840 031f 01       		.byte	0x1
 1841 0320 3906     		.2byte	0x639
 1842 0322 00000000 		.4byte	.LFB14
 1843 0326 98000000 		.4byte	.LFE14-.LFB14
 1844 032a 01       		.uleb128 0x1
 1845 032b 9C       		.byte	0x9c
 1846 032c 40030000 		.4byte	0x340
 1847 0330 0C       		.uleb128 0xc
 1848 0331 7B020000 		.4byte	.LASF31
 1849 0335 01       		.byte	0x1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 68


 1850 0336 3906     		.2byte	0x639
 1851 0338 6B000000 		.4byte	0x6b
 1852 033c 02       		.uleb128 0x2
 1853 033d 91       		.byte	0x91
 1854 033e 77       		.sleb128 -9
 1855 033f 00       		.byte	0
 1856 0340 0F       		.uleb128 0xf
 1857 0341 9E000000 		.4byte	.LASF42
 1858 0345 01       		.byte	0x1
 1859 0346 4707     		.2byte	0x747
 1860 0348 00000000 		.4byte	.LFB15
 1861 034c 2C000000 		.4byte	.LFE15-.LFB15
 1862 0350 01       		.uleb128 0x1
 1863 0351 9C       		.byte	0x9c
 1864 0352 66030000 		.4byte	0x366
 1865 0356 0C       		.uleb128 0xc
 1866 0357 62030000 		.4byte	.LASF43
 1867 035b 01       		.byte	0x1
 1868 035c 4707     		.2byte	0x747
 1869 035e 6B000000 		.4byte	0x6b
 1870 0362 02       		.uleb128 0x2
 1871 0363 91       		.byte	0x91
 1872 0364 77       		.sleb128 -9
 1873 0365 00       		.byte	0
 1874 0366 0B       		.uleb128 0xb
 1875 0367 6C030000 		.4byte	.LASF44
 1876 036b 01       		.byte	0x1
 1877 036c 6407     		.2byte	0x764
 1878 036e 6B000000 		.4byte	0x6b
 1879 0372 00000000 		.4byte	.LFB16
 1880 0376 20000000 		.4byte	.LFE16-.LFB16
 1881 037a 01       		.uleb128 0x1
 1882 037b 9C       		.byte	0x9c
 1883 037c 90030000 		.4byte	0x390
 1884 0380 09       		.uleb128 0x9
 1885 0381 62030000 		.4byte	.LASF43
 1886 0385 01       		.byte	0x1
 1887 0386 6607     		.2byte	0x766
 1888 0388 6B000000 		.4byte	0x6b
 1889 038c 02       		.uleb128 0x2
 1890 038d 91       		.byte	0x91
 1891 038e 77       		.sleb128 -9
 1892 038f 00       		.byte	0
 1893 0390 0F       		.uleb128 0xf
 1894 0391 D5030000 		.4byte	.LASF45
 1895 0395 01       		.byte	0x1
 1896 0396 8607     		.2byte	0x786
 1897 0398 00000000 		.4byte	.LFB17
 1898 039c 20000000 		.4byte	.LFE17-.LFB17
 1899 03a0 01       		.uleb128 0x1
 1900 03a1 9C       		.byte	0x9c
 1901 03a2 B6030000 		.4byte	0x3b6
 1902 03a6 0C       		.uleb128 0xc
 1903 03a7 2D030000 		.4byte	.LASF46
 1904 03ab 01       		.byte	0x1
 1905 03ac 8607     		.2byte	0x786
 1906 03ae 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 69


 1907 03b2 02       		.uleb128 0x2
 1908 03b3 91       		.byte	0x91
 1909 03b4 77       		.sleb128 -9
 1910 03b5 00       		.byte	0
 1911 03b6 0F       		.uleb128 0xf
 1912 03b7 51050000 		.4byte	.LASF47
 1913 03bb 01       		.byte	0x1
 1914 03bc A107     		.2byte	0x7a1
 1915 03be 00000000 		.4byte	.LFB18
 1916 03c2 40000000 		.4byte	.LFE18-.LFB18
 1917 03c6 01       		.uleb128 0x1
 1918 03c7 9C       		.byte	0x9c
 1919 03c8 DC030000 		.4byte	0x3dc
 1920 03cc 10       		.uleb128 0x10
 1921 03cd 73726300 		.ascii	"src\000"
 1922 03d1 01       		.byte	0x1
 1923 03d2 A107     		.2byte	0x7a1
 1924 03d4 6B000000 		.4byte	0x6b
 1925 03d8 02       		.uleb128 0x2
 1926 03d9 91       		.byte	0x91
 1927 03da 77       		.sleb128 -9
 1928 03db 00       		.byte	0
 1929 03dc 07       		.uleb128 0x7
 1930 03dd 8D010000 		.4byte	.LASF48
 1931 03e1 01       		.byte	0x1
 1932 03e2 16       		.byte	0x16
 1933 03e3 6B000000 		.4byte	0x6b
 1934 03e7 05       		.uleb128 0x5
 1935 03e8 03       		.byte	0x3
 1936 03e9 00000000 		.4byte	CapSense_CSD_initVar
 1937 03ed 11       		.uleb128 0x11
 1938 03ee 76050000 		.4byte	.LASF49
 1939 03f2 01       		.byte	0x1
 1940 03f3 19       		.byte	0x19
 1941 03f4 B0000000 		.4byte	0xb0
 1942 03f8 05       		.uleb128 0x5
 1943 03f9 03       		.byte	0x3
 1944 03fa 00000000 		.4byte	CapSense_CSD_csv
 1945 03fe 11       		.uleb128 0x11
 1946 03ff 17010000 		.4byte	.LASF50
 1947 0403 01       		.byte	0x1
 1948 0404 1A       		.byte	0x1a
 1949 0405 B0000000 		.4byte	0xb0
 1950 0409 05       		.uleb128 0x5
 1951 040a 03       		.byte	0x3
 1952 040b 00000000 		.4byte	CapSense_CSD_sensorIndex
 1953 040f 12       		.uleb128 0x12
 1954 0410 77000000 		.4byte	0x77
 1955 0414 1F040000 		.4byte	0x41f
 1956 0418 13       		.uleb128 0x13
 1957 0419 DE000000 		.4byte	0xde
 1958 041d 04       		.byte	0x4
 1959 041e 00       		.byte	0
 1960 041f 11       		.uleb128 0x11
 1961 0420 BE030000 		.4byte	.LASF51
 1962 0424 01       		.byte	0x1
 1963 0425 29       		.byte	0x29
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 70


 1964 0426 0F040000 		.4byte	0x40f
 1965 042a 05       		.uleb128 0x5
 1966 042b 03       		.byte	0x3
 1967 042c 00000000 		.4byte	CapSense_CSD_sensorRaw
 1968 0430 12       		.uleb128 0x12
 1969 0431 6B000000 		.4byte	0x6b
 1970 0435 40040000 		.4byte	0x440
 1971 0439 13       		.uleb128 0x13
 1972 043a DE000000 		.4byte	0xde
 1973 043e 00       		.byte	0
 1974 043f 00       		.byte	0
 1975 0440 11       		.uleb128 0x11
 1976 0441 3E030000 		.4byte	.LASF52
 1977 0445 01       		.byte	0x1
 1978 0446 2B       		.byte	0x2b
 1979 0447 30040000 		.4byte	0x430
 1980 044b 05       		.uleb128 0x5
 1981 044c 03       		.byte	0x3
 1982 044d 00000000 		.4byte	CapSense_CSD_sensorEnableMask
 1983 0451 12       		.uleb128 0x12
 1984 0452 67040000 		.4byte	0x467
 1985 0456 61040000 		.4byte	0x461
 1986 045a 13       		.uleb128 0x13
 1987 045b DE000000 		.4byte	0xde
 1988 045f 04       		.byte	0x4
 1989 0460 00       		.byte	0
 1990 0461 14       		.uleb128 0x14
 1991 0462 04       		.byte	0x4
 1992 0463 6B000000 		.4byte	0x6b
 1993 0467 15       		.uleb128 0x15
 1994 0468 61040000 		.4byte	0x461
 1995 046c 11       		.uleb128 0x11
 1996 046d B8020000 		.4byte	.LASF53
 1997 0471 01       		.byte	0x1
 1998 0472 2E       		.byte	0x2e
 1999 0473 7D040000 		.4byte	0x47d
 2000 0477 05       		.uleb128 0x5
 2001 0478 03       		.byte	0x3
 2002 0479 00000000 		.4byte	CapSense_CSD_pcTable
 2003 047d 15       		.uleb128 0x15
 2004 047e 51040000 		.4byte	0x451
 2005 0482 12       		.uleb128 0x12
 2006 0483 92040000 		.4byte	0x492
 2007 0487 92040000 		.4byte	0x492
 2008 048b 13       		.uleb128 0x13
 2009 048c DE000000 		.4byte	0xde
 2010 0490 04       		.byte	0x4
 2011 0491 00       		.byte	0
 2012 0492 15       		.uleb128 0x15
 2013 0493 6B000000 		.4byte	0x6b
 2014 0497 11       		.uleb128 0x11
 2015 0498 E6000000 		.4byte	.LASF54
 2016 049c 01       		.byte	0x1
 2017 049d 36       		.byte	0x36
 2018 049e A8040000 		.4byte	0x4a8
 2019 04a2 05       		.uleb128 0x5
 2020 04a3 03       		.byte	0x3
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 71


 2021 04a4 00000000 		.4byte	CapSense_CSD_portTable
 2022 04a8 15       		.uleb128 0x15
 2023 04a9 82040000 		.4byte	0x482
 2024 04ad 11       		.uleb128 0x11
 2025 04ae CF000000 		.4byte	.LASF55
 2026 04b2 01       		.byte	0x1
 2027 04b3 3E       		.byte	0x3e
 2028 04b4 BE040000 		.4byte	0x4be
 2029 04b8 05       		.uleb128 0x5
 2030 04b9 03       		.byte	0x3
 2031 04ba 00000000 		.4byte	CapSense_CSD_maskTable
 2032 04be 15       		.uleb128 0x15
 2033 04bf 82040000 		.4byte	0x482
 2034 04c3 12       		.uleb128 0x12
 2035 04c4 67040000 		.4byte	0x467
 2036 04c8 D3040000 		.4byte	0x4d3
 2037 04cc 13       		.uleb128 0x13
 2038 04cd DE000000 		.4byte	0xde
 2039 04d1 07       		.byte	0x7
 2040 04d2 00       		.byte	0
 2041 04d3 11       		.uleb128 0x11
 2042 04d4 65010000 		.4byte	.LASF56
 2043 04d8 01       		.byte	0x1
 2044 04d9 46       		.byte	0x46
 2045 04da E4040000 		.4byte	0x4e4
 2046 04de 05       		.uleb128 0x5
 2047 04df 03       		.byte	0x3
 2048 04e0 00000000 		.4byte	CapSense_CSD_csTable
 2049 04e4 15       		.uleb128 0x15
 2050 04e5 C3040000 		.4byte	0x4c3
 2051 04e9 11       		.uleb128 0x11
 2052 04ea F6040000 		.4byte	.LASF57
 2053 04ee 01       		.byte	0x1
 2054 04ef 4C       		.byte	0x4c
 2055 04f0 FA040000 		.4byte	0x4fa
 2056 04f4 05       		.uleb128 0x5
 2057 04f5 03       		.byte	0x3
 2058 04f6 00000000 		.4byte	CapSense_CSD_idacSettings
 2059 04fa 15       		.uleb128 0x15
 2060 04fb 82040000 		.4byte	0x482
 2061 04ff 12       		.uleb128 0x12
 2062 0500 92040000 		.4byte	0x492
 2063 0504 0F050000 		.4byte	0x50f
 2064 0508 13       		.uleb128 0x13
 2065 0509 DE000000 		.4byte	0xde
 2066 050d 00       		.byte	0
 2067 050e 00       		.byte	0
 2068 050f 11       		.uleb128 0x11
 2069 0510 42040000 		.4byte	.LASF58
 2070 0514 01       		.byte	0x1
 2071 0515 50       		.byte	0x50
 2072 0516 20050000 		.4byte	0x520
 2073 051a 05       		.uleb128 0x5
 2074 051b 03       		.byte	0x3
 2075 051c 00000000 		.4byte	CapSense_CSD_widgetResolution
 2076 0520 15       		.uleb128 0x15
 2077 0521 FF040000 		.4byte	0x4ff
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 72


 2078 0525 12       		.uleb128 0x12
 2079 0526 6B000000 		.4byte	0x6b
 2080 052a 35050000 		.4byte	0x535
 2081 052e 13       		.uleb128 0x13
 2082 052f DE000000 		.4byte	0xde
 2083 0533 04       		.byte	0x4
 2084 0534 00       		.byte	0
 2085 0535 11       		.uleb128 0x11
 2086 0536 47020000 		.4byte	.LASF59
 2087 053a 01       		.byte	0x1
 2088 053b 54       		.byte	0x54
 2089 053c 25050000 		.4byte	0x525
 2090 0540 05       		.uleb128 0x5
 2091 0541 03       		.byte	0x3
 2092 0542 00000000 		.4byte	CapSense_CSD_analogSwitchDivider
 2093 0546 11       		.uleb128 0x11
 2094 0547 4B010000 		.4byte	.LASF60
 2095 054b 01       		.byte	0x1
 2096 054c 58       		.byte	0x58
 2097 054d 57050000 		.4byte	0x557
 2098 0551 05       		.uleb128 0x5
 2099 0552 03       		.byte	0x3
 2100 0553 00000000 		.4byte	CapSense_CSD_widgetNumber
 2101 0557 15       		.uleb128 0x15
 2102 0558 82040000 		.4byte	0x482
 2103 055c 00       		.byte	0
 2104              		.section	.debug_abbrev,"",%progbits
 2105              	.Ldebug_abbrev0:
 2106 0000 01       		.uleb128 0x1
 2107 0001 11       		.uleb128 0x11
 2108 0002 01       		.byte	0x1
 2109 0003 25       		.uleb128 0x25
 2110 0004 0E       		.uleb128 0xe
 2111 0005 13       		.uleb128 0x13
 2112 0006 0B       		.uleb128 0xb
 2113 0007 03       		.uleb128 0x3
 2114 0008 0E       		.uleb128 0xe
 2115 0009 1B       		.uleb128 0x1b
 2116 000a 0E       		.uleb128 0xe
 2117 000b 55       		.uleb128 0x55
 2118 000c 17       		.uleb128 0x17
 2119 000d 11       		.uleb128 0x11
 2120 000e 01       		.uleb128 0x1
 2121 000f 10       		.uleb128 0x10
 2122 0010 17       		.uleb128 0x17
 2123 0011 00       		.byte	0
 2124 0012 00       		.byte	0
 2125 0013 02       		.uleb128 0x2
 2126 0014 24       		.uleb128 0x24
 2127 0015 00       		.byte	0
 2128 0016 0B       		.uleb128 0xb
 2129 0017 0B       		.uleb128 0xb
 2130 0018 3E       		.uleb128 0x3e
 2131 0019 0B       		.uleb128 0xb
 2132 001a 03       		.uleb128 0x3
 2133 001b 0E       		.uleb128 0xe
 2134 001c 00       		.byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 73


 2135 001d 00       		.byte	0
 2136 001e 03       		.uleb128 0x3
 2137 001f 24       		.uleb128 0x24
 2138 0020 00       		.byte	0
 2139 0021 0B       		.uleb128 0xb
 2140 0022 0B       		.uleb128 0xb
 2141 0023 3E       		.uleb128 0x3e
 2142 0024 0B       		.uleb128 0xb
 2143 0025 03       		.uleb128 0x3
 2144 0026 08       		.uleb128 0x8
 2145 0027 00       		.byte	0
 2146 0028 00       		.byte	0
 2147 0029 04       		.uleb128 0x4
 2148 002a 16       		.uleb128 0x16
 2149 002b 00       		.byte	0
 2150 002c 03       		.uleb128 0x3
 2151 002d 0E       		.uleb128 0xe
 2152 002e 3A       		.uleb128 0x3a
 2153 002f 0B       		.uleb128 0xb
 2154 0030 3B       		.uleb128 0x3b
 2155 0031 05       		.uleb128 0x5
 2156 0032 49       		.uleb128 0x49
 2157 0033 13       		.uleb128 0x13
 2158 0034 00       		.byte	0
 2159 0035 00       		.byte	0
 2160 0036 05       		.uleb128 0x5
 2161 0037 35       		.uleb128 0x35
 2162 0038 00       		.byte	0
 2163 0039 49       		.uleb128 0x49
 2164 003a 13       		.uleb128 0x13
 2165 003b 00       		.byte	0
 2166 003c 00       		.byte	0
 2167 003d 06       		.uleb128 0x6
 2168 003e 2E       		.uleb128 0x2e
 2169 003f 01       		.byte	0x1
 2170 0040 3F       		.uleb128 0x3f
 2171 0041 19       		.uleb128 0x19
 2172 0042 03       		.uleb128 0x3
 2173 0043 0E       		.uleb128 0xe
 2174 0044 3A       		.uleb128 0x3a
 2175 0045 0B       		.uleb128 0xb
 2176 0046 3B       		.uleb128 0x3b
 2177 0047 0B       		.uleb128 0xb
 2178 0048 27       		.uleb128 0x27
 2179 0049 19       		.uleb128 0x19
 2180 004a 11       		.uleb128 0x11
 2181 004b 01       		.uleb128 0x1
 2182 004c 12       		.uleb128 0x12
 2183 004d 06       		.uleb128 0x6
 2184 004e 40       		.uleb128 0x40
 2185 004f 18       		.uleb128 0x18
 2186 0050 9642     		.uleb128 0x2116
 2187 0052 19       		.uleb128 0x19
 2188 0053 01       		.uleb128 0x1
 2189 0054 13       		.uleb128 0x13
 2190 0055 00       		.byte	0
 2191 0056 00       		.byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 74


 2192 0057 07       		.uleb128 0x7
 2193 0058 34       		.uleb128 0x34
 2194 0059 00       		.byte	0
 2195 005a 03       		.uleb128 0x3
 2196 005b 0E       		.uleb128 0xe
 2197 005c 3A       		.uleb128 0x3a
 2198 005d 0B       		.uleb128 0xb
 2199 005e 3B       		.uleb128 0x3b
 2200 005f 0B       		.uleb128 0xb
 2201 0060 49       		.uleb128 0x49
 2202 0061 13       		.uleb128 0x13
 2203 0062 02       		.uleb128 0x2
 2204 0063 18       		.uleb128 0x18
 2205 0064 00       		.byte	0
 2206 0065 00       		.byte	0
 2207 0066 08       		.uleb128 0x8
 2208 0067 2E       		.uleb128 0x2e
 2209 0068 01       		.byte	0x1
 2210 0069 3F       		.uleb128 0x3f
 2211 006a 19       		.uleb128 0x19
 2212 006b 03       		.uleb128 0x3
 2213 006c 0E       		.uleb128 0xe
 2214 006d 3A       		.uleb128 0x3a
 2215 006e 0B       		.uleb128 0xb
 2216 006f 3B       		.uleb128 0x3b
 2217 0070 05       		.uleb128 0x5
 2218 0071 27       		.uleb128 0x27
 2219 0072 19       		.uleb128 0x19
 2220 0073 11       		.uleb128 0x11
 2221 0074 01       		.uleb128 0x1
 2222 0075 12       		.uleb128 0x12
 2223 0076 06       		.uleb128 0x6
 2224 0077 40       		.uleb128 0x40
 2225 0078 18       		.uleb128 0x18
 2226 0079 9642     		.uleb128 0x2116
 2227 007b 19       		.uleb128 0x19
 2228 007c 01       		.uleb128 0x1
 2229 007d 13       		.uleb128 0x13
 2230 007e 00       		.byte	0
 2231 007f 00       		.byte	0
 2232 0080 09       		.uleb128 0x9
 2233 0081 34       		.uleb128 0x34
 2234 0082 00       		.byte	0
 2235 0083 03       		.uleb128 0x3
 2236 0084 0E       		.uleb128 0xe
 2237 0085 3A       		.uleb128 0x3a
 2238 0086 0B       		.uleb128 0xb
 2239 0087 3B       		.uleb128 0x3b
 2240 0088 05       		.uleb128 0x5
 2241 0089 49       		.uleb128 0x49
 2242 008a 13       		.uleb128 0x13
 2243 008b 02       		.uleb128 0x2
 2244 008c 18       		.uleb128 0x18
 2245 008d 00       		.byte	0
 2246 008e 00       		.byte	0
 2247 008f 0A       		.uleb128 0xa
 2248 0090 2E       		.uleb128 0x2e
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 75


 2249 0091 00       		.byte	0
 2250 0092 3F       		.uleb128 0x3f
 2251 0093 19       		.uleb128 0x19
 2252 0094 03       		.uleb128 0x3
 2253 0095 0E       		.uleb128 0xe
 2254 0096 3A       		.uleb128 0x3a
 2255 0097 0B       		.uleb128 0xb
 2256 0098 3B       		.uleb128 0x3b
 2257 0099 05       		.uleb128 0x5
 2258 009a 27       		.uleb128 0x27
 2259 009b 19       		.uleb128 0x19
 2260 009c 11       		.uleb128 0x11
 2261 009d 01       		.uleb128 0x1
 2262 009e 12       		.uleb128 0x12
 2263 009f 06       		.uleb128 0x6
 2264 00a0 40       		.uleb128 0x40
 2265 00a1 18       		.uleb128 0x18
 2266 00a2 9642     		.uleb128 0x2116
 2267 00a4 19       		.uleb128 0x19
 2268 00a5 00       		.byte	0
 2269 00a6 00       		.byte	0
 2270 00a7 0B       		.uleb128 0xb
 2271 00a8 2E       		.uleb128 0x2e
 2272 00a9 01       		.byte	0x1
 2273 00aa 3F       		.uleb128 0x3f
 2274 00ab 19       		.uleb128 0x19
 2275 00ac 03       		.uleb128 0x3
 2276 00ad 0E       		.uleb128 0xe
 2277 00ae 3A       		.uleb128 0x3a
 2278 00af 0B       		.uleb128 0xb
 2279 00b0 3B       		.uleb128 0x3b
 2280 00b1 05       		.uleb128 0x5
 2281 00b2 27       		.uleb128 0x27
 2282 00b3 19       		.uleb128 0x19
 2283 00b4 49       		.uleb128 0x49
 2284 00b5 13       		.uleb128 0x13
 2285 00b6 11       		.uleb128 0x11
 2286 00b7 01       		.uleb128 0x1
 2287 00b8 12       		.uleb128 0x12
 2288 00b9 06       		.uleb128 0x6
 2289 00ba 40       		.uleb128 0x40
 2290 00bb 18       		.uleb128 0x18
 2291 00bc 9742     		.uleb128 0x2117
 2292 00be 19       		.uleb128 0x19
 2293 00bf 01       		.uleb128 0x1
 2294 00c0 13       		.uleb128 0x13
 2295 00c1 00       		.byte	0
 2296 00c2 00       		.byte	0
 2297 00c3 0C       		.uleb128 0xc
 2298 00c4 05       		.uleb128 0x5
 2299 00c5 00       		.byte	0
 2300 00c6 03       		.uleb128 0x3
 2301 00c7 0E       		.uleb128 0xe
 2302 00c8 3A       		.uleb128 0x3a
 2303 00c9 0B       		.uleb128 0xb
 2304 00ca 3B       		.uleb128 0x3b
 2305 00cb 05       		.uleb128 0x5
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 76


 2306 00cc 49       		.uleb128 0x49
 2307 00cd 13       		.uleb128 0x13
 2308 00ce 02       		.uleb128 0x2
 2309 00cf 18       		.uleb128 0x18
 2310 00d0 00       		.byte	0
 2311 00d1 00       		.byte	0
 2312 00d2 0D       		.uleb128 0xd
 2313 00d3 34       		.uleb128 0x34
 2314 00d4 00       		.byte	0
 2315 00d5 03       		.uleb128 0x3
 2316 00d6 08       		.uleb128 0x8
 2317 00d7 3A       		.uleb128 0x3a
 2318 00d8 0B       		.uleb128 0xb
 2319 00d9 3B       		.uleb128 0x3b
 2320 00da 05       		.uleb128 0x5
 2321 00db 49       		.uleb128 0x49
 2322 00dc 13       		.uleb128 0x13
 2323 00dd 02       		.uleb128 0x2
 2324 00de 18       		.uleb128 0x18
 2325 00df 00       		.byte	0
 2326 00e0 00       		.byte	0
 2327 00e1 0E       		.uleb128 0xe
 2328 00e2 2E       		.uleb128 0x2e
 2329 00e3 00       		.byte	0
 2330 00e4 3F       		.uleb128 0x3f
 2331 00e5 19       		.uleb128 0x19
 2332 00e6 03       		.uleb128 0x3
 2333 00e7 0E       		.uleb128 0xe
 2334 00e8 3A       		.uleb128 0x3a
 2335 00e9 0B       		.uleb128 0xb
 2336 00ea 3B       		.uleb128 0x3b
 2337 00eb 05       		.uleb128 0x5
 2338 00ec 27       		.uleb128 0x27
 2339 00ed 19       		.uleb128 0x19
 2340 00ee 49       		.uleb128 0x49
 2341 00ef 13       		.uleb128 0x13
 2342 00f0 11       		.uleb128 0x11
 2343 00f1 01       		.uleb128 0x1
 2344 00f2 12       		.uleb128 0x12
 2345 00f3 06       		.uleb128 0x6
 2346 00f4 40       		.uleb128 0x40
 2347 00f5 18       		.uleb128 0x18
 2348 00f6 9742     		.uleb128 0x2117
 2349 00f8 19       		.uleb128 0x19
 2350 00f9 00       		.byte	0
 2351 00fa 00       		.byte	0
 2352 00fb 0F       		.uleb128 0xf
 2353 00fc 2E       		.uleb128 0x2e
 2354 00fd 01       		.byte	0x1
 2355 00fe 3F       		.uleb128 0x3f
 2356 00ff 19       		.uleb128 0x19
 2357 0100 03       		.uleb128 0x3
 2358 0101 0E       		.uleb128 0xe
 2359 0102 3A       		.uleb128 0x3a
 2360 0103 0B       		.uleb128 0xb
 2361 0104 3B       		.uleb128 0x3b
 2362 0105 05       		.uleb128 0x5
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 77


 2363 0106 27       		.uleb128 0x27
 2364 0107 19       		.uleb128 0x19
 2365 0108 11       		.uleb128 0x11
 2366 0109 01       		.uleb128 0x1
 2367 010a 12       		.uleb128 0x12
 2368 010b 06       		.uleb128 0x6
 2369 010c 40       		.uleb128 0x40
 2370 010d 18       		.uleb128 0x18
 2371 010e 9742     		.uleb128 0x2117
 2372 0110 19       		.uleb128 0x19
 2373 0111 01       		.uleb128 0x1
 2374 0112 13       		.uleb128 0x13
 2375 0113 00       		.byte	0
 2376 0114 00       		.byte	0
 2377 0115 10       		.uleb128 0x10
 2378 0116 05       		.uleb128 0x5
 2379 0117 00       		.byte	0
 2380 0118 03       		.uleb128 0x3
 2381 0119 08       		.uleb128 0x8
 2382 011a 3A       		.uleb128 0x3a
 2383 011b 0B       		.uleb128 0xb
 2384 011c 3B       		.uleb128 0x3b
 2385 011d 05       		.uleb128 0x5
 2386 011e 49       		.uleb128 0x49
 2387 011f 13       		.uleb128 0x13
 2388 0120 02       		.uleb128 0x2
 2389 0121 18       		.uleb128 0x18
 2390 0122 00       		.byte	0
 2391 0123 00       		.byte	0
 2392 0124 11       		.uleb128 0x11
 2393 0125 34       		.uleb128 0x34
 2394 0126 00       		.byte	0
 2395 0127 03       		.uleb128 0x3
 2396 0128 0E       		.uleb128 0xe
 2397 0129 3A       		.uleb128 0x3a
 2398 012a 0B       		.uleb128 0xb
 2399 012b 3B       		.uleb128 0x3b
 2400 012c 0B       		.uleb128 0xb
 2401 012d 49       		.uleb128 0x49
 2402 012e 13       		.uleb128 0x13
 2403 012f 3F       		.uleb128 0x3f
 2404 0130 19       		.uleb128 0x19
 2405 0131 02       		.uleb128 0x2
 2406 0132 18       		.uleb128 0x18
 2407 0133 00       		.byte	0
 2408 0134 00       		.byte	0
 2409 0135 12       		.uleb128 0x12
 2410 0136 01       		.uleb128 0x1
 2411 0137 01       		.byte	0x1
 2412 0138 49       		.uleb128 0x49
 2413 0139 13       		.uleb128 0x13
 2414 013a 01       		.uleb128 0x1
 2415 013b 13       		.uleb128 0x13
 2416 013c 00       		.byte	0
 2417 013d 00       		.byte	0
 2418 013e 13       		.uleb128 0x13
 2419 013f 21       		.uleb128 0x21
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 78


 2420 0140 00       		.byte	0
 2421 0141 49       		.uleb128 0x49
 2422 0142 13       		.uleb128 0x13
 2423 0143 2F       		.uleb128 0x2f
 2424 0144 0B       		.uleb128 0xb
 2425 0145 00       		.byte	0
 2426 0146 00       		.byte	0
 2427 0147 14       		.uleb128 0x14
 2428 0148 0F       		.uleb128 0xf
 2429 0149 00       		.byte	0
 2430 014a 0B       		.uleb128 0xb
 2431 014b 0B       		.uleb128 0xb
 2432 014c 49       		.uleb128 0x49
 2433 014d 13       		.uleb128 0x13
 2434 014e 00       		.byte	0
 2435 014f 00       		.byte	0
 2436 0150 15       		.uleb128 0x15
 2437 0151 26       		.uleb128 0x26
 2438 0152 00       		.byte	0
 2439 0153 49       		.uleb128 0x49
 2440 0154 13       		.uleb128 0x13
 2441 0155 00       		.byte	0
 2442 0156 00       		.byte	0
 2443 0157 00       		.byte	0
 2444              		.section	.debug_aranges,"",%progbits
 2445 0000 AC000000 		.4byte	0xac
 2446 0004 0200     		.2byte	0x2
 2447 0006 00000000 		.4byte	.Ldebug_info0
 2448 000a 04       		.byte	0x4
 2449 000b 00       		.byte	0
 2450 000c 0000     		.2byte	0
 2451 000e 0000     		.2byte	0
 2452 0010 00000000 		.4byte	.LFB0
 2453 0014 48010000 		.4byte	.LFE0-.LFB0
 2454 0018 00000000 		.4byte	.LFB1
 2455 001c 98000000 		.4byte	.LFE1-.LFB1
 2456 0020 00000000 		.4byte	.LFB2
 2457 0024 24000000 		.4byte	.LFE2-.LFB2
 2458 0028 00000000 		.4byte	.LFB3
 2459 002c 98000000 		.4byte	.LFE3-.LFB3
 2460 0030 00000000 		.4byte	.LFB4
 2461 0034 50000000 		.4byte	.LFE4-.LFB4
 2462 0038 00000000 		.4byte	.LFB5
 2463 003c 48000000 		.4byte	.LFE5-.LFB5
 2464 0040 00000000 		.4byte	.LFB6
 2465 0044 34000000 		.4byte	.LFE6-.LFB6
 2466 0048 00000000 		.4byte	.LFB7
 2467 004c 58000000 		.4byte	.LFE7-.LFB7
 2468 0050 00000000 		.4byte	.LFB8
 2469 0054 1C000000 		.4byte	.LFE8-.LFB8
 2470 0058 00000000 		.4byte	.LFB9
 2471 005c 20000000 		.4byte	.LFE9-.LFB9
 2472 0060 00000000 		.4byte	.LFB10
 2473 0064 28000000 		.4byte	.LFE10-.LFB10
 2474 0068 00000000 		.4byte	.LFB11
 2475 006c 6C000000 		.4byte	.LFE11-.LFB11
 2476 0070 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 79


 2477 0074 70000000 		.4byte	.LFE12-.LFB12
 2478 0078 00000000 		.4byte	.LFB13
 2479 007c 5C000000 		.4byte	.LFE13-.LFB13
 2480 0080 00000000 		.4byte	.LFB14
 2481 0084 98000000 		.4byte	.LFE14-.LFB14
 2482 0088 00000000 		.4byte	.LFB15
 2483 008c 2C000000 		.4byte	.LFE15-.LFB15
 2484 0090 00000000 		.4byte	.LFB16
 2485 0094 20000000 		.4byte	.LFE16-.LFB16
 2486 0098 00000000 		.4byte	.LFB17
 2487 009c 20000000 		.4byte	.LFE17-.LFB17
 2488 00a0 00000000 		.4byte	.LFB18
 2489 00a4 40000000 		.4byte	.LFE18-.LFB18
 2490 00a8 00000000 		.4byte	0
 2491 00ac 00000000 		.4byte	0
 2492              		.section	.debug_ranges,"",%progbits
 2493              	.Ldebug_ranges0:
 2494 0000 00000000 		.4byte	.LFB0
 2495 0004 48010000 		.4byte	.LFE0
 2496 0008 00000000 		.4byte	.LFB1
 2497 000c 98000000 		.4byte	.LFE1
 2498 0010 00000000 		.4byte	.LFB2
 2499 0014 24000000 		.4byte	.LFE2
 2500 0018 00000000 		.4byte	.LFB3
 2501 001c 98000000 		.4byte	.LFE3
 2502 0020 00000000 		.4byte	.LFB4
 2503 0024 50000000 		.4byte	.LFE4
 2504 0028 00000000 		.4byte	.LFB5
 2505 002c 48000000 		.4byte	.LFE5
 2506 0030 00000000 		.4byte	.LFB6
 2507 0034 34000000 		.4byte	.LFE6
 2508 0038 00000000 		.4byte	.LFB7
 2509 003c 58000000 		.4byte	.LFE7
 2510 0040 00000000 		.4byte	.LFB8
 2511 0044 1C000000 		.4byte	.LFE8
 2512 0048 00000000 		.4byte	.LFB9
 2513 004c 20000000 		.4byte	.LFE9
 2514 0050 00000000 		.4byte	.LFB10
 2515 0054 28000000 		.4byte	.LFE10
 2516 0058 00000000 		.4byte	.LFB11
 2517 005c 6C000000 		.4byte	.LFE11
 2518 0060 00000000 		.4byte	.LFB12
 2519 0064 70000000 		.4byte	.LFE12
 2520 0068 00000000 		.4byte	.LFB13
 2521 006c 5C000000 		.4byte	.LFE13
 2522 0070 00000000 		.4byte	.LFB14
 2523 0074 98000000 		.4byte	.LFE14
 2524 0078 00000000 		.4byte	.LFB15
 2525 007c 2C000000 		.4byte	.LFE15
 2526 0080 00000000 		.4byte	.LFB16
 2527 0084 20000000 		.4byte	.LFE16
 2528 0088 00000000 		.4byte	.LFB17
 2529 008c 20000000 		.4byte	.LFE17
 2530 0090 00000000 		.4byte	.LFB18
 2531 0094 40000000 		.4byte	.LFE18
 2532 0098 00000000 		.4byte	0
 2533 009c 00000000 		.4byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 80


 2534              		.section	.debug_line,"",%progbits
 2535              	.Ldebug_line0:
 2536 0000 56020000 		.section	.debug_str,"MS",%progbits,1
 2536      02004900 
 2536      00000201 
 2536      FB0E0D00 
 2536      01010101 
 2537              	.LASF10:
 2538 0000 75696E74 		.ascii	"uint16\000"
 2538      313600
 2539              	.LASF27:
 2540 0007 736E7349 		.ascii	"snsIndex\000"
 2540      6E646578 
 2540      00
 2541              	.LASF61:
 2542 0010 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2542      43313120 
 2542      352E342E 
 2542      31203230 
 2542      31363036 
 2543 0043 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2543      20726576 
 2543      6973696F 
 2543      6E203233 
 2543      37373135 
 2544 0076 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2544      66756E63 
 2544      74696F6E 
 2544      2D736563 
 2544      74696F6E 
 2545              	.LASF42:
 2546 009e 43617053 		.ascii	"CapSense_CSD_SetPrescaler\000"
 2546      656E7365 
 2546      5F435344 
 2546      5F536574 
 2546      50726573 
 2547              	.LASF7:
 2548 00b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2548      206C6F6E 
 2548      6720756E 
 2548      7369676E 
 2548      65642069 
 2549              	.LASF55:
 2550 00cf 43617053 		.ascii	"CapSense_CSD_maskTable\000"
 2550      656E7365 
 2550      5F435344 
 2550      5F6D6173 
 2550      6B546162 
 2551              	.LASF54:
 2552 00e6 43617053 		.ascii	"CapSense_CSD_portTable\000"
 2552      656E7365 
 2552      5F435344 
 2552      5F706F72 
 2552      74546162 
 2553              	.LASF6:
 2554 00fd 6C6F6E67 		.ascii	"long long int\000"
 2554      206C6F6E 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 81


 2554      6720696E 
 2554      7400
 2555              	.LASF0:
 2556 010b 7369676E 		.ascii	"signed char\000"
 2556      65642063 
 2556      68617200 
 2557              	.LASF50:
 2558 0117 43617053 		.ascii	"CapSense_CSD_sensorIndex\000"
 2558      656E7365 
 2558      5F435344 
 2558      5F73656E 
 2558      736F7249 
 2559              	.LASF20:
 2560 0130 43617053 		.ascii	"CapSense_CSD_Init\000"
 2560      656E7365 
 2560      5F435344 
 2560      5F496E69 
 2560      7400
 2561              	.LASF4:
 2562 0142 6C6F6E67 		.ascii	"long int\000"
 2562      20696E74 
 2562      00
 2563              	.LASF60:
 2564 014b 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2564      656E7365 
 2564      5F435344 
 2564      5F776964 
 2564      6765744E 
 2565              	.LASF56:
 2566 0165 43617053 		.ascii	"CapSense_CSD_csTable\000"
 2566      656E7365 
 2566      5F435344 
 2566      5F637354 
 2566      61626C65 
 2567              	.LASF16:
 2568 017a 72656731 		.ascii	"reg16\000"
 2568      3600
 2569              	.LASF9:
 2570 0180 75696E74 		.ascii	"uint8\000"
 2570      3800
 2571              	.LASF13:
 2572 0186 646F7562 		.ascii	"double\000"
 2572      6C6500
 2573              	.LASF48:
 2574 018d 43617053 		.ascii	"CapSense_CSD_initVar\000"
 2574      656E7365 
 2574      5F435344 
 2574      5F696E69 
 2574      74566172 
 2575              	.LASF11:
 2576 01a2 75696E74 		.ascii	"uint32\000"
 2576      333200
 2577              	.LASF32:
 2578 01a9 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 2578      656E7365 
 2578      5F435344 
 2578      5F536361 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 82


 2578      6E456E61 
 2579              	.LASF38:
 2580 01c9 6D61736B 		.ascii	"mask\000"
 2580      00
 2581              	.LASF35:
 2582 01ce 43617053 		.ascii	"CapSense_CSD_ClearSensors\000"
 2582      656E7365 
 2582      5F435344 
 2582      5F436C65 
 2582      61725365 
 2583              	.LASF37:
 2584 01e8 706F7274 		.ascii	"port\000"
 2584      00
 2585              	.LASF40:
 2586 01ed 43617053 		.ascii	"CapSense_CSD_PreScan\000"
 2586      656E7365 
 2586      5F435344 
 2586      5F507265 
 2586      5363616E 
 2587              	.LASF8:
 2588 0202 756E7369 		.ascii	"unsigned int\000"
 2588      676E6564 
 2588      20696E74 
 2588      00
 2589              	.LASF5:
 2590 020f 6C6F6E67 		.ascii	"long unsigned int\000"
 2590      20756E73 
 2590      69676E65 
 2590      6420696E 
 2590      7400
 2591              	.LASF62:
 2592 0221 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD.c\000"
 2592      72617465 
 2592      645F536F 
 2592      75726365 
 2592      5C50536F 
 2593              	.LASF59:
 2594 0247 43617053 		.ascii	"CapSense_CSD_analogSwitchDivider\000"
 2594      656E7365 
 2594      5F435344 
 2594      5F616E61 
 2594      6C6F6753 
 2595              	.LASF3:
 2596 0268 73686F72 		.ascii	"short unsigned int\000"
 2596      7420756E 
 2596      7369676E 
 2596      65642069 
 2596      6E7400
 2597              	.LASF31:
 2598 027b 73656E73 		.ascii	"sensor\000"
 2598      6F7200
 2599              	.LASF39:
 2600 0282 43617053 		.ascii	"CapSense_CSD_DisableSensor\000"
 2600      656E7365 
 2600      5F435344 
 2600      5F446973 
 2600      61626C65 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 83


 2601              	.LASF41:
 2602 029d 43617053 		.ascii	"CapSense_CSD_PostScan\000"
 2602      656E7365 
 2602      5F435344 
 2602      5F506F73 
 2602      74536361 
 2603              	.LASF28:
 2604 02b3 736C6F74 		.ascii	"slot\000"
 2604      00
 2605              	.LASF53:
 2606 02b8 43617053 		.ascii	"CapSense_CSD_pcTable\000"
 2606      656E7365 
 2606      5F435344 
 2606      5F706354 
 2606      61626C65 
 2607              	.LASF30:
 2608 02cd 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 2608      656E7365 
 2608      5F435344 
 2608      5F536361 
 2608      6E53656E 
 2609              	.LASF17:
 2610 02e5 72656733 		.ascii	"reg32\000"
 2610      3200
 2611              	.LASF36:
 2612 02eb 43617053 		.ascii	"CapSense_CSD_EnableSensor\000"
 2612      656E7365 
 2612      5F435344 
 2612      5F456E61 
 2612      626C6553 
 2613              	.LASF19:
 2614 0305 73697A65 		.ascii	"sizetype\000"
 2614      74797065 
 2614      00
 2615              	.LASF18:
 2616 030e 6C6F6E67 		.ascii	"long double\000"
 2616      20646F75 
 2616      626C6500 
 2617              	.LASF23:
 2618 031a 43617053 		.ascii	"CapSense_CSD_Start\000"
 2618      656E7365 
 2618      5F435344 
 2618      5F537461 
 2618      727400
 2619              	.LASF46:
 2620 032d 7363616E 		.ascii	"scanSpeed\000"
 2620      53706565 
 2620      6400
 2621              	.LASF25:
 2622 0337 656E4D61 		.ascii	"enMask\000"
 2622      736B00
 2623              	.LASF52:
 2624 033e 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2624      656E7365 
 2624      5F435344 
 2624      5F73656E 
 2624      736F7245 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 84


 2625              	.LASF12:
 2626 035c 666C6F61 		.ascii	"float\000"
 2626      7400
 2627              	.LASF43:
 2628 0362 70726573 		.ascii	"prescaler\000"
 2628      63616C65 
 2628      7200
 2629              	.LASF44:
 2630 036c 43617053 		.ascii	"CapSense_CSD_GetPrescaler\000"
 2630      656E7365 
 2630      5F435344 
 2630      5F476574 
 2630      50726573 
 2631              	.LASF15:
 2632 0386 72656738 		.ascii	"reg8\000"
 2632      00
 2633              	.LASF1:
 2634 038b 756E7369 		.ascii	"unsigned char\000"
 2634      676E6564 
 2634      20636861 
 2634      7200
 2635              	.LASF2:
 2636 0399 73686F72 		.ascii	"short int\000"
 2636      7420696E 
 2636      7400
 2637              	.LASF29:
 2638 03a3 77696467 		.ascii	"widget\000"
 2638      657400
 2639              	.LASF64:
 2640 03aa 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 2640      656E7365 
 2640      5F435344 
 2640      5F497342 
 2640      75737900 
 2641              	.LASF51:
 2642 03be 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2642      656E7365 
 2642      5F435344 
 2642      5F73656E 
 2642      736F7252 
 2643              	.LASF45:
 2644 03d5 43617053 		.ascii	"CapSense_CSD_SetScanSpeed\000"
 2644      656E7365 
 2644      5F435344 
 2644      5F536574 
 2644      5363616E 
 2645              	.LASF24:
 2646 03ef 43617053 		.ascii	"CapSense_CSD_Stop\000"
 2646      656E7365 
 2646      5F435344 
 2646      5F53746F 
 2646      7000
 2647              	.LASF14:
 2648 0401 63686172 		.ascii	"char\000"
 2648      00
 2649              	.LASF26:
 2650 0406 43617053 		.ascii	"CapSense_CSD_SetScanSlotSettings\000"
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 85


 2650      656E7365 
 2650      5F435344 
 2650      5F536574 
 2650      5363616E 
 2651              	.LASF34:
 2652 0427 43617053 		.ascii	"CapSense_CSD_ReadSensorRaw\000"
 2652      656E7365 
 2652      5F435344 
 2652      5F526561 
 2652      6453656E 
 2653              	.LASF58:
 2654 0442 43617053 		.ascii	"CapSense_CSD_widgetResolution\000"
 2654      656E7365 
 2654      5F435344 
 2654      5F776964 
 2654      67657452 
 2655              	.LASF63:
 2656 0460 433A5C55 		.ascii	"C:\\Users\\holge\\Dropbox\\AAU - Elektronik og IT\\"
 2656      73657273 
 2656      5C686F6C 
 2656      67655C44 
 2656      726F7062 
 2657 048e 342E2073 		.ascii	"4. semester\\Digital Design\\digital-design\\PSoC\\"
 2657      656D6573 
 2657      7465725C 
 2657      44696769 
 2657      74616C20 
 2658 04bd 63797072 		.ascii	"cypress_PsOC_5LP\\Workspace01\\CapSense_CSD_Design0"
 2658      6573735F 
 2658      50734F43 
 2658      5F354C50 
 2658      5C576F72 
 2659 04ee 312E6379 		.ascii	"1.cydsn\000"
 2659      64736E00 
 2660              	.LASF57:
 2661 04f6 43617053 		.ascii	"CapSense_CSD_idacSettings\000"
 2661      656E7365 
 2661      5F435344 
 2661      5F696461 
 2661      63536574 
 2662              	.LASF21:
 2663 0510 43617053 		.ascii	"CapSense_CSD_Enable\000"
 2663      656E7365 
 2663      5F435344 
 2663      5F456E61 
 2663      626C6500 
 2664              	.LASF22:
 2665 0524 656E6162 		.ascii	"enableInterrupts\000"
 2665      6C65496E 
 2665      74657272 
 2665      75707473 
 2665      00
 2666              	.LASF33:
 2667 0535 43617053 		.ascii	"CapSense_CSD_FindNextSensor\000"
 2667      656E7365 
 2667      5F435344 
 2667      5F46696E 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccj9opV8.s 			page 86


 2667      644E6578 
 2668              	.LASF47:
 2669 0551 43617053 		.ascii	"CapSense_CSD_SetAnalogSwitchesSource\000"
 2669      656E7365 
 2669      5F435344 
 2669      5F536574 
 2669      416E616C 
 2670              	.LASF49:
 2671 0576 43617053 		.ascii	"CapSense_CSD_csv\000"
 2671      656E7365 
 2671      5F435344 
 2671      5F637376 
 2671      00
 2672              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
