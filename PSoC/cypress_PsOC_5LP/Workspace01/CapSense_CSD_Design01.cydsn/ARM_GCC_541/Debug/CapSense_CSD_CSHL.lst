ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_CSD_sensorBaseline,10,4
  20              		.comm	CapSense_CSD_sensorBaselineLow,5,4
  21              		.comm	CapSense_CSD_sensorSignal,10,4
  22              		.comm	CapSense_CSD_sensorOnMask,1,4
  23              		.comm	CapSense_CSD_lowBaselineResetCnt,5,4
  24              		.global	CapSense_CSD_fingerThreshold
  25              		.section	.rodata
  26              		.align	2
  27              		.type	CapSense_CSD_fingerThreshold, %object
  28              		.size	CapSense_CSD_fingerThreshold, 2
  29              	CapSense_CSD_fingerThreshold:
  30 0000 5400     		.short	84
  31              		.global	CapSense_CSD_noiseThreshold
  32 0002 0000     		.align	2
  33              		.type	CapSense_CSD_noiseThreshold, %object
  34              		.size	CapSense_CSD_noiseThreshold, 2
  35              	CapSense_CSD_noiseThreshold:
  36 0004 2A00     		.short	42
  37              		.global	CapSense_CSD_hysteresis
  38 0006 0000     		.align	2
  39              		.type	CapSense_CSD_hysteresis, %object
  40              		.size	CapSense_CSD_hysteresis, 2
  41              	CapSense_CSD_hysteresis:
  42 0008 0000     		.space	2
  43              		.global	CapSense_CSD_debounce
  44 000a 0000     		.align	2
  45              		.type	CapSense_CSD_debounce, %object
  46              		.size	CapSense_CSD_debounce, 1
  47              	CapSense_CSD_debounce:
  48 000c 01       		.byte	1
  49              		.global	CapSense_CSD_debounceCounter
  50              		.bss
  51              		.align	2
  52              		.type	CapSense_CSD_debounceCounter, %object
  53              		.size	CapSense_CSD_debounceCounter, 1
  54              	CapSense_CSD_debounceCounter:
  55 0000 00       		.space	1
  56              		.global	CapSense_CSD_rawDataIndex
  57              		.section	.rodata
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 2


  58 000d 000000   		.align	2
  59              		.type	CapSense_CSD_rawDataIndex, %object
  60              		.size	CapSense_CSD_rawDataIndex, 1
  61              	CapSense_CSD_rawDataIndex:
  62 0010 00       		.space	1
  63              		.global	CapSense_CSD_numberOfSensors
  64 0011 000000   		.align	2
  65              		.type	CapSense_CSD_numberOfSensors, %object
  66              		.size	CapSense_CSD_numberOfSensors, 1
  67              	CapSense_CSD_numberOfSensors:
  68 0014 05       		.byte	5
  69              		.global	CapSense_CSD_centroidMult
  70 0015 000000   		.align	2
  71              		.type	CapSense_CSD_centroidMult, %object
  72              		.size	CapSense_CSD_centroidMult, 2
  73              	CapSense_CSD_centroidMult:
  74 0018 0019     		.short	6400
  75              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
  76              		.align	2
  77              		.global	CapSense_CSD_BaseInit
  78              		.thumb
  79              		.thumb_func
  80              		.type	CapSense_CSD_BaseInit, %function
  81              	CapSense_CSD_BaseInit:
  82              	.LFB0:
  83              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #elif ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)   | \
  31:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) )
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 3


  32:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     84u, 
  50:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     42u, 
  54:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 
  58:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, 
  62:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 
  66:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, /* LinearSlider0__LS */
  70:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  71:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  72:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  73:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_numberOfSensors[] = {
  74:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     5u, /* LinearSlider0__LS */
  75:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  76:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  77:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  78:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_centroidMult[] = {
  79:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     6400u, 
  80:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  81:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  82:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  83:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  84:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  85:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
  86:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
  87:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  88:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 4


  89:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
  90:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
  91:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal to raw count value. 
  92:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and 
  93:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
  94:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads CapSense_CSD_debounceCounter[sensor] array element with initial 
  95:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  value equal CapSense_CSD_debounce[].
  96:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and 
  97:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an 
  98:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
  99:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 100:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 101:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 102:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 103:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 104:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 105:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 106:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 107:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 108:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 109:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 110:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 111:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 112:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 113:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 114:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 115:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 116:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 117:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 118:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 119:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 120:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 121:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 122:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 123:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 124:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 125:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint8 sensor) 
 126:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
  84              		.loc 1 126 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 8
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 7, -4
  92 0002 83B0     		sub	sp, sp, #12
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
  96 0006 0346     		mov	r3, r0
  97 0008 FB71     		strb	r3, [r7, #7]
 127:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 128:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 129:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 130:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 131:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 5


 132:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 133:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 134:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 135:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 136:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 137:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 138:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 139:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 140:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 141:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 142:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 143:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
  98              		.loc 1 143 0
  99 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 100 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 101 000e 0A49     		ldr	r1, .L2
 102 0010 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 103 0014 094A     		ldr	r2, .L2+4
 104 0016 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 144:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 105              		.loc 1 144 0
 106 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 107 001c 084A     		ldr	r2, .L2+8
 108 001e 0021     		movs	r1, #0
 109 0020 D154     		strb	r1, [r2, r3]
 145:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 110              		.loc 1 145 0
 111 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 112 0024 074A     		ldr	r2, .L2+12
 113 0026 0021     		movs	r1, #0
 114 0028 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 146:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 147:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 148:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 149:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) |\
 150:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 151:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 152:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 153:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 154:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 155:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) |\
 156:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) |\
 157:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) |\
 158:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) |\
 159:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 160:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 161:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 162:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 163:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 164:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 165:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
 166:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 167:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             */
 168:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 169:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 170:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 171:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 6


 172:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 173:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 115              		.loc 1 173 0
 116 002c 00BF     		nop
 117 002e 0C37     		adds	r7, r7, #12
 118              		.cfi_def_cfa_offset 4
 119 0030 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0032 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0034 7047     		bx	lr
 126              	.L3:
 127 0036 00BF     		.align	2
 128              	.L2:
 129 0038 00000000 		.word	CapSense_CSD_sensorRaw
 130 003c 00000000 		.word	CapSense_CSD_sensorBaseline
 131 0040 00000000 		.word	CapSense_CSD_sensorBaselineLow
 132 0044 00000000 		.word	CapSense_CSD_sensorSignal
 133              		.cfi_endproc
 134              	.LFE0:
 135              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 136              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 137              		.align	2
 138              		.global	CapSense_CSD_InitializeSensorBaseline
 139              		.thumb
 140              		.thumb_func
 141              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 142              	CapSense_CSD_InitializeSensorBaseline:
 143              	.LFB1:
 174:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 175:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 176:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 177:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 178:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 179:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 180:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 181:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 182:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 183:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 184:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 185:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  enabled.
 186:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 187:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 188:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 189:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 190:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 191:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 192:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 193:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 194:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 195:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 196:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 197:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint8 sensor)
 198:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 199:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 7


 144              		.loc 1 199 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 8
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 80B5     		push	{r7, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 82B0     		sub	sp, sp, #8
 153              		.cfi_def_cfa_offset 16
 154 0004 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 156 0006 0346     		mov	r3, r0
 157 0008 FB71     		strb	r3, [r7, #7]
 200:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 201:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 158              		.loc 1 201 0
 159 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 160 000c 1846     		mov	r0, r3
 161 000e FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 202:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 162              		.loc 1 202 0
 163 0012 00BF     		nop
 164              	.L5:
 165              		.loc 1 202 0 is_stmt 0 discriminator 1
 166 0014 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 167 0018 0346     		mov	r3, r0
 168 001a 002B     		cmp	r3, #0
 169 001c FAD1     		bne	.L5
 203:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 204:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 205:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 206:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 207:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 208:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 209:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(sensor);
 170              		.loc 1 209 0 is_stmt 1
 171 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 172 0020 1846     		mov	r0, r3
 173 0022 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 210:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 211:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 212:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 213:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 214:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 215:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 216:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 217:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 218:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 219:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 220:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 221:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 222:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
 223:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 224:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 225:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
 226:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 8


 174              		.loc 1 226 0
 175 0026 00BF     		nop
 176 0028 0837     		adds	r7, r7, #8
 177              		.cfi_def_cfa_offset 8
 178 002a BD46     		mov	sp, r7
 179              		.cfi_def_cfa_register 13
 180              		@ sp needed
 181 002c 80BD     		pop	{r7, pc}
 182              		.cfi_endproc
 183              	.LFE1:
 184              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 185 002e 00BF     		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 186              		.align	2
 187              		.global	CapSense_CSD_InitializeAllBaselines
 188              		.thumb
 189              		.thumb_func
 190              		.type	CapSense_CSD_InitializeAllBaselines, %function
 191              	CapSense_CSD_InitializeAllBaselines:
 192              	.LFB2:
 227:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 228:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 229:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 231:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 232:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 233:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 234:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to loads the 
 235:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning 
 236:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 237:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 238:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 239:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 240:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 241:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 242:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 243:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 244:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 245:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 246:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 247:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 248:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 249:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 250:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 251:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 193              		.loc 1 251 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 8
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 80B5     		push	{r7, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 7, -8
 200              		.cfi_offset 14, -4
 201 0002 82B0     		sub	sp, sp, #8
 202              		.cfi_def_cfa_offset 16
 203 0004 00AF     		add	r7, sp, #0
 204              		.cfi_def_cfa_register 7
 252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 9


 253:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 254:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 205              		.loc 1 255 0
 206 0006 0023     		movs	r3, #0
 207 0008 FB71     		strb	r3, [r7, #7]
 208 000a 06E0     		b	.L7
 209              	.L8:
 256:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 257:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 210              		.loc 1 257 0 discriminator 3
 211 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 212 000e 1846     		mov	r0, r3
 213 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 214              		.loc 1 255 0 discriminator 3
 215 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 216 0016 0133     		adds	r3, r3, #1
 217 0018 FB71     		strb	r3, [r7, #7]
 218              	.L7:
 255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 219              		.loc 1 255 0 is_stmt 0 discriminator 1
 220 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 221 001c 042B     		cmp	r3, #4
 222 001e F5D9     		bls	.L8
 258:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 259:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 223              		.loc 1 259 0 is_stmt 1
 224 0020 00BF     		nop
 225 0022 0837     		adds	r7, r7, #8
 226              		.cfi_def_cfa_offset 8
 227 0024 BD46     		mov	sp, r7
 228              		.cfi_def_cfa_register 13
 229              		@ sp needed
 230 0026 80BD     		pop	{r7, pc}
 231              		.cfi_endproc
 232              	.LFE2:
 233              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 234              		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 235              		.align	2
 236              		.global	CapSense_CSD_InitializeEnabledBaselines
 237              		.thumb
 238              		.thumb_func
 239              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 240              	CapSense_CSD_InitializeEnabledBaselines:
 241              	.LFB3:
 260:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 261:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 262:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 264:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 265:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 266:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 267:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 268:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 269:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 270:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 10


 271:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 272:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 273:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 274:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 275:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 276:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 277:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 278:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 279:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 280:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 281:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 282:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 283:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              
 284:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 242              		.loc 1 284 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 82B0     		sub	sp, sp, #8
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 285:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 286:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 287:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 288:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 289:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 254              		.loc 1 289 0
 255 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 290:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 256              		.loc 1 290 0
 257 000a 00BF     		nop
 258              	.L10:
 259              		.loc 1 290 0 is_stmt 0 discriminator 1
 260 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 261 0010 0346     		mov	r3, r0
 262 0012 002B     		cmp	r3, #0
 263 0014 FAD1     		bne	.L10
 291:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 292:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 293:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 294:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 295:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 264              		.loc 1 295 0 is_stmt 1
 265 0016 0023     		movs	r3, #0
 266 0018 FB71     		strb	r3, [r7, #7]
 267 001a 1DE0     		b	.L11
 268              	.L13:
 296:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 297:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 269              		.loc 1 297 0
 270 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 271 001e DB08     		lsrs	r3, r3, #3
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 11


 272 0020 BB71     		strb	r3, [r7, #6]
 298:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 273              		.loc 1 298 0
 274 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 275 0024 03F00703 		and	r3, r3, #7
 276 0028 0122     		movs	r2, #1
 277 002a 02FA03F3 		lsl	r3, r2, r3
 278 002e 7B71     		strb	r3, [r7, #5]
 299:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 300:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 301:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u)
 279              		.loc 1 301 0
 280 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 281 0032 0D4A     		ldr	r2, .L14
 282 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 283 0036 7B79     		ldrb	r3, [r7, #5]
 284 0038 1340     		ands	r3, r3, r2
 285 003a DBB2     		uxtb	r3, r3
 286 003c 002B     		cmp	r3, #0
 287 003e 04D1     		bne	.L12
 302:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorRaw[i] = 0u;
 288              		.loc 1 303 0
 289 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 290 0042 0A4A     		ldr	r2, .L14+4
 291 0044 0021     		movs	r1, #0
 292 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 293              	.L12:
 304:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 305:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 306:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize baselines */
 307:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(i);
 294              		.loc 1 307 0 discriminator 2
 295 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 296 004c 1846     		mov	r0, r3
 297 004e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 295:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 298              		.loc 1 295 0 discriminator 2
 299 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 300 0054 0133     		adds	r3, r3, #1
 301 0056 FB71     		strb	r3, [r7, #7]
 302              	.L11:
 295:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 303              		.loc 1 295 0 is_stmt 0 discriminator 1
 304 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 305 005a 042B     		cmp	r3, #4
 306 005c DED9     		bls	.L13
 308:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 309:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }  
 307              		.loc 1 309 0 is_stmt 1
 308 005e 00BF     		nop
 309 0060 0837     		adds	r7, r7, #8
 310              		.cfi_def_cfa_offset 8
 311 0062 BD46     		mov	sp, r7
 312              		.cfi_def_cfa_register 13
 313              		@ sp needed
 314 0064 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 12


 315              	.L15:
 316 0066 00BF     		.align	2
 317              	.L14:
 318 0068 00000000 		.word	CapSense_CSD_sensorEnableMask
 319 006c 00000000 		.word	CapSense_CSD_sensorRaw
 320              		.cfi_endproc
 321              	.LFE3:
 322              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 323              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 324              		.align	2
 325              		.global	CapSense_CSD_UpdateSensorBaseline
 326              		.thumb
 327              		.thumb_func
 328              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 329              	CapSense_CSD_UpdateSensorBaseline:
 330              	.LFB4:
 310:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 311:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 312:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 313:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 314:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 315:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 316:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 317:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 318:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 319:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 320:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_SensorSignal[sensor]. 
 321:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 322:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 323:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 324:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  that noise threshold.
 325:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 326:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  calculation.
 327:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 328:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 329:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 330:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 331:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 332:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 333:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 334:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 335:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 336:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 337:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 338:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 339:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 340:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 341:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 342:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 343:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 344:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 345:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 346:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 347:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 348:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 349:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint8 sensor)
 350:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 13


 351:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 331              		.loc 1 351 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 24
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 86B0     		sub	sp, sp, #24
 340              		.cfi_def_cfa_offset 32
 341 0004 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 0006 0346     		mov	r3, r0
 344 0008 FB71     		strb	r3, [r7, #7]
 352:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint32 calc;
 353:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 354:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 355:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 345              		.loc 1 355 0
 346 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 347 000c 444A     		ldr	r2, .L26
 348 000e D35C     		ldrb	r3, [r2, r3]
 349 0010 7B75     		strb	r3, [r7, #21]
 356:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 350              		.loc 1 356 0
 351 0012 2A23     		movs	r3, #42
 352 0014 7B82     		strh	r3, [r7, #18]	@ movhi
 357:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 358:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 359:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 360:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 361:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 362:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 363:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 364:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 353              		.loc 1 364 0
 354 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 355 0018 424A     		ldr	r2, .L26+4
 356 001a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 357 001e 3B82     		strh	r3, [r7, #16]	@ movhi
 365:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 366:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 367:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 368:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 369:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                         CapSense_CSD_rawFilterData2[sensor]);
 370:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 371:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 372:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 373:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 374:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 375:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterData1
 376:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                            CapSense_CSD_rawFilterData2[sensor]);
 377:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 378:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 379:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 380:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 14


 381:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 382:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 383:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 384:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 385:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 386:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 387:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 388:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 389:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 390:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 391:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 392:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 393:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 394:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 395:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 396:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 397:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1[sen
 398:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 399:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 400:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 401:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 402:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 403:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 404:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 405:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_CalculateThresholds(sensor);
 406:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 407:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 408:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 409:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 410:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 411:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 358              		.loc 1 411 0
 359 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 360 0022 414A     		ldr	r2, .L26+8
 361 0024 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 362 0028 3A8A     		ldrh	r2, [r7, #16]
 363 002a 9A42     		cmp	r2, r3
 364 002c 09D3     		bcc	.L17
 412:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 413:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 365              		.loc 1 413 0
 366 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 367 0030 3D4A     		ldr	r2, .L26+8
 368 0032 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 369 0036 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 370 0038 D31A     		subs	r3, r2, r3
 371 003a FB82     		strh	r3, [r7, #22]	@ movhi
 414:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 372              		.loc 1 414 0
 373 003c 0123     		movs	r3, #1
 374 003e 7B75     		strb	r3, [r7, #21]
 375 0040 08E0     		b	.L18
 376              	.L17:
 415:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 416:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 417:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 418:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 15


 377              		.loc 1 418 0
 378 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 379 0044 384A     		ldr	r2, .L26+8
 380 0046 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 381 004a 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 382 004c D31A     		subs	r3, r2, r3
 383 004e FB82     		strh	r3, [r7, #22]	@ movhi
 419:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 384              		.loc 1 419 0
 385 0050 0023     		movs	r3, #0
 386 0052 7B75     		strb	r3, [r7, #21]
 387              	.L18:
 420:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 421:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 422:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 388              		.loc 1 422 0
 389 0054 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 390 0056 002B     		cmp	r3, #0
 391 0058 18D1     		bne	.L19
 392              		.loc 1 422 0 is_stmt 0 discriminator 1
 393 005a FB8A     		ldrh	r3, [r7, #22]
 394 005c 142B     		cmp	r3, #20
 395 005e 15D9     		bls	.L19
 423:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 424:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_LOW_BASELINE_RESET)
 396              		.loc 1 424 0 is_stmt 1
 397 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 398 0062 324A     		ldr	r2, .L26+12
 399 0064 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 400 0066 042B     		cmp	r3, #4
 401 0068 08D9     		bls	.L20
 425:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 426:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 402              		.loc 1 426 0
 403 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 404 006c 1846     		mov	r0, r3
 405 006e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 427:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 406              		.loc 1 427 0
 407 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 408 0074 2D4A     		ldr	r2, .L26+12
 409 0076 0021     		movs	r1, #0
 410 0078 D154     		strb	r1, [r2, r3]
 424:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 411              		.loc 1 424 0
 412 007a 3AE0     		b	.L22
 413              	.L20:
 428:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 429:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 430:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 431:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 414              		.loc 1 431 0
 415 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 416 007e 2B4A     		ldr	r2, .L26+12
 417 0080 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 418 0082 0132     		adds	r2, r2, #1
 419 0084 D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 16


 420 0086 294A     		ldr	r2, .L26+12
 421 0088 D154     		strb	r1, [r2, r3]
 424:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 422              		.loc 1 424 0
 423 008a 32E0     		b	.L22
 424              	.L19:
 432:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 433:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 434:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 435:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 436:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 437:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 438:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 425              		.loc 1 438 0
 426 008c FA8A     		ldrh	r2, [r7, #22]
 427 008e 7B8A     		ldrh	r3, [r7, #18]
 428 0090 9A42     		cmp	r2, r3
 429 0092 05D9     		bls	.L23
 430              		.loc 1 438 0 is_stmt 0 discriminator 1
 431 0094 FB8A     		ldrh	r3, [r7, #22]
 432 0096 132B     		cmp	r3, #19
 433 0098 2BD8     		bhi	.L22
 439:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 440:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                    && (widget == 0u)))
 434              		.loc 1 440 0 is_stmt 1
 435 009a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 436 009c 002B     		cmp	r3, #0
 437 009e 28D1     		bne	.L22
 438              	.L23:
 441:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 442:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 443:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 444:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 439              		.loc 1 444 0
 440 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 441 00a2 214A     		ldr	r2, .L26+8
 442 00a4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 443 00a8 1B02     		lsls	r3, r3, #8
 444 00aa FB60     		str	r3, [r7, #12]
 445:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 445              		.loc 1 445 0
 446 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 447 00ae 204A     		ldr	r2, .L26+16
 448 00b0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 449 00b2 1A46     		mov	r2, r3
 450 00b4 FB68     		ldr	r3, [r7, #12]
 451 00b6 1343     		orrs	r3, r3, r2
 452 00b8 FB60     		str	r3, [r7, #12]
 446:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 447:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 448:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 453              		.loc 1 448 0
 454 00ba 3B8A     		ldrh	r3, [r7, #16]
 455 00bc FA68     		ldr	r2, [r7, #12]
 456 00be 1344     		add	r3, r3, r2
 457 00c0 FB60     		str	r3, [r7, #12]
 449:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 17


 450:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 451:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 458              		.loc 1 451 0
 459 00c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 460 00c4 184A     		ldr	r2, .L26+8
 461 00c6 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 462 00ca 1A46     		mov	r2, r3
 463 00cc FB68     		ldr	r3, [r7, #12]
 464 00ce 9B1A     		subs	r3, r3, r2
 465 00d0 FB60     		str	r3, [r7, #12]
 452:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 453:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 454:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 466              		.loc 1 454 0
 467 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 468 00d4 FA68     		ldr	r2, [r7, #12]
 469 00d6 120A     		lsrs	r2, r2, #8
 470 00d8 91B2     		uxth	r1, r2
 471 00da 134A     		ldr	r2, .L26+8
 472 00dc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 455:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 473              		.loc 1 455 0
 474 00e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 475 00e2 FA68     		ldr	r2, [r7, #12]
 476 00e4 D1B2     		uxtb	r1, r2
 477 00e6 124A     		ldr	r2, .L26+16
 478 00e8 D154     		strb	r1, [r2, r3]
 456:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 457:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 479              		.loc 1 457 0
 480 00ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 481 00ec 0F4A     		ldr	r2, .L26+12
 482 00ee 0021     		movs	r1, #0
 483 00f0 D154     		strb	r1, [r2, r3]
 484              	.L22:
 458:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 459:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 460:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 461:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 462:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 463:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 464:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 485              		.loc 1 464 0
 486 00f2 FA8A     		ldrh	r2, [r7, #22]
 487 00f4 7B8A     		ldrh	r3, [r7, #18]
 488 00f6 9A42     		cmp	r2, r3
 489 00f8 08D9     		bls	.L24
 490              		.loc 1 464 0 is_stmt 0 discriminator 1
 491 00fa 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 492 00fc 002B     		cmp	r3, #0
 493 00fe 05D0     		beq	.L24
 465:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 466:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 467:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 468:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 469:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 470:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 18


 471:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 472:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else 
 473:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 474:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 475:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 476:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 477:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 494              		.loc 1 477 0 is_stmt 1
 495 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 496 0102 0C49     		ldr	r1, .L26+20
 497 0104 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 498 0106 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 499 010a 04E0     		b	.L25
 500              	.L24:
 478:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 479:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 480:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 481:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 482:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 483:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 501              		.loc 1 483 0
 502 010c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 503 010e 094A     		ldr	r2, .L26+20
 504 0110 0021     		movs	r1, #0
 505 0112 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 506              	.L25:
 484:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 485:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 486:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 487:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 488:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 489:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 490:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 507              		.loc 1 490 0
 508 0116 00BF     		nop
 509 0118 1837     		adds	r7, r7, #24
 510              		.cfi_def_cfa_offset 8
 511 011a BD46     		mov	sp, r7
 512              		.cfi_def_cfa_register 13
 513              		@ sp needed
 514 011c 80BD     		pop	{r7, pc}
 515              	.L27:
 516 011e 00BF     		.align	2
 517              	.L26:
 518 0120 00000000 		.word	CapSense_CSD_widgetNumber
 519 0124 00000000 		.word	CapSense_CSD_sensorRaw
 520 0128 00000000 		.word	CapSense_CSD_sensorBaseline
 521 012c 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 522 0130 00000000 		.word	CapSense_CSD_sensorBaselineLow
 523 0134 00000000 		.word	CapSense_CSD_sensorSignal
 524              		.cfi_endproc
 525              	.LFE4:
 526              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 527              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 528              		.align	2
 529              		.global	CapSense_CSD_UpdateEnabledBaselines
 530              		.thumb
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 19


 531              		.thumb_func
 532              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 533              	CapSense_CSD_UpdateEnabledBaselines:
 534              	.LFB5:
 491:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 492:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 493:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 494:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 495:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 496:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 497:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 498:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 499:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 500:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  for enabled sensors.
 501:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 502:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 503:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 504:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 505:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 506:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 507:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 508:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 509:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 510:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 511:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 512:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 513:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 514:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 515:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 516:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 517:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 518:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 519:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 520:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 521:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 522:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 523:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 524:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 535              		.loc 1 524 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 8
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 7, -8
 542              		.cfi_offset 14, -4
 543 0002 82B0     		sub	sp, sp, #8
 544              		.cfi_def_cfa_offset 16
 545 0004 00AF     		add	r7, sp, #0
 546              		.cfi_def_cfa_register 7
 525:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 526:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 527:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 528:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 529:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 547              		.loc 1 529 0
 548 0006 0023     		movs	r3, #0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 20


 549 0008 FB71     		strb	r3, [r7, #7]
 550 000a 18E0     		b	.L29
 551              	.L31:
 530:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 531:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 552              		.loc 1 531 0
 553 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 554 000e DB08     		lsrs	r3, r3, #3
 555 0010 BB71     		strb	r3, [r7, #6]
 532:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 556              		.loc 1 532 0
 557 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 558 0014 03F00703 		and	r3, r3, #7
 559 0018 0122     		movs	r2, #1
 560 001a 02FA03F3 		lsl	r3, r2, r3
 561 001e 7B71     		strb	r3, [r7, #5]
 533:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) != 0u)
 562              		.loc 1 533 0
 563 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 564 0022 0A4A     		ldr	r2, .L32
 565 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 566 0026 7B79     		ldrb	r3, [r7, #5]
 567 0028 1340     		ands	r3, r3, r2
 568 002a DBB2     		uxtb	r3, r3
 569 002c 002B     		cmp	r3, #0
 570 002e 03D0     		beq	.L30
 534:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 535:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 571              		.loc 1 535 0
 572 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 573 0032 1846     		mov	r0, r3
 574 0034 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 575              	.L30:
 529:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 576              		.loc 1 529 0 discriminator 2
 577 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 578 003a 0133     		adds	r3, r3, #1
 579 003c FB71     		strb	r3, [r7, #7]
 580              	.L29:
 529:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 581              		.loc 1 529 0 is_stmt 0 discriminator 1
 582 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 583 0040 042B     		cmp	r3, #4
 584 0042 E3D9     		bls	.L31
 536:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 537:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 538:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 585              		.loc 1 538 0 is_stmt 1
 586 0044 00BF     		nop
 587 0046 0837     		adds	r7, r7, #8
 588              		.cfi_def_cfa_offset 8
 589 0048 BD46     		mov	sp, r7
 590              		.cfi_def_cfa_register 13
 591              		@ sp needed
 592 004a 80BD     		pop	{r7, pc}
 593              	.L33:
 594              		.align	2
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 21


 595              	.L32:
 596 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 597              		.cfi_endproc
 598              	.LFE5:
 599              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 600              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 601              		.align	2
 602              		.global	CapSense_CSD_CheckIsSensorActive
 603              		.thumb
 604              		.thumb_func
 605              		.type	CapSense_CSD_CheckIsSensorActive, %function
 606              	CapSense_CSD_CheckIsSensorActive:
 607              	.LFB6:
 539:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 540:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 541:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 542:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
 543:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 544:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 545:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 546:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_SensorSignal[sensor] array element to finger
 547:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 548:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 549:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active. 
 550:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 551:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 552:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The debounce counter added to the sensor active transition.
 553:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This function updates CapSense_CSD_SensorOnMask[] array element.
 554:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 555:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 556:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 557:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 558:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 559:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 560:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 561:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 562:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 563:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 564:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 565:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 566:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 567:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 568:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store sensors on/off state.
 569:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors 
 570:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 571:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 572:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 573:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
 574:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
 575:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 576:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 577:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 578:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 579:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 580:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsSensorActive(uint8 sensor)
 581:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                   
 582:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 22


 608              		.loc 1 582 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 24
 611              		@ frame_needed = 1, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613 0000 80B4     		push	{r7}
 614              		.cfi_def_cfa_offset 4
 615              		.cfi_offset 7, -4
 616 0002 87B0     		sub	sp, sp, #28
 617              		.cfi_def_cfa_offset 32
 618 0004 00AF     		add	r7, sp, #0
 619              		.cfi_def_cfa_register 7
 620 0006 0346     		mov	r3, r0
 621 0008 FB71     		strb	r3, [r7, #7]
 583:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
 584:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Get On/Off mask */
 585:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos = (sensor >> 3u);
 622              		.loc 1 585 0
 623 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 624 000c DB08     		lsrs	r3, r3, #3
 625 000e FB75     		strb	r3, [r7, #23]
 586:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 626              		.loc 1 586 0
 627 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 628 0012 03F00703 		and	r3, r3, #7
 629 0016 0122     		movs	r2, #1
 630 0018 02FA03F3 		lsl	r3, r2, r3
 631 001c BB75     		strb	r3, [r7, #22]
 587:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
 588:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 632              		.loc 1 588 0
 633 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 634 0020 324A     		ldr	r2, .L43
 635 0022 D35C     		ldrb	r3, [r2, r3]
 636 0024 7B75     		strb	r3, [r7, #21]
 589:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 637              		.loc 1 589 0
 638 0026 5423     		movs	r3, #84
 639 0028 7B82     		strh	r3, [r7, #18]	@ movhi
 590:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 hysteresis = CapSense_CSD_hysteresis[widget];
 640              		.loc 1 590 0
 641 002a 0023     		movs	r3, #0
 642 002c 3B82     		strh	r3, [r7, #16]	@ movhi
 591:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounce = CapSense_CSD_debounce[widget];
 643              		.loc 1 591 0
 644 002e 0123     		movs	r3, #1
 645 0030 FB73     		strb	r3, [r7, #15]
 592:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 593:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     debounceIndex = CapSense_CSD_UNUSED_DEBOUNCE_COUNTER_INDEX;
 646              		.loc 1 593 0
 647 0032 0023     		movs	r3, #0
 648 0034 BB73     		strb	r3, [r7, #14]
 594:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[debounceIndex] = 1u;
 649              		.loc 1 594 0
 650 0036 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 651 0038 2D4A     		ldr	r2, .L43+4
 652 003a 0121     		movs	r1, #1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 23


 653 003c D154     		strb	r1, [r2, r3]
 595:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 596:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 597:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Was on */
 598:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if (0u != (CapSense_CSD_sensorOnMask[pos] & onMask))
 654              		.loc 1 598 0
 655 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 656 0040 2C4A     		ldr	r2, .L43+8
 657 0042 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 658 0044 BB7D     		ldrb	r3, [r7, #22]
 659 0046 1340     		ands	r3, r3, r2
 660 0048 DBB2     		uxtb	r3, r3
 661 004a 002B     		cmp	r3, #0
 662 004c 19D0     		beq	.L35
 599:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 600:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
 601:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 663              		.loc 1 601 0
 664 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 665 0050 294A     		ldr	r2, .L43+12
 666 0052 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 667 0056 1946     		mov	r1, r3
 668 0058 7A8A     		ldrh	r2, [r7, #18]
 669 005a 3B8A     		ldrh	r3, [r7, #16]
 670 005c D31A     		subs	r3, r2, r3
 671 005e 9942     		cmp	r1, r3
 672 0060 33DA     		bge	.L37
 602:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 603:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorOnMask[pos] &= (uint8)~onMask;
 673              		.loc 1 603 0
 674 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 675 0064 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 676 0066 2349     		ldr	r1, .L43+8
 677 0068 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 678 006a BA7D     		ldrb	r2, [r7, #22]
 679 006c D243     		mvns	r2, r2
 680 006e D2B2     		uxtb	r2, r2
 681 0070 0A40     		ands	r2, r2, r1
 682 0072 D1B2     		uxtb	r1, r2
 683 0074 1F4A     		ldr	r2, .L43+8
 684 0076 D154     		strb	r1, [r2, r3]
 604:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce; 
 685              		.loc 1 604 0
 686 0078 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 687 007a 1D49     		ldr	r1, .L43+4
 688 007c FA7B     		ldrb	r2, [r7, #15]
 689 007e CA54     		strb	r2, [r1, r3]
 690 0080 23E0     		b	.L37
 691              	.L35:
 605:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 606:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 607:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else    /* Was off */
 608:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 609:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
 610:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 692              		.loc 1 610 0
 693 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 24


 694 0084 1C4A     		ldr	r2, .L43+12
 695 0086 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 696 008a 1946     		mov	r1, r3
 697 008c 7A8A     		ldrh	r2, [r7, #18]
 698 008e 3B8A     		ldrh	r3, [r7, #16]
 699 0090 1344     		add	r3, r3, r2
 700 0092 9942     		cmp	r1, r3
 701 0094 15DD     		ble	.L38
 611:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 612:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
 613:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (CapSense_CSD_debounceCounter[debounceIndex] <= 1u)
 702              		.loc 1 613 0
 703 0096 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 704 0098 154A     		ldr	r2, .L43+4
 705 009a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 706 009c 012B     		cmp	r3, #1
 707 009e 08D8     		bhi	.L39
 614:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 615:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorOnMask[pos] |= onMask; 
 708              		.loc 1 615 0
 709 00a0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 710 00a2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 711 00a4 1349     		ldr	r1, .L43+8
 712 00a6 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 713 00a8 BA7D     		ldrb	r2, [r7, #22]
 714 00aa 0A43     		orrs	r2, r2, r1
 715 00ac D1B2     		uxtb	r1, r2
 716 00ae 114A     		ldr	r2, .L43+8
 717 00b0 D154     		strb	r1, [r2, r3]
 718              	.L39:
 616:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 617:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 719              		.loc 1 617 0
 720 00b2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 721 00b4 0E4A     		ldr	r2, .L43+4
 722 00b6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 723 00b8 013A     		subs	r2, r2, #1
 724 00ba D1B2     		uxtb	r1, r2
 725 00bc 0C4A     		ldr	r2, .L43+4
 726 00be D154     		strb	r1, [r2, r3]
 727 00c0 03E0     		b	.L37
 728              	.L38:
 618:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 619:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 620:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 621:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 622:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 729              		.loc 1 622 0
 730 00c2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 731 00c4 0A49     		ldr	r1, .L43+4
 732 00c6 FA7B     		ldrb	r2, [r7, #15]
 733 00c8 CA54     		strb	r2, [r1, r3]
 734              	.L37:
 623:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 624:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 625:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 626:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (((CapSense_CSD_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 25


 735              		.loc 1 626 0
 736 00ca FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 737 00cc 094A     		ldr	r2, .L43+8
 738 00ce D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 739 00d0 BB7D     		ldrb	r3, [r7, #22]
 740 00d2 1340     		ands	r3, r3, r2
 741 00d4 DBB2     		uxtb	r3, r3
 742 00d6 002B     		cmp	r3, #0
 743 00d8 01D0     		beq	.L40
 744              		.loc 1 626 0 is_stmt 0 discriminator 1
 745 00da 0123     		movs	r3, #1
 746 00dc 00E0     		b	.L41
 747              	.L40:
 748              		.loc 1 626 0 discriminator 2
 749 00de 0023     		movs	r3, #0
 750              	.L41:
 627:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 751              		.loc 1 627 0 is_stmt 1 discriminator 4
 752 00e0 1846     		mov	r0, r3
 753 00e2 1C37     		adds	r7, r7, #28
 754              		.cfi_def_cfa_offset 4
 755 00e4 BD46     		mov	sp, r7
 756              		.cfi_def_cfa_register 13
 757              		@ sp needed
 758 00e6 80BC     		pop	{r7}
 759              		.cfi_restore 7
 760              		.cfi_def_cfa_offset 0
 761 00e8 7047     		bx	lr
 762              	.L44:
 763 00ea 00BF     		.align	2
 764              	.L43:
 765 00ec 00000000 		.word	CapSense_CSD_widgetNumber
 766 00f0 00000000 		.word	CapSense_CSD_debounceCounter
 767 00f4 00000000 		.word	CapSense_CSD_sensorOnMask
 768 00f8 00000000 		.word	CapSense_CSD_sensorSignal
 769              		.cfi_endproc
 770              	.LFE6:
 771              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 772              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 773              		.align	2
 774              		.global	CapSense_CSD_CheckIsWidgetActive
 775              		.thumb
 776              		.thumb_func
 777              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 778              	CapSense_CSD_CheckIsWidgetActive:
 779              	.LFB7:
 628:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 629:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 630:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 631:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
 632:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 633:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 634:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 635:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Use function CapSense_CSD_CheckIsSensorActive() to update 
 636:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] for all sensors within the widget.
 637:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 638:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active.
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 26


 639:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 640:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  col and row to return widget active status.
 641:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 642:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 643:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 644:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 645:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 646:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 647:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 648:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 649:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 650:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 651:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 652:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 653:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsWidgetActive(uint8 widget)
 654:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 655:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 780              		.loc 1 655 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 16
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784 0000 80B5     		push	{r7, lr}
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 7, -8
 787              		.cfi_offset 14, -4
 788 0002 84B0     		sub	sp, sp, #16
 789              		.cfi_def_cfa_offset 24
 790 0004 00AF     		add	r7, sp, #0
 791              		.cfi_def_cfa_register 7
 792 0006 0346     		mov	r3, r0
 793 0008 FB71     		strb	r3, [r7, #7]
 656:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 794              		.loc 1 656 0
 795 000a 0023     		movs	r3, #0
 796 000c FB73     		strb	r3, [r7, #15]
 657:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 797              		.loc 1 657 0
 798 000e 0522     		movs	r2, #5
 799 0010 FB7B     		ldrb	r3, [r7, #15]
 800 0012 1344     		add	r3, r3, r2
 801 0014 7B73     		strb	r3, [r7, #13]
 658:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 802              		.loc 1 658 0
 803 0016 0023     		movs	r3, #0
 804 0018 BB73     		strb	r3, [r7, #14]
 805              	.L47:
 659:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 660:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Check all sensors of the widget */
 661:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 662:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 663:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive(rawIndex) != 0u)
 806              		.loc 1 663 0
 807 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 808 001c 1846     		mov	r0, r3
 809 001e FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 810 0022 0346     		mov	r3, r0
 811 0024 002B     		cmp	r3, #0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 27


 812 0026 01D0     		beq	.L46
 664:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 665:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_1_IS_ACTIVE;
 813              		.loc 1 665 0
 814 0028 0123     		movs	r3, #1
 815 002a BB73     		strb	r3, [r7, #14]
 816              	.L46:
 666:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 667:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 817              		.loc 1 667 0
 818 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 819 002e 0133     		adds	r3, r3, #1
 820 0030 FB73     		strb	r3, [r7, #15]
 668:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 669:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 821              		.loc 1 669 0
 822 0032 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 823 0034 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 824 0036 9A42     		cmp	r2, r3
 825 0038 EFD3     		bcc	.L47
 670:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 671:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 672:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 673:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 826              		.loc 1 673 0
 827 003a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 674:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 828              		.loc 1 674 0
 829 003c 1846     		mov	r0, r3
 830 003e 1037     		adds	r7, r7, #16
 831              		.cfi_def_cfa_offset 8
 832 0040 BD46     		mov	sp, r7
 833              		.cfi_def_cfa_register 13
 834              		@ sp needed
 835 0042 80BD     		pop	{r7, pc}
 836              		.cfi_endproc
 837              	.LFE7:
 838              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 839              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 840              		.align	2
 841              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 842              		.thumb
 843              		.thumb_func
 844              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 845              	CapSense_CSD_CheckIsAnyWidgetActive:
 846              	.LFB8:
 675:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 676:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 677:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 678:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
 679:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 680:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 681:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 682:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares all sensors of the CapSense_CSD_signal[] array to their finger 
 683:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so 
 684:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_SensorOnMask[] array is up to date after calling this 
 685:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  function.
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 28


 686:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 687:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 688:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 689:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 690:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 691:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 692:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 693:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 694:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 695:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 696:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 697:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsAnyWidgetActive(void)
 698:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 699:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 847              		.loc 1 699 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 8
 850              		@ frame_needed = 1, uses_anonymous_args = 0
 851 0000 80B5     		push	{r7, lr}
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 7, -8
 854              		.cfi_offset 14, -4
 855 0002 82B0     		sub	sp, sp, #8
 856              		.cfi_def_cfa_offset 16
 857 0004 00AF     		add	r7, sp, #0
 858              		.cfi_def_cfa_register 7
 700:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 701:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 859              		.loc 1 701 0
 860 0006 0023     		movs	r3, #0
 861 0008 BB71     		strb	r3, [r7, #6]
 702:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 703:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 862              		.loc 1 703 0
 863 000a 0023     		movs	r3, #0
 864 000c FB71     		strb	r3, [r7, #7]
 865 000e 0BE0     		b	.L50
 866              	.L52:
 704:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 705:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 867              		.loc 1 705 0
 868 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 869 0012 1846     		mov	r0, r3
 870 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 871 0018 0346     		mov	r3, r0
 872 001a 002B     		cmp	r3, #0
 873 001c 01D0     		beq	.L51
 706:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 707:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 874              		.loc 1 707 0
 875 001e 0123     		movs	r3, #1
 876 0020 BB71     		strb	r3, [r7, #6]
 877              	.L51:
 703:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 878              		.loc 1 703 0 discriminator 2
 879 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 880 0024 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 29


 881 0026 FB71     		strb	r3, [r7, #7]
 882              	.L50:
 703:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 883              		.loc 1 703 0 is_stmt 0 discriminator 1
 884 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 885 002a 002B     		cmp	r3, #0
 886 002c F0D0     		beq	.L52
 708:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 709:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 710:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 711:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 712:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 887              		.loc 1 712 0 is_stmt 1
 888 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 713:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 889              		.loc 1 713 0
 890 0030 1846     		mov	r0, r3
 891 0032 0837     		adds	r7, r7, #8
 892              		.cfi_def_cfa_offset 8
 893 0034 BD46     		mov	sp, r7
 894              		.cfi_def_cfa_register 13
 895              		@ sp needed
 896 0036 80BD     		pop	{r7, pc}
 897              		.cfi_endproc
 898              	.LFE8:
 899              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 900              		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 901              		.align	2
 902              		.global	CapSense_CSD_EnableWidget
 903              		.thumb
 904              		.thumb_func
 905              		.type	CapSense_CSD_EnableWidget, %function
 906              	CapSense_CSD_EnableWidget:
 907              	.LFB9:
 714:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 715:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 716:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 717:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
 718:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 719:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 720:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 721:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 722:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 723:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 724:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 725:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 726:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 727:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 728:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 729:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 730:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 731:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 732:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 733:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 734:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 735:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 736:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 30


 737:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 738:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 739:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 740:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 741:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 742:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint8 widget)
 744:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    
 745:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 908              		.loc 1 745 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 16
 911              		@ frame_needed = 1, uses_anonymous_args = 0
 912              		@ link register save eliminated.
 913 0000 80B4     		push	{r7}
 914              		.cfi_def_cfa_offset 4
 915              		.cfi_offset 7, -4
 916 0002 85B0     		sub	sp, sp, #20
 917              		.cfi_def_cfa_offset 24
 918 0004 00AF     		add	r7, sp, #0
 919              		.cfi_def_cfa_register 7
 920 0006 0346     		mov	r3, r0
 921 0008 FB71     		strb	r3, [r7, #7]
 746:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 747:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 748:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 922              		.loc 1 748 0
 923 000a 0023     		movs	r3, #0
 924 000c FB73     		strb	r3, [r7, #15]
 749:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 925              		.loc 1 749 0
 926 000e 0522     		movs	r2, #5
 927 0010 FB7B     		ldrb	r3, [r7, #15]
 928 0012 1344     		add	r3, r3, r2
 929 0014 BB73     		strb	r3, [r7, #14]
 930              	.L55:
 750:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 751:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Enable all sensors of the widget */
 752:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 753:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 754:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 931              		.loc 1 754 0 discriminator 1
 932 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 933 0018 DB08     		lsrs	r3, r3, #3
 934 001a 7B73     		strb	r3, [r7, #13]
 755:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 935              		.loc 1 755 0 discriminator 1
 936 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 937 001e 03F00703 		and	r3, r3, #7
 938 0022 0122     		movs	r2, #1
 939 0024 02FA03F3 		lsl	r3, r2, r3
 940 0028 3B73     		strb	r3, [r7, #12]
 756:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 757:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] |= enMask;
 941              		.loc 1 757 0 discriminator 1
 942 002a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 943 002c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 31


 944 002e 0949     		ldr	r1, .L56
 945 0030 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 946 0032 3A7B     		ldrb	r2, [r7, #12]
 947 0034 0A43     		orrs	r2, r2, r1
 948 0036 D1B2     		uxtb	r1, r2
 949 0038 064A     		ldr	r2, .L56
 950 003a D154     		strb	r1, [r2, r3]
 758:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 951              		.loc 1 758 0 discriminator 1
 952 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 953 003e 0133     		adds	r3, r3, #1
 954 0040 FB73     		strb	r3, [r7, #15]
 759:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 760:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 955              		.loc 1 760 0 discriminator 1
 956 0042 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 957 0044 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 958 0046 9A42     		cmp	r2, r3
 959 0048 E5D3     		bcc	.L55
 761:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 762:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 763:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 960              		.loc 1 763 0
 961 004a 00BF     		nop
 962 004c 1437     		adds	r7, r7, #20
 963              		.cfi_def_cfa_offset 4
 964 004e BD46     		mov	sp, r7
 965              		.cfi_def_cfa_register 13
 966              		@ sp needed
 967 0050 80BC     		pop	{r7}
 968              		.cfi_restore 7
 969              		.cfi_def_cfa_offset 0
 970 0052 7047     		bx	lr
 971              	.L57:
 972              		.align	2
 973              	.L56:
 974 0054 00000000 		.word	CapSense_CSD_sensorEnableMask
 975              		.cfi_endproc
 976              	.LFE9:
 977              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 978              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 979              		.align	2
 980              		.global	CapSense_CSD_DisableWidget
 981              		.thumb
 982              		.thumb_func
 983              		.type	CapSense_CSD_DisableWidget, %function
 984              	CapSense_CSD_DisableWidget:
 985              	.LFB10:
 764:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 765:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 766:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 767:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
 768:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 769:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 770:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 771:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 772:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 32


 773:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 774:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 775:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 776:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 777:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 778:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 779:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 780:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 781:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 782:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 783:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 784:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 785:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 786:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 787:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 788:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 789:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 790:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 791:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 792:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 793:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint8 widget)
 794:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
 795:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 986              		.loc 1 795 0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 16
 989              		@ frame_needed = 1, uses_anonymous_args = 0
 990              		@ link register save eliminated.
 991 0000 80B4     		push	{r7}
 992              		.cfi_def_cfa_offset 4
 993              		.cfi_offset 7, -4
 994 0002 85B0     		sub	sp, sp, #20
 995              		.cfi_def_cfa_offset 24
 996 0004 00AF     		add	r7, sp, #0
 997              		.cfi_def_cfa_register 7
 998 0006 0346     		mov	r3, r0
 999 0008 FB71     		strb	r3, [r7, #7]
 796:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 797:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 798:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1000              		.loc 1 798 0
 1001 000a 0023     		movs	r3, #0
 1002 000c FB73     		strb	r3, [r7, #15]
 799:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1003              		.loc 1 799 0
 1004 000e 0522     		movs	r2, #5
 1005 0010 FB7B     		ldrb	r3, [r7, #15]
 1006 0012 1344     		add	r3, r3, r2
 1007 0014 BB73     		strb	r3, [r7, #14]
 1008              	.L59:
 800:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****    
 801:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Disable all sensors of the widget */
 802:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 803:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 804:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 1009              		.loc 1 804 0 discriminator 1
 1010 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 33


 1011 0018 DB08     		lsrs	r3, r3, #3
 1012 001a 7B73     		strb	r3, [r7, #13]
 805:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1013              		.loc 1 805 0 discriminator 1
 1014 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1015 001e 03F00703 		and	r3, r3, #7
 1016 0022 0122     		movs	r2, #1
 1017 0024 02FA03F3 		lsl	r3, r2, r3
 1018 0028 3B73     		strb	r3, [r7, #12]
 806:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 807:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] &= (uint8)~enMask;
 1019              		.loc 1 807 0 discriminator 1
 1020 002a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1021 002c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1022 002e 0A49     		ldr	r1, .L60
 1023 0030 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1024 0032 3A7B     		ldrb	r2, [r7, #12]
 1025 0034 D243     		mvns	r2, r2
 1026 0036 D2B2     		uxtb	r2, r2
 1027 0038 0A40     		ands	r2, r2, r1
 1028 003a D1B2     		uxtb	r1, r2
 1029 003c 064A     		ldr	r2, .L60
 1030 003e D154     		strb	r1, [r2, r3]
 808:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 1031              		.loc 1 808 0 discriminator 1
 1032 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1033 0042 0133     		adds	r3, r3, #1
 1034 0044 FB73     		strb	r3, [r7, #15]
 809:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 810:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 1035              		.loc 1 810 0 discriminator 1
 1036 0046 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1037 0048 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1038 004a 9A42     		cmp	r2, r3
 1039 004c E3D3     		bcc	.L59
 811:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 812:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 813:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 1040              		.loc 1 813 0
 1041 004e 00BF     		nop
 1042 0050 1437     		adds	r7, r7, #20
 1043              		.cfi_def_cfa_offset 4
 1044 0052 BD46     		mov	sp, r7
 1045              		.cfi_def_cfa_register 13
 1046              		@ sp needed
 1047 0054 80BC     		pop	{r7}
 1048              		.cfi_restore 7
 1049              		.cfi_def_cfa_offset 0
 1050 0056 7047     		bx	lr
 1051              	.L61:
 1052              		.align	2
 1053              	.L60:
 1054 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
 1055              		.cfi_endproc
 1056              	.LFE10:
 1057              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1058              		.section	.text.CapSense_CSD_FindMaximum,"ax",%progbits
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 34


 1059              		.align	2
 1060              		.global	CapSense_CSD_FindMaximum
 1061              		.thumb
 1062              		.thumb_func
 1063              		.type	CapSense_CSD_FindMaximum, %function
 1064              	CapSense_CSD_FindMaximum:
 1065              	.LFB11:
 814:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_COUNT)
 815:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 816:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
 817:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 818:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 819:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 820:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 821:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_SensorSignal[] within defined cenrtoid and 
 822:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 823:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  ignored.
 824:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 825:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 826:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 827:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 828:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 829:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_CSD_sensorSignal[] array.
 830:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
 831:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 832:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
 833:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 834:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
 835:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 836:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 837:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 838:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 839:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
 840:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uin
 841:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 842:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else 
 843:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
 844:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 845:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 846:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1066              		.loc 1 846 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 16
 1069              		@ frame_needed = 1, uses_anonymous_args = 0
 1070              		@ link register save eliminated.
 1071 0000 80B4     		push	{r7}
 1072              		.cfi_def_cfa_offset 4
 1073              		.cfi_offset 7, -4
 1074 0002 85B0     		sub	sp, sp, #20
 1075              		.cfi_def_cfa_offset 24
 1076 0004 00AF     		add	r7, sp, #0
 1077              		.cfi_def_cfa_register 7
 1078 0006 0346     		mov	r3, r0
 1079 0008 FB71     		strb	r3, [r7, #7]
 1080 000a 0B46     		mov	r3, r1
 1081 000c BB71     		strb	r3, [r7, #6]
 1082 000e 1346     		mov	r3, r2	@ movhi
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 35


 1083 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 847:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 i;
 848:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 849:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
 850:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* No centroid at the Start */
 851:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
 852:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 853:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The biggset centroid is zero */
 854:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 855:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 856:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 857:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum = 0xFFu;
 1084              		.loc 1 857 0
 1085 0012 FF23     		movs	r3, #255
 1086 0014 BB73     		strb	r3, [r7, #14]
 858:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 temp = 0u;
 1087              		.loc 1 858 0
 1088 0016 0023     		movs	r3, #0
 1089 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 859:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset]; 
 1090              		.loc 1 859 0
 1091 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1092 001c 5B00     		lsls	r3, r3, #1
 1093 001e 154A     		ldr	r2, .L67
 1094 0020 1344     		add	r3, r3, r2
 1095 0022 BB60     		str	r3, [r7, #8]
 860:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 861:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 862:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
 863:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 864:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Initialize */
 865:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 i = 0u;
 866:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
 867:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
 868:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 count <<= 1u;
 869:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 while(1u)
 870:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
 871:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 872:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 873:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 874:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 875:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
 876:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
 877:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 878:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 879:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         else
 880:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 881:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 882:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 883:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 884:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 885:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {          
 886:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
 887:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 888:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* We are in the end of current */
 889:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 890:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 36


 891:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 892:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 893:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 894:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             
 895:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
 896:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 897:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 898:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 899:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 900:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     i++; 
 901:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
 902:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(i == count)
 903:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 904:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         break;
 905:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }            
 906:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 907:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 908:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 909:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                        We are in the end of current */
 910:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 911:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 912:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 913:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 914:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 915:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 916:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
 917:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 918:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Without diplexing */ 
 919:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
 920:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 921:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
 922:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 923:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Check centroid size */
 924:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 925:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 926:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #else                    
 927:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 928:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
 929:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 930:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 931:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 932:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 933:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
 934:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 935:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = i;
 936:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 937:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             else
 938:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 939:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
 940:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                    
 941:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)                    
 942:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];                    
 943:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
 944:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Looking for the grater element within centroid */
 945:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 946:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 947:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 37


 948:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 949:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 maximum = i;
 950:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
 951:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 952:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 953:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 954:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 } 
 955:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 956:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 1096              		.loc 1 956 0
 1097 0024 0023     		movs	r3, #0
 1098 0026 FB73     		strb	r3, [r7, #15]
 1099 0028 1AE0     		b	.L63
 1100              	.L65:
 957:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 958:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Looking for the grater element within centroid */
 959:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1101              		.loc 1 959 0
 1102 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1103 002c 5B00     		lsls	r3, r3, #1
 1104 002e BA68     		ldr	r2, [r7, #8]
 1105 0030 1344     		add	r3, r3, r2
 1106 0032 1B88     		ldrh	r3, [r3]
 1107 0034 BA88     		ldrh	r2, [r7, #4]
 1108 0036 9A42     		cmp	r2, r3
 1109 0038 0FD2     		bcs	.L64
 960:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 961:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
 1110              		.loc 1 961 0
 1111 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1112 003c 5B00     		lsls	r3, r3, #1
 1113 003e BA68     		ldr	r2, [r7, #8]
 1114 0040 1344     		add	r3, r3, r2
 1115 0042 1B88     		ldrh	r3, [r3]
 1116 0044 BA89     		ldrh	r2, [r7, #12]
 1117 0046 9A42     		cmp	r2, r3
 1118 0048 07D2     		bcs	.L64
 962:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 963:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         maximum = i;
 1119              		.loc 1 963 0
 1120 004a FB7B     		ldrb	r3, [r7, #15]
 1121 004c BB73     		strb	r3, [r7, #14]
 964:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 1122              		.loc 1 964 0
 1123 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1124 0050 5B00     		lsls	r3, r3, #1
 1125 0052 BA68     		ldr	r2, [r7, #8]
 1126 0054 1344     		add	r3, r3, r2
 1127 0056 1B88     		ldrh	r3, [r3]	@ movhi
 1128 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 1129              	.L64:
 956:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 1130              		.loc 1 956 0 discriminator 2
 1131 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1132 005c 0133     		adds	r3, r3, #1
 1133 005e FB73     		strb	r3, [r7, #15]
 1134              	.L63:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 38


 956:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 1135              		.loc 1 956 0 is_stmt 0 discriminator 1
 1136 0060 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1137 0062 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1138 0064 9A42     		cmp	r2, r3
 1139 0066 E0D3     		bcc	.L65
 965:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 966:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 967:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 968:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 969:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (maximum);
 1140              		.loc 1 969 0 is_stmt 1
 1141 0068 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 970:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 1142              		.loc 1 970 0
 1143 006a 1846     		mov	r0, r3
 1144 006c 1437     		adds	r7, r7, #20
 1145              		.cfi_def_cfa_offset 4
 1146 006e BD46     		mov	sp, r7
 1147              		.cfi_def_cfa_register 13
 1148              		@ sp needed
 1149 0070 80BC     		pop	{r7}
 1150              		.cfi_restore 7
 1151              		.cfi_def_cfa_offset 0
 1152 0072 7047     		bx	lr
 1153              	.L68:
 1154              		.align	2
 1155              	.L67:
 1156 0074 00000000 		.word	CapSense_CSD_sensorSignal
 1157              		.cfi_endproc
 1158              	.LFE11:
 1159              		.size	CapSense_CSD_FindMaximum, .-CapSense_CSD_FindMaximum
 1160              		.section	.text.CapSense_CSD_CalcCentroid,"ax",%progbits
 1161              		.align	2
 1162              		.global	CapSense_CSD_CalcCentroid
 1163              		.thumb
 1164              		.thumb_func
 1165              		.type	CapSense_CSD_CalcCentroid, %function
 1166              	CapSense_CSD_CalcCentroid:
 1167              	.LFB12:
 971:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 972:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 973:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 974:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
 975:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 976:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 977:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 978:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 979:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution.
 980:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 981:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 982:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  type:  widget type.
 983:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
 984:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 985:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_CSD_SensorSignal[] array.
 986:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
 987:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 39


 988:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  API resolution.
 989:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 990:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 991:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
 992:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the slider.
 993:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 994:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 995:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
 996:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
 997:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 998:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 999:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset, 
1000:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1001:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                    
1002:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1168              		.loc 1 1002 0
 1169              		.cfi_startproc
 1170              		@ args = 4, pretend = 0, frame = 32
 1171              		@ frame_needed = 1, uses_anonymous_args = 0
 1172              		@ link register save eliminated.
 1173 0000 90B4     		push	{r4, r7}
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 4, -8
 1176              		.cfi_offset 7, -4
 1177 0002 88B0     		sub	sp, sp, #32
 1178              		.cfi_def_cfa_offset 40
 1179 0004 00AF     		add	r7, sp, #0
 1180              		.cfi_def_cfa_register 7
 1181 0006 0446     		mov	r4, r0
 1182 0008 0846     		mov	r0, r1
 1183 000a 1146     		mov	r1, r2
 1184 000c 1A46     		mov	r2, r3
 1185 000e 2346     		mov	r3, r4
 1186 0010 FB71     		strb	r3, [r7, #7]
 1187 0012 0346     		mov	r3, r0
 1188 0014 BB71     		strb	r3, [r7, #6]
 1189 0016 0B46     		mov	r3, r1
 1190 0018 7B71     		strb	r3, [r7, #5]
 1191 001a 1346     		mov	r3, r2	@ movhi
 1192 001c 7B80     		strh	r3, [r7, #2]	@ movhi
1003:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_COUNT
1004:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posPrev = 0u;
 1193              		.loc 1 1004 0
 1194 001e 0023     		movs	r3, #0
 1195 0020 FB77     		strb	r3, [r7, #31]
1005:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posNext = 0u;
 1196              		.loc 1 1005 0
 1197 0022 0023     		movs	r3, #0
 1198 0024 BB77     		strb	r3, [r7, #30]
1006:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1007:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                
1008:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)                
1009:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 pos;
1010:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1011:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1012:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Helps while centroid calulation */
1013:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         static uint16 CapSense_CSD_centroid[3u];
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 40


1014:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1015:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 position;
1016:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 numerator;
1017:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         int32 denominator;
1018:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 1199              		.loc 1 1018 0
 1200 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1201 0028 5B00     		lsls	r3, r3, #1
 1202 002a 494A     		ldr	r2, .L79
 1203 002c 1344     		add	r3, r3, r2
 1204 002e BB61     		str	r3, [r7, #24]
1019:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1020:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1021:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1022:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1023:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1024:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1025:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1026:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1027:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1028:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  
1029:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1030:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1031:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1032:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1033:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1034:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1035:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1036:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1037:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1038:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1039:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1040:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1041:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1042:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1043:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1044:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1045:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1046:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1047:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1048:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1049:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1050:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1051:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1052:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1053:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1054:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)           
1055:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1056:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1057:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1058:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1059:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1060:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u; 
1061:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1062:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1063:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1064:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 41


1065:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1066:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1067:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1068:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }                    
1069:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1070:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1071:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1072:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1073:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1074:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     count <<= 1u;                    
1075:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else                    
1076:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1077:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
 1205              		.loc 1 1077 0
 1206 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1207 0032 002B     		cmp	r3, #0
 1208 0034 02D0     		beq	.L70
1078:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1079:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
 1209              		.loc 1 1079 0
 1210 0036 FB79     		ldrb	r3, [r7, #7]
 1211 0038 013B     		subs	r3, r3, #1
 1212 003a FB77     		strb	r3, [r7, #31]
 1213              	.L70:
1080:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1081:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u; 
 1214              		.loc 1 1081 0
 1215 003c FB79     		ldrb	r3, [r7, #7]
 1216 003e 0133     		adds	r3, r3, #1
 1217 0040 BB77     		strb	r3, [r7, #30]
1082:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1083:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1084:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1085:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1086:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1087:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else
1088:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
 1218              		.loc 1 1088 0
 1219 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1220 0044 5B00     		lsls	r3, r3, #1
 1221 0046 BA69     		ldr	r2, [r7, #24]
 1222 0048 1344     		add	r3, r3, r2
 1223 004a 1A88     		ldrh	r2, [r3]
 1224 004c 414B     		ldr	r3, .L79+4
 1225 004e 5A80     		strh	r2, [r3, #2]	@ movhi
1089:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1090:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1091:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1092:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1226              		.loc 1 1092 0
 1227 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1228 0052 002B     		cmp	r3, #0
 1229 0054 0AD1     		bne	.L71
1093:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1094:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 1230              		.loc 1 1094 0
 1231 0056 3F4B     		ldr	r3, .L79+4
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 42


 1232 0058 0022     		movs	r2, #0
 1233 005a 1A80     		strh	r2, [r3]	@ movhi
1095:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 1234              		.loc 1 1095 0
 1235 005c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1236 005e 5B00     		lsls	r3, r3, #1
 1237 0060 BA69     		ldr	r2, [r7, #24]
 1238 0062 1344     		add	r3, r3, r2
 1239 0064 1A88     		ldrh	r2, [r3]
 1240 0066 3B4B     		ldr	r3, .L79+4
 1241 0068 9A80     		strh	r2, [r3, #4]	@ movhi
 1242 006a 1DE0     		b	.L72
 1243              	.L71:
1096:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1097:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1244              		.loc 1 1097 0
 1245 006c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1246 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1247 0070 013B     		subs	r3, r3, #1
 1248 0072 9A42     		cmp	r2, r3
 1249 0074 0AD1     		bne	.L73
1098:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1099:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 1250              		.loc 1 1099 0
 1251 0076 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1252 0078 5B00     		lsls	r3, r3, #1
 1253 007a BA69     		ldr	r2, [r7, #24]
 1254 007c 1344     		add	r3, r3, r2
 1255 007e 1A88     		ldrh	r2, [r3]
 1256 0080 344B     		ldr	r3, .L79+4
 1257 0082 1A80     		strh	r2, [r3]	@ movhi
1100:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 1258              		.loc 1 1100 0
 1259 0084 334B     		ldr	r3, .L79+4
 1260 0086 0022     		movs	r2, #0
 1261 0088 9A80     		strh	r2, [r3, #4]	@ movhi
 1262 008a 0DE0     		b	.L72
 1263              	.L73:
1101:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1102:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1103:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1104:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 1264              		.loc 1 1104 0
 1265 008c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1266 008e 5B00     		lsls	r3, r3, #1
 1267 0090 BA69     		ldr	r2, [r7, #24]
 1268 0092 1344     		add	r3, r3, r2
 1269 0094 1A88     		ldrh	r2, [r3]
 1270 0096 2F4B     		ldr	r3, .L79+4
 1271 0098 1A80     		strh	r2, [r3]	@ movhi
1105:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 1272              		.loc 1 1105 0
 1273 009a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1274 009c 5B00     		lsls	r3, r3, #1
 1275 009e BA69     		ldr	r2, [r7, #24]
 1276 00a0 1344     		add	r3, r3, r2
 1277 00a2 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 43


 1278 00a4 2B4B     		ldr	r3, .L79+4
 1279 00a6 9A80     		strh	r2, [r3, #4]	@ movhi
 1280              	.L72:
1106:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1107:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1108:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1109:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1110:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1111:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1112:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1113:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1114:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
 1281              		.loc 1 1114 0
 1282 00a8 2A4B     		ldr	r3, .L79+4
 1283 00aa 1B88     		ldrh	r3, [r3]
 1284 00ac 3A8D     		ldrh	r2, [r7, #40]
 1285 00ae 9A42     		cmp	r2, r3
 1286 00b0 07D2     		bcs	.L74
1115:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1116:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
 1287              		.loc 1 1116 0
 1288 00b2 284B     		ldr	r3, .L79+4
 1289 00b4 1A88     		ldrh	r2, [r3]
 1290 00b6 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 1291 00b8 D31A     		subs	r3, r2, r3
 1292 00ba 9AB2     		uxth	r2, r3
 1293 00bc 254B     		ldr	r3, .L79+4
 1294 00be 1A80     		strh	r2, [r3]	@ movhi
 1295 00c0 02E0     		b	.L75
 1296              	.L74:
1117:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1118:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1119:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1120:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 1297              		.loc 1 1120 0
 1298 00c2 244B     		ldr	r3, .L79+4
 1299 00c4 0022     		movs	r2, #0
 1300 00c6 1A80     		strh	r2, [r3]	@ movhi
 1301              	.L75:
1121:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1122:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1123:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1124:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
 1302              		.loc 1 1124 0
 1303 00c8 224B     		ldr	r3, .L79+4
 1304 00ca 5A88     		ldrh	r2, [r3, #2]
 1305 00cc 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 1306 00ce D31A     		subs	r3, r2, r3
 1307 00d0 9AB2     		uxth	r2, r3
 1308 00d2 204B     		ldr	r3, .L79+4
 1309 00d4 5A80     		strh	r2, [r3, #2]	@ movhi
1125:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1126:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1127:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
 1310              		.loc 1 1127 0
 1311 00d6 1F4B     		ldr	r3, .L79+4
 1312 00d8 9B88     		ldrh	r3, [r3, #4]
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 44


 1313 00da 3A8D     		ldrh	r2, [r7, #40]
 1314 00dc 9A42     		cmp	r2, r3
 1315 00de 07D2     		bcs	.L76
1128:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1129:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
 1316              		.loc 1 1129 0
 1317 00e0 1C4B     		ldr	r3, .L79+4
 1318 00e2 9A88     		ldrh	r2, [r3, #4]
 1319 00e4 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 1320 00e6 D31A     		subs	r3, r2, r3
 1321 00e8 9AB2     		uxth	r2, r3
 1322 00ea 1A4B     		ldr	r3, .L79+4
 1323 00ec 9A80     		strh	r2, [r3, #4]	@ movhi
 1324 00ee 02E0     		b	.L77
 1325              	.L76:
1130:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1131:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1132:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1133:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 1326              		.loc 1 1133 0
 1327 00f0 184B     		ldr	r3, .L79+4
 1328 00f2 0022     		movs	r2, #0
 1329 00f4 9A80     		strh	r2, [r3, #4]	@ movhi
 1330              	.L77:
1134:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1135:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1136:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1137:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1138:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
 1331              		.loc 1 1138 0
 1332 00f6 174B     		ldr	r3, .L79+4
 1333 00f8 9B88     		ldrh	r3, [r3, #4]
 1334 00fa 1A46     		mov	r2, r3
1139:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 1335              		.loc 1 1139 0
 1336 00fc 154B     		ldr	r3, .L79+4
 1337 00fe 1B88     		ldrh	r3, [r3]
1138:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 1338              		.loc 1 1138 0
 1339 0100 D31A     		subs	r3, r2, r3
 1340 0102 7B61     		str	r3, [r7, #20]
1140:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1141:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1142:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] + 
 1341              		.loc 1 1142 0
 1342 0104 134B     		ldr	r3, .L79+4
 1343 0106 1B88     		ldrh	r3, [r3]
 1344 0108 1A46     		mov	r2, r3
1143:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
 1345              		.loc 1 1143 0
 1346 010a 124B     		ldr	r3, .L79+4
 1347 010c 5B88     		ldrh	r3, [r3, #2]
1142:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
 1348              		.loc 1 1142 0
 1349 010e 1344     		add	r3, r3, r2
1144:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
 1350              		.loc 1 1144 0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 45


 1351 0110 104A     		ldr	r2, .L79+4
 1352 0112 9288     		ldrh	r2, [r2, #4]
1142:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
 1353              		.loc 1 1142 0
 1354 0114 1344     		add	r3, r3, r2
 1355 0116 3B61     		str	r3, [r7, #16]
1145:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1146:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1147:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1356              		.loc 1 1147 0
 1357 0118 7B69     		ldr	r3, [r7, #20]
 1358 011a 1B02     		lsls	r3, r3, #8
 1359 011c 1A46     		mov	r2, r3
 1360 011e 3B69     		ldr	r3, [r7, #16]
 1361 0120 92FBF3F3 		sdiv	r3, r2, r3
 1362 0124 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1363 0126 1202     		lsls	r2, r2, #8
 1364 0128 1344     		add	r3, r3, r2
 1365 012a 3B61     		str	r3, [r7, #16]
1148:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1149:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1150:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1151:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1152:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1153:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1154:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1155:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1156:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1157:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
 1366              		.loc 1 1157 0
 1367 012c B7F90230 		ldrsh	r3, [r7, #2]
 1368 0130 1A46     		mov	r2, r3
 1369 0132 3B69     		ldr	r3, [r7, #16]
 1370 0134 02FB03F3 		mul	r3, r2, r3
 1371 0138 3B61     		str	r3, [r7, #16]
1158:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1159:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Round the relust and put it to uint8 */
1160:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
 1372              		.loc 1 1160 0
 1373 013a 3B69     		ldr	r3, [r7, #16]
 1374 013c 03F5FE43 		add	r3, r3, #32512
 1375 0140 1B0C     		lsrs	r3, r3, #16
 1376 0142 FB73     		strb	r3, [r7, #15]
1161:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1162:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
 1377              		.loc 1 1162 0
 1378 0144 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1163:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }    
 1379              		.loc 1 1163 0
 1380 0146 1846     		mov	r0, r3
 1381 0148 2037     		adds	r7, r7, #32
 1382              		.cfi_def_cfa_offset 8
 1383 014a BD46     		mov	sp, r7
 1384              		.cfi_def_cfa_register 13
 1385              		@ sp needed
 1386 014c 90BC     		pop	{r4, r7}
 1387              		.cfi_restore 7
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 46


 1388              		.cfi_restore 4
 1389              		.cfi_def_cfa_offset 0
 1390 014e 7047     		bx	lr
 1391              	.L80:
 1392              		.align	2
 1393              	.L79:
 1394 0150 00000000 		.word	CapSense_CSD_sensorSignal
 1395 0154 04000000 		.word	CapSense_CSD_centroid.5258
 1396              		.cfi_endproc
 1397              	.LFE12:
 1398              		.size	CapSense_CSD_CalcCentroid, .-CapSense_CSD_CalcCentroid
 1399              		.section	.text.CapSense_CSD_GetCentroidPos,"ax",%progbits
 1400              		.align	2
 1401              		.global	CapSense_CSD_GetCentroidPos
 1402              		.thumb
 1403              		.thumb_func
 1404              		.type	CapSense_CSD_GetCentroidPos, %function
 1405              	CapSense_CSD_GetCentroidPos:
 1406              	.LFB13:
1164:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_COUNT) */
1165:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1166:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1167:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1168:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1169:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1170:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1171:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1172:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1173:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1174:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1175:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1176:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result if enabled.
1177:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1178:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1179:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1180:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1181:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_LS__"widget_name"            5
1182:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1183:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1184:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the linear slider.
1185:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1186:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1187:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1188:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1189:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1190:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1191:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1192:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1193:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1194:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Note:
1195:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1196:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1197:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1198:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1199:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1200:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1201:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 47


1202:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1203:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1204:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint8 widget) 
1205:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1407              		.loc 1 1205 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 16
 1410              		@ frame_needed = 1, uses_anonymous_args = 0
 1411 0000 90B5     		push	{r4, r7, lr}
 1412              		.cfi_def_cfa_offset 12
 1413              		.cfi_offset 4, -12
 1414              		.cfi_offset 7, -8
 1415              		.cfi_offset 14, -4
 1416 0002 87B0     		sub	sp, sp, #28
 1417              		.cfi_def_cfa_offset 40
 1418 0004 02AF     		add	r7, sp, #8
 1419              		.cfi_def_cfa 7, 32
 1420 0006 0346     		mov	r3, r0
 1421 0008 FB71     		strb	r3, [r7, #7]
1206:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1207:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             const uint8 CYCODE *diplex;
1208:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1209:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1210:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1211:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1212:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1213:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];  
1214:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1215:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1216:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1217:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1218:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1219:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1220:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1221:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1222:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1223:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum;
1224:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 position;
1225:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 1422              		.loc 1 1225 0
 1423 000a 0023     		movs	r3, #0
 1424 000c 7B73     		strb	r3, [r7, #13]
1226:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 1425              		.loc 1 1226 0
 1426 000e 0523     		movs	r3, #5
 1427 0010 3B73     		strb	r3, [r7, #12]
1227:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1228:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1229:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1230:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1231:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1232:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1233:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1234:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1235:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1236:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1237:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 48


1238:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1239:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1240:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */      
1241:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1242:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget],
1243:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1244:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget])
 1428              		.loc 1 1244 0
 1429 0012 5422     		movs	r2, #84
 1430 0014 397B     		ldrb	r1, [r7, #12]	@ zero_extendqisi2
 1431 0016 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1432 0018 1846     		mov	r0, r3
 1433 001a FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 1434 001e 0346     		mov	r3, r0
 1435 0020 FB72     		strb	r3, [r7, #11]
1245:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1246:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1247:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
 1436              		.loc 1 1247 0
 1437 0022 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1438 0024 FF2B     		cmp	r3, #255
 1439 0026 0CD0     		beq	.L82
1248:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1249:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1250:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
 1440              		.loc 1 1250 0
 1441 0028 4FF4C854 		mov	r4, #6400
 1442 002c 2A23     		movs	r3, #42
 1443 002e 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1444 0030 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 1445 0032 F87A     		ldrb	r0, [r7, #11]	@ zero_extendqisi2
 1446 0034 0093     		str	r3, [sp]
 1447 0036 2346     		mov	r3, r4
 1448 0038 FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 1449 003c 0346     		mov	r3, r0
 1450 003e FB81     		strh	r3, [r7, #14]	@ movhi
 1451 0040 02E0     		b	.L83
 1452              	.L82:
1251:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1253:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1254:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1256:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1257:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Caluclate position to store filters data */
1258:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1259:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1260:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1261:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1262:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Init filters */
1263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1264:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1265:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1266:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1267:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1268:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1269:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 49


1270:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1271:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1272:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1273:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1274:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1275:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1276:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1277:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1278:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1279:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1280:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1281:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1282:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1283:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1284:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1285:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1286:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1287:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1288:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1289:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1290:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1291:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1292:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1293:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1294:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1295:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1296:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1297:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1298:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1299:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1300:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1301:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) 
1302:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1304:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1305:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1306:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1307:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1308:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1309:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1310:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1311:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1312:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1313:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1314:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1315:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER)) 
1316:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1317:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1318:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1319:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1320:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1321:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1322:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1323:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1324:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1325:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1326:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 50


1327:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1328:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1329:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1330:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1331:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                                
1332:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1333:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1334:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1335:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1336:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1337:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1338:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1339:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1340:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1341:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1342:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1343:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1344:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1345:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1346:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1347:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1348:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1349:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1350:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1351:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1352:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1353:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The maximum wasn't found */
1354:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 1453              		.loc 1 1354 0
 1454 0042 4FF6FF73 		movw	r3, #65535
 1455 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 1456              	.L83:
1355:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1356:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1357:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1358:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1359:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1360:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1361:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1362:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1363:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1364:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1365:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1366:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
 1457              		.loc 1 1366 0
 1458 0048 FB89     		ldrh	r3, [r7, #14]
1367:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 1459              		.loc 1 1367 0
 1460 004a 1846     		mov	r0, r3
 1461 004c 1437     		adds	r7, r7, #20
 1462              		.cfi_def_cfa_offset 12
 1463 004e BD46     		mov	sp, r7
 1464              		.cfi_def_cfa_register 13
 1465              		@ sp needed
 1466 0050 90BD     		pop	{r4, r7, pc}
 1467              		.cfi_endproc
 1468              	.LFE13:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 51


 1469              		.size	CapSense_CSD_GetCentroidPos, .-CapSense_CSD_GetCentroidPos
 1470 0052 00BF     		.bss
 1471 0001 000000   		.align	2
 1472              	CapSense_CSD_centroid.5258:
 1473 0004 00000000 		.space	6
 1473      0000
 1474              		.text
 1475              	.Letext0:
 1476              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1477              		.file 3 "Generated_Source\\PSoC5\\CapSense_CSD.h"
 1478              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSD_CSHL.h"
 1479              		.section	.debug_info,"",%progbits
 1480              	.Ldebug_info0:
 1481 0000 6E070000 		.4byte	0x76e
 1482 0004 0400     		.2byte	0x4
 1483 0006 00000000 		.4byte	.Ldebug_abbrev0
 1484 000a 04       		.byte	0x4
 1485 000b 01       		.uleb128 0x1
 1486 000c 9A000000 		.4byte	.LASF76
 1487 0010 0C       		.byte	0xc
 1488 0011 00000000 		.4byte	.LASF77
 1489 0015 F6040000 		.4byte	.LASF78
 1490 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1491 001d 00000000 		.4byte	0
 1492 0021 00000000 		.4byte	.Ldebug_line0
 1493 0025 02       		.uleb128 0x2
 1494 0026 01       		.byte	0x1
 1495 0027 06       		.byte	0x6
 1496 0028 55010000 		.4byte	.LASF0
 1497 002c 02       		.uleb128 0x2
 1498 002d 01       		.byte	0x1
 1499 002e 08       		.byte	0x8
 1500 002f F9030000 		.4byte	.LASF1
 1501 0033 02       		.uleb128 0x2
 1502 0034 02       		.byte	0x2
 1503 0035 05       		.byte	0x5
 1504 0036 16040000 		.4byte	.LASF2
 1505 003a 02       		.uleb128 0x2
 1506 003b 02       		.byte	0x2
 1507 003c 07       		.byte	0x7
 1508 003d BA020000 		.4byte	.LASF3
 1509 0041 02       		.uleb128 0x2
 1510 0042 04       		.byte	0x4
 1511 0043 05       		.byte	0x5
 1512 0044 A7010000 		.4byte	.LASF4
 1513 0048 02       		.uleb128 0x2
 1514 0049 04       		.byte	0x4
 1515 004a 07       		.byte	0x7
 1516 004b 78020000 		.4byte	.LASF5
 1517 004f 02       		.uleb128 0x2
 1518 0050 08       		.byte	0x8
 1519 0051 05       		.byte	0x5
 1520 0052 47010000 		.4byte	.LASF6
 1521 0056 02       		.uleb128 0x2
 1522 0057 08       		.byte	0x8
 1523 0058 07       		.byte	0x7
 1524 0059 30010000 		.4byte	.LASF7
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 52


 1525 005d 03       		.uleb128 0x3
 1526 005e 04       		.byte	0x4
 1527 005f 05       		.byte	0x5
 1528 0060 696E7400 		.ascii	"int\000"
 1529 0064 02       		.uleb128 0x2
 1530 0065 04       		.byte	0x4
 1531 0066 07       		.byte	0x7
 1532 0067 62020000 		.4byte	.LASF8
 1533 006b 04       		.uleb128 0x4
 1534 006c E0010000 		.4byte	.LASF9
 1535 0070 02       		.byte	0x2
 1536 0071 E401     		.2byte	0x1e4
 1537 0073 2C000000 		.4byte	0x2c
 1538 0077 04       		.uleb128 0x4
 1539 0078 4D000000 		.4byte	.LASF10
 1540 007c 02       		.byte	0x2
 1541 007d E501     		.2byte	0x1e5
 1542 007f 3A000000 		.4byte	0x3a
 1543 0083 04       		.uleb128 0x4
 1544 0084 ED010000 		.4byte	.LASF11
 1545 0088 02       		.byte	0x2
 1546 0089 E601     		.2byte	0x1e6
 1547 008b 48000000 		.4byte	0x48
 1548 008f 04       		.uleb128 0x4
 1549 0090 18060000 		.4byte	.LASF12
 1550 0094 02       		.byte	0x2
 1551 0095 E801     		.2byte	0x1e8
 1552 0097 33000000 		.4byte	0x33
 1553 009b 04       		.uleb128 0x4
 1554 009c 7A010000 		.4byte	.LASF13
 1555 00a0 02       		.byte	0x2
 1556 00a1 E901     		.2byte	0x1e9
 1557 00a3 41000000 		.4byte	0x41
 1558 00a7 02       		.uleb128 0x2
 1559 00a8 04       		.byte	0x4
 1560 00a9 04       		.byte	0x4
 1561 00aa 91030000 		.4byte	.LASF14
 1562 00ae 02       		.uleb128 0x2
 1563 00af 08       		.byte	0x8
 1564 00b0 04       		.byte	0x4
 1565 00b1 E6010000 		.4byte	.LASF15
 1566 00b5 02       		.uleb128 0x2
 1567 00b6 01       		.byte	0x1
 1568 00b7 08       		.byte	0x8
 1569 00b8 B3040000 		.4byte	.LASF16
 1570 00bc 02       		.uleb128 0x2
 1571 00bd 08       		.byte	0x8
 1572 00be 04       		.byte	0x4
 1573 00bf 05030000 		.4byte	.LASF17
 1574 00c3 02       		.uleb128 0x2
 1575 00c4 04       		.byte	0x4
 1576 00c5 07       		.byte	0x7
 1577 00c6 FC020000 		.4byte	.LASF18
 1578 00ca 05       		.uleb128 0x5
 1579 00cb FF010000 		.4byte	.LASF19
 1580 00cf 01       		.byte	0x1
 1581 00d0 7D       		.byte	0x7d
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 53


 1582 00d1 00000000 		.4byte	.LFB0
 1583 00d5 48000000 		.4byte	.LFE0-.LFB0
 1584 00d9 01       		.uleb128 0x1
 1585 00da 9C       		.byte	0x9c
 1586 00db EE000000 		.4byte	0xee
 1587 00df 06       		.uleb128 0x6
 1588 00e0 CD020000 		.4byte	.LASF21
 1589 00e4 01       		.byte	0x1
 1590 00e5 7D       		.byte	0x7d
 1591 00e6 6B000000 		.4byte	0x6b
 1592 00ea 02       		.uleb128 0x2
 1593 00eb 91       		.byte	0x91
 1594 00ec 77       		.sleb128 -9
 1595 00ed 00       		.byte	0
 1596 00ee 07       		.uleb128 0x7
 1597 00ef 74000000 		.4byte	.LASF20
 1598 00f3 01       		.byte	0x1
 1599 00f4 C5       		.byte	0xc5
 1600 00f5 00000000 		.4byte	.LFB1
 1601 00f9 2E000000 		.4byte	.LFE1-.LFB1
 1602 00fd 01       		.uleb128 0x1
 1603 00fe 9C       		.byte	0x9c
 1604 00ff 12010000 		.4byte	0x112
 1605 0103 06       		.uleb128 0x6
 1606 0104 CD020000 		.4byte	.LASF21
 1607 0108 01       		.byte	0x1
 1608 0109 C5       		.byte	0xc5
 1609 010a 6B000000 		.4byte	0x6b
 1610 010e 02       		.uleb128 0x2
 1611 010f 91       		.byte	0x91
 1612 0110 77       		.sleb128 -9
 1613 0111 00       		.byte	0
 1614 0112 07       		.uleb128 0x7
 1615 0113 B8030000 		.4byte	.LASF22
 1616 0117 01       		.byte	0x1
 1617 0118 F9       		.byte	0xf9
 1618 0119 00000000 		.4byte	.LFB2
 1619 011d 28000000 		.4byte	.LFE2-.LFB2
 1620 0121 01       		.uleb128 0x1
 1621 0122 9C       		.byte	0x9c
 1622 0123 34010000 		.4byte	0x134
 1623 0127 08       		.uleb128 0x8
 1624 0128 6900     		.ascii	"i\000"
 1625 012a 01       		.byte	0x1
 1626 012b FC       		.byte	0xfc
 1627 012c 6B000000 		.4byte	0x6b
 1628 0130 02       		.uleb128 0x2
 1629 0131 91       		.byte	0x91
 1630 0132 77       		.sleb128 -9
 1631 0133 00       		.byte	0
 1632 0134 09       		.uleb128 0x9
 1633 0135 11030000 		.4byte	.LASF23
 1634 0139 01       		.byte	0x1
 1635 013a 1A01     		.2byte	0x11a
 1636 013c 00000000 		.4byte	.LFB3
 1637 0140 70000000 		.4byte	.LFE3-.LFB3
 1638 0144 01       		.uleb128 0x1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 54


 1639 0145 9C       		.byte	0x9c
 1640 0146 76010000 		.4byte	0x176
 1641 014a 0A       		.uleb128 0xa
 1642 014b 6900     		.ascii	"i\000"
 1643 014d 01       		.byte	0x1
 1644 014e 1D01     		.2byte	0x11d
 1645 0150 6B000000 		.4byte	0x6b
 1646 0154 02       		.uleb128 0x2
 1647 0155 91       		.byte	0x91
 1648 0156 77       		.sleb128 -9
 1649 0157 0A       		.uleb128 0xa
 1650 0158 706F7300 		.ascii	"pos\000"
 1651 015c 01       		.byte	0x1
 1652 015d 1E01     		.2byte	0x11e
 1653 015f 6B000000 		.4byte	0x6b
 1654 0163 02       		.uleb128 0x2
 1655 0164 91       		.byte	0x91
 1656 0165 76       		.sleb128 -10
 1657 0166 0B       		.uleb128 0xb
 1658 0167 53030000 		.4byte	.LASF24
 1659 016b 01       		.byte	0x1
 1660 016c 1F01     		.2byte	0x11f
 1661 016e 6B000000 		.4byte	0x6b
 1662 0172 02       		.uleb128 0x2
 1663 0173 91       		.byte	0x91
 1664 0174 75       		.sleb128 -11
 1665 0175 00       		.byte	0
 1666 0176 09       		.uleb128 0x9
 1667 0177 4D040000 		.4byte	.LASF25
 1668 017b 01       		.byte	0x1
 1669 017c 5D01     		.2byte	0x15d
 1670 017e 00000000 		.4byte	.LFB4
 1671 0182 38010000 		.4byte	.LFE4-.LFB4
 1672 0186 01       		.uleb128 0x1
 1673 0187 9C       		.byte	0x9c
 1674 0188 E7010000 		.4byte	0x1e7
 1675 018c 0C       		.uleb128 0xc
 1676 018d CD020000 		.4byte	.LASF21
 1677 0191 01       		.byte	0x1
 1678 0192 5D01     		.2byte	0x15d
 1679 0194 6B000000 		.4byte	0x6b
 1680 0198 02       		.uleb128 0x2
 1681 0199 91       		.byte	0x91
 1682 019a 67       		.sleb128 -25
 1683 019b 0B       		.uleb128 0xb
 1684 019c EE020000 		.4byte	.LASF26
 1685 01a0 01       		.byte	0x1
 1686 01a1 6001     		.2byte	0x160
 1687 01a3 83000000 		.4byte	0x83
 1688 01a7 02       		.uleb128 0x2
 1689 01a8 91       		.byte	0x91
 1690 01a9 6C       		.sleb128 -20
 1691 01aa 0B       		.uleb128 0xb
 1692 01ab 5A060000 		.4byte	.LASF27
 1693 01af 01       		.byte	0x1
 1694 01b0 6101     		.2byte	0x161
 1695 01b2 77000000 		.4byte	0x77
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 55


 1696 01b6 02       		.uleb128 0x2
 1697 01b7 91       		.byte	0x91
 1698 01b8 76       		.sleb128 -10
 1699 01b9 0B       		.uleb128 0xb
 1700 01ba 54000000 		.4byte	.LASF28
 1701 01be 01       		.byte	0x1
 1702 01bf 6201     		.2byte	0x162
 1703 01c1 77000000 		.4byte	0x77
 1704 01c5 02       		.uleb128 0x2
 1705 01c6 91       		.byte	0x91
 1706 01c7 70       		.sleb128 -16
 1707 01c8 0B       		.uleb128 0xb
 1708 01c9 20040000 		.4byte	.LASF29
 1709 01cd 01       		.byte	0x1
 1710 01ce 6301     		.2byte	0x163
 1711 01d0 6B000000 		.4byte	0x6b
 1712 01d4 02       		.uleb128 0x2
 1713 01d5 91       		.byte	0x91
 1714 01d6 75       		.sleb128 -11
 1715 01d7 0B       		.uleb128 0xb
 1716 01d8 07040000 		.4byte	.LASF30
 1717 01dc 01       		.byte	0x1
 1718 01dd 6401     		.2byte	0x164
 1719 01df 77000000 		.4byte	0x77
 1720 01e3 02       		.uleb128 0x2
 1721 01e4 91       		.byte	0x91
 1722 01e5 72       		.sleb128 -14
 1723 01e6 00       		.byte	0
 1724 01e7 09       		.uleb128 0x9
 1725 01e8 D2040000 		.4byte	.LASF31
 1726 01ec 01       		.byte	0x1
 1727 01ed 0A02     		.2byte	0x20a
 1728 01ef 00000000 		.4byte	.LFB5
 1729 01f3 50000000 		.4byte	.LFE5-.LFB5
 1730 01f7 01       		.uleb128 0x1
 1731 01f8 9C       		.byte	0x9c
 1732 01f9 29020000 		.4byte	0x229
 1733 01fd 0A       		.uleb128 0xa
 1734 01fe 6900     		.ascii	"i\000"
 1735 0200 01       		.byte	0x1
 1736 0201 0D02     		.2byte	0x20d
 1737 0203 6B000000 		.4byte	0x6b
 1738 0207 02       		.uleb128 0x2
 1739 0208 91       		.byte	0x91
 1740 0209 77       		.sleb128 -9
 1741 020a 0A       		.uleb128 0xa
 1742 020b 706F7300 		.ascii	"pos\000"
 1743 020f 01       		.byte	0x1
 1744 0210 0E02     		.2byte	0x20e
 1745 0212 6B000000 		.4byte	0x6b
 1746 0216 02       		.uleb128 0x2
 1747 0217 91       		.byte	0x91
 1748 0218 76       		.sleb128 -10
 1749 0219 0B       		.uleb128 0xb
 1750 021a 53030000 		.4byte	.LASF24
 1751 021e 01       		.byte	0x1
 1752 021f 0F02     		.2byte	0x20f
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 56


 1753 0221 6B000000 		.4byte	0x6b
 1754 0225 02       		.uleb128 0x2
 1755 0226 91       		.byte	0x91
 1756 0227 75       		.sleb128 -11
 1757 0228 00       		.byte	0
 1758 0229 0D       		.uleb128 0xd
 1759 022a 80010000 		.4byte	.LASF37
 1760 022e 01       		.byte	0x1
 1761 022f 4402     		.2byte	0x244
 1762 0231 6B000000 		.4byte	0x6b
 1763 0235 00000000 		.4byte	.LFB6
 1764 0239 FC000000 		.4byte	.LFE6-.LFB6
 1765 023d 01       		.uleb128 0x1
 1766 023e 9C       		.byte	0x9c
 1767 023f BC020000 		.4byte	0x2bc
 1768 0243 0C       		.uleb128 0xc
 1769 0244 CD020000 		.4byte	.LASF21
 1770 0248 01       		.byte	0x1
 1771 0249 4402     		.2byte	0x244
 1772 024b 6B000000 		.4byte	0x6b
 1773 024f 02       		.uleb128 0x2
 1774 0250 91       		.byte	0x91
 1775 0251 67       		.sleb128 -25
 1776 0252 0B       		.uleb128 0xb
 1777 0253 C5050000 		.4byte	.LASF32
 1778 0257 01       		.byte	0x1
 1779 0258 4702     		.2byte	0x247
 1780 025a 6B000000 		.4byte	0x6b
 1781 025e 02       		.uleb128 0x2
 1782 025f 91       		.byte	0x91
 1783 0260 6E       		.sleb128 -18
 1784 0261 0A       		.uleb128 0xa
 1785 0262 706F7300 		.ascii	"pos\000"
 1786 0266 01       		.byte	0x1
 1787 0267 4902     		.2byte	0x249
 1788 0269 6B000000 		.4byte	0x6b
 1789 026d 02       		.uleb128 0x2
 1790 026e 91       		.byte	0x91
 1791 026f 77       		.sleb128 -9
 1792 0270 0B       		.uleb128 0xb
 1793 0271 27040000 		.4byte	.LASF33
 1794 0275 01       		.byte	0x1
 1795 0276 4A02     		.2byte	0x24a
 1796 0278 6B000000 		.4byte	0x6b
 1797 027c 02       		.uleb128 0x2
 1798 027d 91       		.byte	0x91
 1799 027e 76       		.sleb128 -10
 1800 027f 0B       		.uleb128 0xb
 1801 0280 20040000 		.4byte	.LASF29
 1802 0284 01       		.byte	0x1
 1803 0285 4C02     		.2byte	0x24c
 1804 0287 6B000000 		.4byte	0x6b
 1805 028b 02       		.uleb128 0x2
 1806 028c 91       		.byte	0x91
 1807 028d 75       		.sleb128 -11
 1808 028e 0B       		.uleb128 0xb
 1809 028f 64000000 		.4byte	.LASF34
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 57


 1810 0293 01       		.byte	0x1
 1811 0294 4D02     		.2byte	0x24d
 1812 0296 77000000 		.4byte	0x77
 1813 029a 02       		.uleb128 0x2
 1814 029b 91       		.byte	0x91
 1815 029c 72       		.sleb128 -14
 1816 029d 0B       		.uleb128 0xb
 1817 029e F4010000 		.4byte	.LASF35
 1818 02a2 01       		.byte	0x1
 1819 02a3 4E02     		.2byte	0x24e
 1820 02a5 77000000 		.4byte	0x77
 1821 02a9 02       		.uleb128 0x2
 1822 02aa 91       		.byte	0x91
 1823 02ab 70       		.sleb128 -16
 1824 02ac 0B       		.uleb128 0xb
 1825 02ad F3020000 		.4byte	.LASF36
 1826 02b1 01       		.byte	0x1
 1827 02b2 4F02     		.2byte	0x24f
 1828 02b4 6B000000 		.4byte	0x6b
 1829 02b8 02       		.uleb128 0x2
 1830 02b9 91       		.byte	0x91
 1831 02ba 6F       		.sleb128 -17
 1832 02bb 00       		.byte	0
 1833 02bc 0E       		.uleb128 0xe
 1834 02bd F7050000 		.4byte	.LASF38
 1835 02c1 01       		.byte	0x1
 1836 02c2 8D02     		.2byte	0x28d
 1837 02c4 6B000000 		.4byte	0x6b
 1838 02c8 00000000 		.4byte	.LFB7
 1839 02cc 44000000 		.4byte	.LFE7-.LFB7
 1840 02d0 01       		.uleb128 0x1
 1841 02d1 9C       		.byte	0x9c
 1842 02d2 13030000 		.4byte	0x313
 1843 02d6 0C       		.uleb128 0xc
 1844 02d7 20040000 		.4byte	.LASF29
 1845 02db 01       		.byte	0x1
 1846 02dc 8D02     		.2byte	0x28d
 1847 02de 6B000000 		.4byte	0x6b
 1848 02e2 02       		.uleb128 0x2
 1849 02e3 91       		.byte	0x91
 1850 02e4 6F       		.sleb128 -17
 1851 02e5 0B       		.uleb128 0xb
 1852 02e6 61010000 		.4byte	.LASF39
 1853 02ea 01       		.byte	0x1
 1854 02eb 9002     		.2byte	0x290
 1855 02ed 6B000000 		.4byte	0x6b
 1856 02f1 02       		.uleb128 0x2
 1857 02f2 91       		.byte	0x91
 1858 02f3 77       		.sleb128 -9
 1859 02f4 0B       		.uleb128 0xb
 1860 02f5 6A010000 		.4byte	.LASF40
 1861 02f9 01       		.byte	0x1
 1862 02fa 9102     		.2byte	0x291
 1863 02fc 6B000000 		.4byte	0x6b
 1864 0300 02       		.uleb128 0x2
 1865 0301 91       		.byte	0x91
 1866 0302 75       		.sleb128 -11
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 58


 1867 0303 0B       		.uleb128 0xb
 1868 0304 A1010000 		.4byte	.LASF41
 1869 0308 01       		.byte	0x1
 1870 0309 9202     		.2byte	0x292
 1871 030b 6B000000 		.4byte	0x6b
 1872 030f 02       		.uleb128 0x2
 1873 0310 91       		.byte	0x91
 1874 0311 76       		.sleb128 -10
 1875 0312 00       		.byte	0
 1876 0313 0E       		.uleb128 0xe
 1877 0314 D3050000 		.4byte	.LASF42
 1878 0318 01       		.byte	0x1
 1879 0319 B902     		.2byte	0x2b9
 1880 031b 6B000000 		.4byte	0x6b
 1881 031f 00000000 		.4byte	.LFB8
 1882 0323 38000000 		.4byte	.LFE8-.LFB8
 1883 0327 01       		.uleb128 0x1
 1884 0328 9C       		.byte	0x9c
 1885 0329 4A030000 		.4byte	0x34a
 1886 032d 0A       		.uleb128 0xa
 1887 032e 6900     		.ascii	"i\000"
 1888 0330 01       		.byte	0x1
 1889 0331 BC02     		.2byte	0x2bc
 1890 0333 6B000000 		.4byte	0x6b
 1891 0337 02       		.uleb128 0x2
 1892 0338 91       		.byte	0x91
 1893 0339 77       		.sleb128 -9
 1894 033a 0B       		.uleb128 0xb
 1895 033b A1010000 		.4byte	.LASF41
 1896 033f 01       		.byte	0x1
 1897 0340 BD02     		.2byte	0x2bd
 1898 0342 6B000000 		.4byte	0x6b
 1899 0346 02       		.uleb128 0x2
 1900 0347 91       		.byte	0x91
 1901 0348 76       		.sleb128 -10
 1902 0349 00       		.byte	0
 1903 034a 0F       		.uleb128 0xf
 1904 034b B8040000 		.4byte	.LASF43
 1905 034f 01       		.byte	0x1
 1906 0350 E702     		.2byte	0x2e7
 1907 0352 00000000 		.4byte	.LFB9
 1908 0356 58000000 		.4byte	.LFE9-.LFB9
 1909 035a 01       		.uleb128 0x1
 1910 035b 9C       		.byte	0x9c
 1911 035c AC030000 		.4byte	0x3ac
 1912 0360 0C       		.uleb128 0xc
 1913 0361 20040000 		.4byte	.LASF29
 1914 0365 01       		.byte	0x1
 1915 0366 E702     		.2byte	0x2e7
 1916 0368 6B000000 		.4byte	0x6b
 1917 036c 02       		.uleb128 0x2
 1918 036d 91       		.byte	0x91
 1919 036e 6F       		.sleb128 -17
 1920 036f 0A       		.uleb128 0xa
 1921 0370 706F7300 		.ascii	"pos\000"
 1922 0374 01       		.byte	0x1
 1923 0375 EA02     		.2byte	0x2ea
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 59


 1924 0377 6B000000 		.4byte	0x6b
 1925 037b 02       		.uleb128 0x2
 1926 037c 91       		.byte	0x91
 1927 037d 75       		.sleb128 -11
 1928 037e 0B       		.uleb128 0xb
 1929 037f 53030000 		.4byte	.LASF24
 1930 0383 01       		.byte	0x1
 1931 0384 EB02     		.2byte	0x2eb
 1932 0386 6B000000 		.4byte	0x6b
 1933 038a 02       		.uleb128 0x2
 1934 038b 91       		.byte	0x91
 1935 038c 74       		.sleb128 -12
 1936 038d 0B       		.uleb128 0xb
 1937 038e 61010000 		.4byte	.LASF39
 1938 0392 01       		.byte	0x1
 1939 0393 EC02     		.2byte	0x2ec
 1940 0395 6B000000 		.4byte	0x6b
 1941 0399 02       		.uleb128 0x2
 1942 039a 91       		.byte	0x91
 1943 039b 77       		.sleb128 -9
 1944 039c 0B       		.uleb128 0xb
 1945 039d 6A010000 		.4byte	.LASF40
 1946 03a1 01       		.byte	0x1
 1947 03a2 ED02     		.2byte	0x2ed
 1948 03a4 6B000000 		.4byte	0x6b
 1949 03a8 02       		.uleb128 0x2
 1950 03a9 91       		.byte	0x91
 1951 03aa 76       		.sleb128 -10
 1952 03ab 00       		.byte	0
 1953 03ac 0F       		.uleb128 0xf
 1954 03ad 62060000 		.4byte	.LASF44
 1955 03b1 01       		.byte	0x1
 1956 03b2 1903     		.2byte	0x319
 1957 03b4 00000000 		.4byte	.LFB10
 1958 03b8 5C000000 		.4byte	.LFE10-.LFB10
 1959 03bc 01       		.uleb128 0x1
 1960 03bd 9C       		.byte	0x9c
 1961 03be 0E040000 		.4byte	0x40e
 1962 03c2 0C       		.uleb128 0xc
 1963 03c3 20040000 		.4byte	.LASF29
 1964 03c7 01       		.byte	0x1
 1965 03c8 1903     		.2byte	0x319
 1966 03ca 6B000000 		.4byte	0x6b
 1967 03ce 02       		.uleb128 0x2
 1968 03cf 91       		.byte	0x91
 1969 03d0 6F       		.sleb128 -17
 1970 03d1 0A       		.uleb128 0xa
 1971 03d2 706F7300 		.ascii	"pos\000"
 1972 03d6 01       		.byte	0x1
 1973 03d7 1C03     		.2byte	0x31c
 1974 03d9 6B000000 		.4byte	0x6b
 1975 03dd 02       		.uleb128 0x2
 1976 03de 91       		.byte	0x91
 1977 03df 75       		.sleb128 -11
 1978 03e0 0B       		.uleb128 0xb
 1979 03e1 53030000 		.4byte	.LASF24
 1980 03e5 01       		.byte	0x1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 60


 1981 03e6 1D03     		.2byte	0x31d
 1982 03e8 6B000000 		.4byte	0x6b
 1983 03ec 02       		.uleb128 0x2
 1984 03ed 91       		.byte	0x91
 1985 03ee 74       		.sleb128 -12
 1986 03ef 0B       		.uleb128 0xb
 1987 03f0 61010000 		.4byte	.LASF39
 1988 03f4 01       		.byte	0x1
 1989 03f5 1E03     		.2byte	0x31e
 1990 03f7 6B000000 		.4byte	0x6b
 1991 03fb 02       		.uleb128 0x2
 1992 03fc 91       		.byte	0x91
 1993 03fd 77       		.sleb128 -9
 1994 03fe 0B       		.uleb128 0xb
 1995 03ff 6A010000 		.4byte	.LASF40
 1996 0403 01       		.byte	0x1
 1997 0404 1F03     		.2byte	0x31f
 1998 0406 6B000000 		.4byte	0x6b
 1999 040a 02       		.uleb128 0x2
 2000 040b 91       		.byte	0x91
 2001 040c 76       		.sleb128 -10
 2002 040d 00       		.byte	0
 2003 040e 0D       		.uleb128 0xd
 2004 040f 78030000 		.4byte	.LASF45
 2005 0413 01       		.byte	0x1
 2006 0414 4B03     		.2byte	0x34b
 2007 0416 6B000000 		.4byte	0x6b
 2008 041a 00000000 		.4byte	.LFB11
 2009 041e 78000000 		.4byte	.LFE11-.LFB11
 2010 0422 01       		.uleb128 0x1
 2011 0423 9C       		.byte	0x9c
 2012 0424 90040000 		.4byte	0x490
 2013 0428 0C       		.uleb128 0xc
 2014 0429 8C050000 		.4byte	.LASF46
 2015 042d 01       		.byte	0x1
 2016 042e 4B03     		.2byte	0x34b
 2017 0430 6B000000 		.4byte	0x6b
 2018 0434 02       		.uleb128 0x2
 2019 0435 91       		.byte	0x91
 2020 0436 6F       		.sleb128 -17
 2021 0437 0C       		.uleb128 0xc
 2022 0438 2B000000 		.4byte	.LASF47
 2023 043c 01       		.byte	0x1
 2024 043d 4B03     		.2byte	0x34b
 2025 043f 6B000000 		.4byte	0x6b
 2026 0443 02       		.uleb128 0x2
 2027 0444 91       		.byte	0x91
 2028 0445 6E       		.sleb128 -18
 2029 0446 0C       		.uleb128 0xc
 2030 0447 64000000 		.4byte	.LASF34
 2031 044b 01       		.byte	0x1
 2032 044c 4B03     		.2byte	0x34b
 2033 044e 77000000 		.4byte	0x77
 2034 0452 02       		.uleb128 0x2
 2035 0453 91       		.byte	0x91
 2036 0454 6C       		.sleb128 -20
 2037 0455 0A       		.uleb128 0xa
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 61


 2038 0456 6900     		.ascii	"i\000"
 2039 0458 01       		.byte	0x1
 2040 0459 4F03     		.2byte	0x34f
 2041 045b 6B000000 		.4byte	0x6b
 2042 045f 02       		.uleb128 0x2
 2043 0460 91       		.byte	0x91
 2044 0461 77       		.sleb128 -9
 2045 0462 0B       		.uleb128 0xb
 2046 0463 2E040000 		.4byte	.LASF48
 2047 0467 01       		.byte	0x1
 2048 0468 5903     		.2byte	0x359
 2049 046a 6B000000 		.4byte	0x6b
 2050 046e 02       		.uleb128 0x2
 2051 046f 91       		.byte	0x91
 2052 0470 76       		.sleb128 -10
 2053 0471 0B       		.uleb128 0xb
 2054 0472 47020000 		.4byte	.LASF49
 2055 0476 01       		.byte	0x1
 2056 0477 5A03     		.2byte	0x35a
 2057 0479 77000000 		.4byte	0x77
 2058 047d 02       		.uleb128 0x2
 2059 047e 91       		.byte	0x91
 2060 047f 74       		.sleb128 -12
 2061 0480 0B       		.uleb128 0xb
 2062 0481 39020000 		.4byte	.LASF50
 2063 0485 01       		.byte	0x1
 2064 0486 5B03     		.2byte	0x35b
 2065 0488 90040000 		.4byte	0x490
 2066 048c 02       		.uleb128 0x2
 2067 048d 91       		.byte	0x91
 2068 048e 70       		.sleb128 -16
 2069 048f 00       		.byte	0
 2070 0490 10       		.uleb128 0x10
 2071 0491 04       		.byte	0x4
 2072 0492 77000000 		.4byte	0x77
 2073 0496 0D       		.uleb128 0xd
 2074 0497 D4020000 		.4byte	.LASF51
 2075 049b 01       		.byte	0x1
 2076 049c E703     		.2byte	0x3e7
 2077 049e 6B000000 		.4byte	0x6b
 2078 04a2 00000000 		.4byte	.LFB12
 2079 04a6 58010000 		.4byte	.LFE12-.LFB12
 2080 04aa 01       		.uleb128 0x1
 2081 04ab 9C       		.byte	0x9c
 2082 04ac 68050000 		.4byte	0x568
 2083 04b0 0C       		.uleb128 0xc
 2084 04b1 2E040000 		.4byte	.LASF48
 2085 04b5 01       		.byte	0x1
 2086 04b6 E703     		.2byte	0x3e7
 2087 04b8 6B000000 		.4byte	0x6b
 2088 04bc 02       		.uleb128 0x2
 2089 04bd 91       		.byte	0x91
 2090 04be 5F       		.sleb128 -33
 2091 04bf 0C       		.uleb128 0xc
 2092 04c0 8C050000 		.4byte	.LASF46
 2093 04c4 01       		.byte	0x1
 2094 04c5 E703     		.2byte	0x3e7
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 62


 2095 04c7 6B000000 		.4byte	0x6b
 2096 04cb 02       		.uleb128 0x2
 2097 04cc 91       		.byte	0x91
 2098 04cd 5E       		.sleb128 -34
 2099 04ce 0C       		.uleb128 0xc
 2100 04cf 2B000000 		.4byte	.LASF47
 2101 04d3 01       		.byte	0x1
 2102 04d4 E803     		.2byte	0x3e8
 2103 04d6 6B000000 		.4byte	0x6b
 2104 04da 02       		.uleb128 0x2
 2105 04db 91       		.byte	0x91
 2106 04dc 5D       		.sleb128 -35
 2107 04dd 0C       		.uleb128 0xc
 2108 04de 6F040000 		.4byte	.LASF52
 2109 04e2 01       		.byte	0x1
 2110 04e3 E803     		.2byte	0x3e8
 2111 04e5 77000000 		.4byte	0x77
 2112 04e9 02       		.uleb128 0x2
 2113 04ea 91       		.byte	0x91
 2114 04eb 5A       		.sleb128 -38
 2115 04ec 0C       		.uleb128 0xc
 2116 04ed 07040000 		.4byte	.LASF30
 2117 04f1 01       		.byte	0x1
 2118 04f2 E803     		.2byte	0x3e8
 2119 04f4 77000000 		.4byte	0x77
 2120 04f8 02       		.uleb128 0x2
 2121 04f9 91       		.byte	0x91
 2122 04fa 00       		.sleb128 0
 2123 04fb 0B       		.uleb128 0xb
 2124 04fc 28010000 		.4byte	.LASF53
 2125 0500 01       		.byte	0x1
 2126 0501 EC03     		.2byte	0x3ec
 2127 0503 6B000000 		.4byte	0x6b
 2128 0507 02       		.uleb128 0x2
 2129 0508 91       		.byte	0x91
 2130 0509 77       		.sleb128 -9
 2131 050a 0B       		.uleb128 0xb
 2132 050b 15020000 		.4byte	.LASF54
 2133 050f 01       		.byte	0x1
 2134 0510 ED03     		.2byte	0x3ed
 2135 0512 6B000000 		.4byte	0x6b
 2136 0516 02       		.uleb128 0x2
 2137 0517 91       		.byte	0x91
 2138 0518 76       		.sleb128 -10
 2139 0519 0B       		.uleb128 0xb
 2140 051a A4020000 		.4byte	.LASF55
 2141 051e 01       		.byte	0x1
 2142 051f F503     		.2byte	0x3f5
 2143 0521 68050000 		.4byte	0x568
 2144 0525 05       		.uleb128 0x5
 2145 0526 03       		.byte	0x3
 2146 0527 04000000 		.4byte	CapSense_CSD_centroid.5258
 2147 052b 0B       		.uleb128 0xb
 2148 052c 6F020000 		.4byte	.LASF56
 2149 0530 01       		.byte	0x1
 2150 0531 F703     		.2byte	0x3f7
 2151 0533 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 63


 2152 0537 02       		.uleb128 0x2
 2153 0538 91       		.byte	0x91
 2154 0539 67       		.sleb128 -25
 2155 053a 0B       		.uleb128 0xb
 2156 053b B0010000 		.4byte	.LASF57
 2157 053f 01       		.byte	0x1
 2158 0540 F803     		.2byte	0x3f8
 2159 0542 83000000 		.4byte	0x83
 2160 0546 02       		.uleb128 0x2
 2161 0547 91       		.byte	0x91
 2162 0548 6C       		.sleb128 -20
 2163 0549 0B       		.uleb128 0xb
 2164 054a BA010000 		.4byte	.LASF58
 2165 054e 01       		.byte	0x1
 2166 054f F903     		.2byte	0x3f9
 2167 0551 9B000000 		.4byte	0x9b
 2168 0555 02       		.uleb128 0x2
 2169 0556 91       		.byte	0x91
 2170 0557 68       		.sleb128 -24
 2171 0558 0B       		.uleb128 0xb
 2172 0559 39020000 		.4byte	.LASF50
 2173 055d 01       		.byte	0x1
 2174 055e FA03     		.2byte	0x3fa
 2175 0560 90040000 		.4byte	0x490
 2176 0564 02       		.uleb128 0x2
 2177 0565 91       		.byte	0x91
 2178 0566 70       		.sleb128 -16
 2179 0567 00       		.byte	0
 2180 0568 11       		.uleb128 0x11
 2181 0569 77000000 		.4byte	0x77
 2182 056d 78050000 		.4byte	0x578
 2183 0571 12       		.uleb128 0x12
 2184 0572 C3000000 		.4byte	0xc3
 2185 0576 02       		.byte	0x2
 2186 0577 00       		.byte	0
 2187 0578 0E       		.uleb128 0xe
 2188 0579 31000000 		.4byte	.LASF59
 2189 057d 01       		.byte	0x1
 2190 057e B404     		.2byte	0x4b4
 2191 0580 77000000 		.4byte	0x77
 2192 0584 00000000 		.4byte	.LFB13
 2193 0588 52000000 		.4byte	.LFE13-.LFB13
 2194 058c 01       		.uleb128 0x1
 2195 058d 9C       		.byte	0x9c
 2196 058e DE050000 		.4byte	0x5de
 2197 0592 0C       		.uleb128 0xc
 2198 0593 20040000 		.4byte	.LASF29
 2199 0597 01       		.byte	0x1
 2200 0598 B404     		.2byte	0x4b4
 2201 059a 6B000000 		.4byte	0x6b
 2202 059e 02       		.uleb128 0x2
 2203 059f 91       		.byte	0x91
 2204 05a0 67       		.sleb128 -25
 2205 05a1 0B       		.uleb128 0xb
 2206 05a2 2E040000 		.4byte	.LASF48
 2207 05a6 01       		.byte	0x1
 2208 05a7 C704     		.2byte	0x4c7
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 64


 2209 05a9 6B000000 		.4byte	0x6b
 2210 05ad 02       		.uleb128 0x2
 2211 05ae 91       		.byte	0x91
 2212 05af 6B       		.sleb128 -21
 2213 05b0 0B       		.uleb128 0xb
 2214 05b1 6F020000 		.4byte	.LASF56
 2215 05b5 01       		.byte	0x1
 2216 05b6 C804     		.2byte	0x4c8
 2217 05b8 77000000 		.4byte	0x77
 2218 05bc 02       		.uleb128 0x2
 2219 05bd 91       		.byte	0x91
 2220 05be 6E       		.sleb128 -18
 2221 05bf 0B       		.uleb128 0xb
 2222 05c0 8C050000 		.4byte	.LASF46
 2223 05c4 01       		.byte	0x1
 2224 05c5 C904     		.2byte	0x4c9
 2225 05c7 6B000000 		.4byte	0x6b
 2226 05cb 02       		.uleb128 0x2
 2227 05cc 91       		.byte	0x91
 2228 05cd 6D       		.sleb128 -19
 2229 05ce 0B       		.uleb128 0xb
 2230 05cf 2B000000 		.4byte	.LASF47
 2231 05d3 01       		.byte	0x1
 2232 05d4 CA04     		.2byte	0x4ca
 2233 05d6 6B000000 		.4byte	0x6b
 2234 05da 02       		.uleb128 0x2
 2235 05db 91       		.byte	0x91
 2236 05dc 6C       		.sleb128 -20
 2237 05dd 00       		.byte	0
 2238 05de 11       		.uleb128 0x11
 2239 05df 77000000 		.4byte	0x77
 2240 05e3 EE050000 		.4byte	0x5ee
 2241 05e7 12       		.uleb128 0x12
 2242 05e8 C3000000 		.4byte	0xc3
 2243 05ec 04       		.byte	0x4
 2244 05ed 00       		.byte	0
 2245 05ee 13       		.uleb128 0x13
 2246 05ef 36040000 		.4byte	.LASF60
 2247 05f3 03       		.byte	0x3
 2248 05f4 BD02     		.2byte	0x2bd
 2249 05f6 DE050000 		.4byte	0x5de
 2250 05fa 11       		.uleb128 0x11
 2251 05fb 6B000000 		.4byte	0x6b
 2252 05ff 0A060000 		.4byte	0x60a
 2253 0603 12       		.uleb128 0x12
 2254 0604 C3000000 		.4byte	0xc3
 2255 0608 00       		.byte	0
 2256 0609 00       		.byte	0
 2257 060a 13       		.uleb128 0x13
 2258 060b 5A030000 		.4byte	.LASF61
 2259 060f 04       		.byte	0x4
 2260 0610 0301     		.2byte	0x103
 2261 0612 FA050000 		.4byte	0x5fa
 2262 0616 11       		.uleb128 0x11
 2263 0617 26060000 		.4byte	0x626
 2264 061b 26060000 		.4byte	0x626
 2265 061f 12       		.uleb128 0x12
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 65


 2266 0620 C3000000 		.4byte	0xc3
 2267 0624 04       		.byte	0x4
 2268 0625 00       		.byte	0
 2269 0626 14       		.uleb128 0x14
 2270 0627 6B000000 		.4byte	0x6b
 2271 062b 13       		.uleb128 0x13
 2272 062c C6010000 		.4byte	.LASF62
 2273 0630 04       		.byte	0x4
 2274 0631 0401     		.2byte	0x104
 2275 0633 37060000 		.4byte	0x637
 2276 0637 14       		.uleb128 0x14
 2277 0638 16060000 		.4byte	0x616
 2278 063c 15       		.uleb128 0x15
 2279 063d 1D020000 		.4byte	.LASF63
 2280 0641 01       		.byte	0x1
 2281 0642 29       		.byte	0x29
 2282 0643 DE050000 		.4byte	0x5de
 2283 0647 05       		.uleb128 0x5
 2284 0648 03       		.byte	0x3
 2285 0649 00000000 		.4byte	CapSense_CSD_sensorBaseline
 2286 064d 11       		.uleb128 0x11
 2287 064e 6B000000 		.4byte	0x6b
 2288 0652 5D060000 		.4byte	0x65d
 2289 0656 12       		.uleb128 0x12
 2290 0657 C3000000 		.4byte	0xc3
 2291 065b 04       		.byte	0x4
 2292 065c 00       		.byte	0
 2293 065d 15       		.uleb128 0x15
 2294 065e 3B060000 		.4byte	.LASF64
 2295 0662 01       		.byte	0x1
 2296 0663 2A       		.byte	0x2a
 2297 0664 4D060000 		.4byte	0x64d
 2298 0668 05       		.uleb128 0x5
 2299 0669 03       		.byte	0x3
 2300 066a 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 2301 066e 15       		.uleb128 0x15
 2302 066f 8A020000 		.4byte	.LASF65
 2303 0673 01       		.byte	0x1
 2304 0674 2B       		.byte	0x2b
 2305 0675 DE050000 		.4byte	0x5de
 2306 0679 05       		.uleb128 0x5
 2307 067a 03       		.byte	0x3
 2308 067b 00000000 		.4byte	CapSense_CSD_sensorSignal
 2309 067f 15       		.uleb128 0x15
 2310 0680 7D060000 		.4byte	.LASF66
 2311 0684 01       		.byte	0x1
 2312 0685 2C       		.byte	0x2c
 2313 0686 FA050000 		.4byte	0x5fa
 2314 068a 05       		.uleb128 0x5
 2315 068b 03       		.byte	0x3
 2316 068c 00000000 		.4byte	CapSense_CSD_sensorOnMask
 2317 0690 15       		.uleb128 0x15
 2318 0691 97030000 		.4byte	.LASF67
 2319 0695 01       		.byte	0x1
 2320 0696 2E       		.byte	0x2e
 2321 0697 4D060000 		.4byte	0x64d
 2322 069b 05       		.uleb128 0x5
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 66


 2323 069c 03       		.byte	0x3
 2324 069d 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 2325 06a1 11       		.uleb128 0x11
 2326 06a2 B1060000 		.4byte	0x6b1
 2327 06a6 B1060000 		.4byte	0x6b1
 2328 06aa 12       		.uleb128 0x12
 2329 06ab C3000000 		.4byte	0xc3
 2330 06af 00       		.byte	0
 2331 06b0 00       		.byte	0
 2332 06b1 14       		.uleb128 0x14
 2333 06b2 77000000 		.4byte	0x77
 2334 06b6 15       		.uleb128 0x15
 2335 06b7 DC030000 		.4byte	.LASF68
 2336 06bb 01       		.byte	0x1
 2337 06bc 30       		.byte	0x30
 2338 06bd C7060000 		.4byte	0x6c7
 2339 06c1 05       		.uleb128 0x5
 2340 06c2 03       		.byte	0x3
 2341 06c3 00000000 		.4byte	CapSense_CSD_fingerThreshold
 2342 06c7 14       		.uleb128 0x14
 2343 06c8 A1060000 		.4byte	0x6a1
 2344 06cc 15       		.uleb128 0x15
 2345 06cd 97040000 		.4byte	.LASF69
 2346 06d1 01       		.byte	0x1
 2347 06d2 34       		.byte	0x34
 2348 06d3 DD060000 		.4byte	0x6dd
 2349 06d7 05       		.uleb128 0x5
 2350 06d8 03       		.byte	0x3
 2351 06d9 00000000 		.4byte	CapSense_CSD_noiseThreshold
 2352 06dd 14       		.uleb128 0x14
 2353 06de A1060000 		.4byte	0x6a1
 2354 06e2 15       		.uleb128 0x15
 2355 06e3 AD050000 		.4byte	.LASF70
 2356 06e7 01       		.byte	0x1
 2357 06e8 38       		.byte	0x38
 2358 06e9 F3060000 		.4byte	0x6f3
 2359 06ed 05       		.uleb128 0x5
 2360 06ee 03       		.byte	0x3
 2361 06ef 00000000 		.4byte	CapSense_CSD_hysteresis
 2362 06f3 14       		.uleb128 0x14
 2363 06f4 A1060000 		.4byte	0x6a1
 2364 06f8 11       		.uleb128 0x11
 2365 06f9 26060000 		.4byte	0x626
 2366 06fd 08070000 		.4byte	0x708
 2367 0701 12       		.uleb128 0x12
 2368 0702 C3000000 		.4byte	0xc3
 2369 0706 00       		.byte	0
 2370 0707 00       		.byte	0
 2371 0708 15       		.uleb128 0x15
 2372 0709 4C020000 		.4byte	.LASF71
 2373 070d 01       		.byte	0x1
 2374 070e 3C       		.byte	0x3c
 2375 070f 19070000 		.4byte	0x719
 2376 0713 05       		.uleb128 0x5
 2377 0714 03       		.byte	0x3
 2378 0715 00000000 		.4byte	CapSense_CSD_debounce
 2379 0719 14       		.uleb128 0x14
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 67


 2380 071a F8060000 		.4byte	0x6f8
 2381 071e 15       		.uleb128 0x15
 2382 071f 1E060000 		.4byte	.LASF72
 2383 0723 01       		.byte	0x1
 2384 0724 40       		.byte	0x40
 2385 0725 FA050000 		.4byte	0x5fa
 2386 0729 05       		.uleb128 0x5
 2387 072a 03       		.byte	0x3
 2388 072b 00000000 		.4byte	CapSense_CSD_debounceCounter
 2389 072f 15       		.uleb128 0x15
 2390 0730 39030000 		.4byte	.LASF73
 2391 0734 01       		.byte	0x1
 2392 0735 44       		.byte	0x44
 2393 0736 40070000 		.4byte	0x740
 2394 073a 05       		.uleb128 0x5
 2395 073b 03       		.byte	0x3
 2396 073c 00000000 		.4byte	CapSense_CSD_rawDataIndex
 2397 0740 14       		.uleb128 0x14
 2398 0741 F8060000 		.4byte	0x6f8
 2399 0745 15       		.uleb128 0x15
 2400 0746 7A040000 		.4byte	.LASF74
 2401 074a 01       		.byte	0x1
 2402 074b 49       		.byte	0x49
 2403 074c 56070000 		.4byte	0x756
 2404 0750 05       		.uleb128 0x5
 2405 0751 03       		.byte	0x3
 2406 0752 00000000 		.4byte	CapSense_CSD_numberOfSensors
 2407 0756 14       		.uleb128 0x14
 2408 0757 F8060000 		.4byte	0x6f8
 2409 075b 15       		.uleb128 0x15
 2410 075c 93050000 		.4byte	.LASF75
 2411 0760 01       		.byte	0x1
 2412 0761 4E       		.byte	0x4e
 2413 0762 6C070000 		.4byte	0x76c
 2414 0766 05       		.uleb128 0x5
 2415 0767 03       		.byte	0x3
 2416 0768 00000000 		.4byte	CapSense_CSD_centroidMult
 2417 076c 14       		.uleb128 0x14
 2418 076d A1060000 		.4byte	0x6a1
 2419 0771 00       		.byte	0
 2420              		.section	.debug_abbrev,"",%progbits
 2421              	.Ldebug_abbrev0:
 2422 0000 01       		.uleb128 0x1
 2423 0001 11       		.uleb128 0x11
 2424 0002 01       		.byte	0x1
 2425 0003 25       		.uleb128 0x25
 2426 0004 0E       		.uleb128 0xe
 2427 0005 13       		.uleb128 0x13
 2428 0006 0B       		.uleb128 0xb
 2429 0007 03       		.uleb128 0x3
 2430 0008 0E       		.uleb128 0xe
 2431 0009 1B       		.uleb128 0x1b
 2432 000a 0E       		.uleb128 0xe
 2433 000b 55       		.uleb128 0x55
 2434 000c 17       		.uleb128 0x17
 2435 000d 11       		.uleb128 0x11
 2436 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 68


 2437 000f 10       		.uleb128 0x10
 2438 0010 17       		.uleb128 0x17
 2439 0011 00       		.byte	0
 2440 0012 00       		.byte	0
 2441 0013 02       		.uleb128 0x2
 2442 0014 24       		.uleb128 0x24
 2443 0015 00       		.byte	0
 2444 0016 0B       		.uleb128 0xb
 2445 0017 0B       		.uleb128 0xb
 2446 0018 3E       		.uleb128 0x3e
 2447 0019 0B       		.uleb128 0xb
 2448 001a 03       		.uleb128 0x3
 2449 001b 0E       		.uleb128 0xe
 2450 001c 00       		.byte	0
 2451 001d 00       		.byte	0
 2452 001e 03       		.uleb128 0x3
 2453 001f 24       		.uleb128 0x24
 2454 0020 00       		.byte	0
 2455 0021 0B       		.uleb128 0xb
 2456 0022 0B       		.uleb128 0xb
 2457 0023 3E       		.uleb128 0x3e
 2458 0024 0B       		.uleb128 0xb
 2459 0025 03       		.uleb128 0x3
 2460 0026 08       		.uleb128 0x8
 2461 0027 00       		.byte	0
 2462 0028 00       		.byte	0
 2463 0029 04       		.uleb128 0x4
 2464 002a 16       		.uleb128 0x16
 2465 002b 00       		.byte	0
 2466 002c 03       		.uleb128 0x3
 2467 002d 0E       		.uleb128 0xe
 2468 002e 3A       		.uleb128 0x3a
 2469 002f 0B       		.uleb128 0xb
 2470 0030 3B       		.uleb128 0x3b
 2471 0031 05       		.uleb128 0x5
 2472 0032 49       		.uleb128 0x49
 2473 0033 13       		.uleb128 0x13
 2474 0034 00       		.byte	0
 2475 0035 00       		.byte	0
 2476 0036 05       		.uleb128 0x5
 2477 0037 2E       		.uleb128 0x2e
 2478 0038 01       		.byte	0x1
 2479 0039 3F       		.uleb128 0x3f
 2480 003a 19       		.uleb128 0x19
 2481 003b 03       		.uleb128 0x3
 2482 003c 0E       		.uleb128 0xe
 2483 003d 3A       		.uleb128 0x3a
 2484 003e 0B       		.uleb128 0xb
 2485 003f 3B       		.uleb128 0x3b
 2486 0040 0B       		.uleb128 0xb
 2487 0041 27       		.uleb128 0x27
 2488 0042 19       		.uleb128 0x19
 2489 0043 11       		.uleb128 0x11
 2490 0044 01       		.uleb128 0x1
 2491 0045 12       		.uleb128 0x12
 2492 0046 06       		.uleb128 0x6
 2493 0047 40       		.uleb128 0x40
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 69


 2494 0048 18       		.uleb128 0x18
 2495 0049 9742     		.uleb128 0x2117
 2496 004b 19       		.uleb128 0x19
 2497 004c 01       		.uleb128 0x1
 2498 004d 13       		.uleb128 0x13
 2499 004e 00       		.byte	0
 2500 004f 00       		.byte	0
 2501 0050 06       		.uleb128 0x6
 2502 0051 05       		.uleb128 0x5
 2503 0052 00       		.byte	0
 2504 0053 03       		.uleb128 0x3
 2505 0054 0E       		.uleb128 0xe
 2506 0055 3A       		.uleb128 0x3a
 2507 0056 0B       		.uleb128 0xb
 2508 0057 3B       		.uleb128 0x3b
 2509 0058 0B       		.uleb128 0xb
 2510 0059 49       		.uleb128 0x49
 2511 005a 13       		.uleb128 0x13
 2512 005b 02       		.uleb128 0x2
 2513 005c 18       		.uleb128 0x18
 2514 005d 00       		.byte	0
 2515 005e 00       		.byte	0
 2516 005f 07       		.uleb128 0x7
 2517 0060 2E       		.uleb128 0x2e
 2518 0061 01       		.byte	0x1
 2519 0062 3F       		.uleb128 0x3f
 2520 0063 19       		.uleb128 0x19
 2521 0064 03       		.uleb128 0x3
 2522 0065 0E       		.uleb128 0xe
 2523 0066 3A       		.uleb128 0x3a
 2524 0067 0B       		.uleb128 0xb
 2525 0068 3B       		.uleb128 0x3b
 2526 0069 0B       		.uleb128 0xb
 2527 006a 27       		.uleb128 0x27
 2528 006b 19       		.uleb128 0x19
 2529 006c 11       		.uleb128 0x11
 2530 006d 01       		.uleb128 0x1
 2531 006e 12       		.uleb128 0x12
 2532 006f 06       		.uleb128 0x6
 2533 0070 40       		.uleb128 0x40
 2534 0071 18       		.uleb128 0x18
 2535 0072 9642     		.uleb128 0x2116
 2536 0074 19       		.uleb128 0x19
 2537 0075 01       		.uleb128 0x1
 2538 0076 13       		.uleb128 0x13
 2539 0077 00       		.byte	0
 2540 0078 00       		.byte	0
 2541 0079 08       		.uleb128 0x8
 2542 007a 34       		.uleb128 0x34
 2543 007b 00       		.byte	0
 2544 007c 03       		.uleb128 0x3
 2545 007d 08       		.uleb128 0x8
 2546 007e 3A       		.uleb128 0x3a
 2547 007f 0B       		.uleb128 0xb
 2548 0080 3B       		.uleb128 0x3b
 2549 0081 0B       		.uleb128 0xb
 2550 0082 49       		.uleb128 0x49
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 70


 2551 0083 13       		.uleb128 0x13
 2552 0084 02       		.uleb128 0x2
 2553 0085 18       		.uleb128 0x18
 2554 0086 00       		.byte	0
 2555 0087 00       		.byte	0
 2556 0088 09       		.uleb128 0x9
 2557 0089 2E       		.uleb128 0x2e
 2558 008a 01       		.byte	0x1
 2559 008b 3F       		.uleb128 0x3f
 2560 008c 19       		.uleb128 0x19
 2561 008d 03       		.uleb128 0x3
 2562 008e 0E       		.uleb128 0xe
 2563 008f 3A       		.uleb128 0x3a
 2564 0090 0B       		.uleb128 0xb
 2565 0091 3B       		.uleb128 0x3b
 2566 0092 05       		.uleb128 0x5
 2567 0093 27       		.uleb128 0x27
 2568 0094 19       		.uleb128 0x19
 2569 0095 11       		.uleb128 0x11
 2570 0096 01       		.uleb128 0x1
 2571 0097 12       		.uleb128 0x12
 2572 0098 06       		.uleb128 0x6
 2573 0099 40       		.uleb128 0x40
 2574 009a 18       		.uleb128 0x18
 2575 009b 9642     		.uleb128 0x2116
 2576 009d 19       		.uleb128 0x19
 2577 009e 01       		.uleb128 0x1
 2578 009f 13       		.uleb128 0x13
 2579 00a0 00       		.byte	0
 2580 00a1 00       		.byte	0
 2581 00a2 0A       		.uleb128 0xa
 2582 00a3 34       		.uleb128 0x34
 2583 00a4 00       		.byte	0
 2584 00a5 03       		.uleb128 0x3
 2585 00a6 08       		.uleb128 0x8
 2586 00a7 3A       		.uleb128 0x3a
 2587 00a8 0B       		.uleb128 0xb
 2588 00a9 3B       		.uleb128 0x3b
 2589 00aa 05       		.uleb128 0x5
 2590 00ab 49       		.uleb128 0x49
 2591 00ac 13       		.uleb128 0x13
 2592 00ad 02       		.uleb128 0x2
 2593 00ae 18       		.uleb128 0x18
 2594 00af 00       		.byte	0
 2595 00b0 00       		.byte	0
 2596 00b1 0B       		.uleb128 0xb
 2597 00b2 34       		.uleb128 0x34
 2598 00b3 00       		.byte	0
 2599 00b4 03       		.uleb128 0x3
 2600 00b5 0E       		.uleb128 0xe
 2601 00b6 3A       		.uleb128 0x3a
 2602 00b7 0B       		.uleb128 0xb
 2603 00b8 3B       		.uleb128 0x3b
 2604 00b9 05       		.uleb128 0x5
 2605 00ba 49       		.uleb128 0x49
 2606 00bb 13       		.uleb128 0x13
 2607 00bc 02       		.uleb128 0x2
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 71


 2608 00bd 18       		.uleb128 0x18
 2609 00be 00       		.byte	0
 2610 00bf 00       		.byte	0
 2611 00c0 0C       		.uleb128 0xc
 2612 00c1 05       		.uleb128 0x5
 2613 00c2 00       		.byte	0
 2614 00c3 03       		.uleb128 0x3
 2615 00c4 0E       		.uleb128 0xe
 2616 00c5 3A       		.uleb128 0x3a
 2617 00c6 0B       		.uleb128 0xb
 2618 00c7 3B       		.uleb128 0x3b
 2619 00c8 05       		.uleb128 0x5
 2620 00c9 49       		.uleb128 0x49
 2621 00ca 13       		.uleb128 0x13
 2622 00cb 02       		.uleb128 0x2
 2623 00cc 18       		.uleb128 0x18
 2624 00cd 00       		.byte	0
 2625 00ce 00       		.byte	0
 2626 00cf 0D       		.uleb128 0xd
 2627 00d0 2E       		.uleb128 0x2e
 2628 00d1 01       		.byte	0x1
 2629 00d2 3F       		.uleb128 0x3f
 2630 00d3 19       		.uleb128 0x19
 2631 00d4 03       		.uleb128 0x3
 2632 00d5 0E       		.uleb128 0xe
 2633 00d6 3A       		.uleb128 0x3a
 2634 00d7 0B       		.uleb128 0xb
 2635 00d8 3B       		.uleb128 0x3b
 2636 00d9 05       		.uleb128 0x5
 2637 00da 27       		.uleb128 0x27
 2638 00db 19       		.uleb128 0x19
 2639 00dc 49       		.uleb128 0x49
 2640 00dd 13       		.uleb128 0x13
 2641 00de 11       		.uleb128 0x11
 2642 00df 01       		.uleb128 0x1
 2643 00e0 12       		.uleb128 0x12
 2644 00e1 06       		.uleb128 0x6
 2645 00e2 40       		.uleb128 0x40
 2646 00e3 18       		.uleb128 0x18
 2647 00e4 9742     		.uleb128 0x2117
 2648 00e6 19       		.uleb128 0x19
 2649 00e7 01       		.uleb128 0x1
 2650 00e8 13       		.uleb128 0x13
 2651 00e9 00       		.byte	0
 2652 00ea 00       		.byte	0
 2653 00eb 0E       		.uleb128 0xe
 2654 00ec 2E       		.uleb128 0x2e
 2655 00ed 01       		.byte	0x1
 2656 00ee 3F       		.uleb128 0x3f
 2657 00ef 19       		.uleb128 0x19
 2658 00f0 03       		.uleb128 0x3
 2659 00f1 0E       		.uleb128 0xe
 2660 00f2 3A       		.uleb128 0x3a
 2661 00f3 0B       		.uleb128 0xb
 2662 00f4 3B       		.uleb128 0x3b
 2663 00f5 05       		.uleb128 0x5
 2664 00f6 27       		.uleb128 0x27
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 72


 2665 00f7 19       		.uleb128 0x19
 2666 00f8 49       		.uleb128 0x49
 2667 00f9 13       		.uleb128 0x13
 2668 00fa 11       		.uleb128 0x11
 2669 00fb 01       		.uleb128 0x1
 2670 00fc 12       		.uleb128 0x12
 2671 00fd 06       		.uleb128 0x6
 2672 00fe 40       		.uleb128 0x40
 2673 00ff 18       		.uleb128 0x18
 2674 0100 9642     		.uleb128 0x2116
 2675 0102 19       		.uleb128 0x19
 2676 0103 01       		.uleb128 0x1
 2677 0104 13       		.uleb128 0x13
 2678 0105 00       		.byte	0
 2679 0106 00       		.byte	0
 2680 0107 0F       		.uleb128 0xf
 2681 0108 2E       		.uleb128 0x2e
 2682 0109 01       		.byte	0x1
 2683 010a 3F       		.uleb128 0x3f
 2684 010b 19       		.uleb128 0x19
 2685 010c 03       		.uleb128 0x3
 2686 010d 0E       		.uleb128 0xe
 2687 010e 3A       		.uleb128 0x3a
 2688 010f 0B       		.uleb128 0xb
 2689 0110 3B       		.uleb128 0x3b
 2690 0111 05       		.uleb128 0x5
 2691 0112 27       		.uleb128 0x27
 2692 0113 19       		.uleb128 0x19
 2693 0114 11       		.uleb128 0x11
 2694 0115 01       		.uleb128 0x1
 2695 0116 12       		.uleb128 0x12
 2696 0117 06       		.uleb128 0x6
 2697 0118 40       		.uleb128 0x40
 2698 0119 18       		.uleb128 0x18
 2699 011a 9742     		.uleb128 0x2117
 2700 011c 19       		.uleb128 0x19
 2701 011d 01       		.uleb128 0x1
 2702 011e 13       		.uleb128 0x13
 2703 011f 00       		.byte	0
 2704 0120 00       		.byte	0
 2705 0121 10       		.uleb128 0x10
 2706 0122 0F       		.uleb128 0xf
 2707 0123 00       		.byte	0
 2708 0124 0B       		.uleb128 0xb
 2709 0125 0B       		.uleb128 0xb
 2710 0126 49       		.uleb128 0x49
 2711 0127 13       		.uleb128 0x13
 2712 0128 00       		.byte	0
 2713 0129 00       		.byte	0
 2714 012a 11       		.uleb128 0x11
 2715 012b 01       		.uleb128 0x1
 2716 012c 01       		.byte	0x1
 2717 012d 49       		.uleb128 0x49
 2718 012e 13       		.uleb128 0x13
 2719 012f 01       		.uleb128 0x1
 2720 0130 13       		.uleb128 0x13
 2721 0131 00       		.byte	0
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 73


 2722 0132 00       		.byte	0
 2723 0133 12       		.uleb128 0x12
 2724 0134 21       		.uleb128 0x21
 2725 0135 00       		.byte	0
 2726 0136 49       		.uleb128 0x49
 2727 0137 13       		.uleb128 0x13
 2728 0138 2F       		.uleb128 0x2f
 2729 0139 0B       		.uleb128 0xb
 2730 013a 00       		.byte	0
 2731 013b 00       		.byte	0
 2732 013c 13       		.uleb128 0x13
 2733 013d 34       		.uleb128 0x34
 2734 013e 00       		.byte	0
 2735 013f 03       		.uleb128 0x3
 2736 0140 0E       		.uleb128 0xe
 2737 0141 3A       		.uleb128 0x3a
 2738 0142 0B       		.uleb128 0xb
 2739 0143 3B       		.uleb128 0x3b
 2740 0144 05       		.uleb128 0x5
 2741 0145 49       		.uleb128 0x49
 2742 0146 13       		.uleb128 0x13
 2743 0147 3F       		.uleb128 0x3f
 2744 0148 19       		.uleb128 0x19
 2745 0149 3C       		.uleb128 0x3c
 2746 014a 19       		.uleb128 0x19
 2747 014b 00       		.byte	0
 2748 014c 00       		.byte	0
 2749 014d 14       		.uleb128 0x14
 2750 014e 26       		.uleb128 0x26
 2751 014f 00       		.byte	0
 2752 0150 49       		.uleb128 0x49
 2753 0151 13       		.uleb128 0x13
 2754 0152 00       		.byte	0
 2755 0153 00       		.byte	0
 2756 0154 15       		.uleb128 0x15
 2757 0155 34       		.uleb128 0x34
 2758 0156 00       		.byte	0
 2759 0157 03       		.uleb128 0x3
 2760 0158 0E       		.uleb128 0xe
 2761 0159 3A       		.uleb128 0x3a
 2762 015a 0B       		.uleb128 0xb
 2763 015b 3B       		.uleb128 0x3b
 2764 015c 0B       		.uleb128 0xb
 2765 015d 49       		.uleb128 0x49
 2766 015e 13       		.uleb128 0x13
 2767 015f 3F       		.uleb128 0x3f
 2768 0160 19       		.uleb128 0x19
 2769 0161 02       		.uleb128 0x2
 2770 0162 18       		.uleb128 0x18
 2771 0163 00       		.byte	0
 2772 0164 00       		.byte	0
 2773 0165 00       		.byte	0
 2774              		.section	.debug_aranges,"",%progbits
 2775 0000 84000000 		.4byte	0x84
 2776 0004 0200     		.2byte	0x2
 2777 0006 00000000 		.4byte	.Ldebug_info0
 2778 000a 04       		.byte	0x4
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 74


 2779 000b 00       		.byte	0
 2780 000c 0000     		.2byte	0
 2781 000e 0000     		.2byte	0
 2782 0010 00000000 		.4byte	.LFB0
 2783 0014 48000000 		.4byte	.LFE0-.LFB0
 2784 0018 00000000 		.4byte	.LFB1
 2785 001c 2E000000 		.4byte	.LFE1-.LFB1
 2786 0020 00000000 		.4byte	.LFB2
 2787 0024 28000000 		.4byte	.LFE2-.LFB2
 2788 0028 00000000 		.4byte	.LFB3
 2789 002c 70000000 		.4byte	.LFE3-.LFB3
 2790 0030 00000000 		.4byte	.LFB4
 2791 0034 38010000 		.4byte	.LFE4-.LFB4
 2792 0038 00000000 		.4byte	.LFB5
 2793 003c 50000000 		.4byte	.LFE5-.LFB5
 2794 0040 00000000 		.4byte	.LFB6
 2795 0044 FC000000 		.4byte	.LFE6-.LFB6
 2796 0048 00000000 		.4byte	.LFB7
 2797 004c 44000000 		.4byte	.LFE7-.LFB7
 2798 0050 00000000 		.4byte	.LFB8
 2799 0054 38000000 		.4byte	.LFE8-.LFB8
 2800 0058 00000000 		.4byte	.LFB9
 2801 005c 58000000 		.4byte	.LFE9-.LFB9
 2802 0060 00000000 		.4byte	.LFB10
 2803 0064 5C000000 		.4byte	.LFE10-.LFB10
 2804 0068 00000000 		.4byte	.LFB11
 2805 006c 78000000 		.4byte	.LFE11-.LFB11
 2806 0070 00000000 		.4byte	.LFB12
 2807 0074 58010000 		.4byte	.LFE12-.LFB12
 2808 0078 00000000 		.4byte	.LFB13
 2809 007c 52000000 		.4byte	.LFE13-.LFB13
 2810 0080 00000000 		.4byte	0
 2811 0084 00000000 		.4byte	0
 2812              		.section	.debug_ranges,"",%progbits
 2813              	.Ldebug_ranges0:
 2814 0000 00000000 		.4byte	.LFB0
 2815 0004 48000000 		.4byte	.LFE0
 2816 0008 00000000 		.4byte	.LFB1
 2817 000c 2E000000 		.4byte	.LFE1
 2818 0010 00000000 		.4byte	.LFB2
 2819 0014 28000000 		.4byte	.LFE2
 2820 0018 00000000 		.4byte	.LFB3
 2821 001c 70000000 		.4byte	.LFE3
 2822 0020 00000000 		.4byte	.LFB4
 2823 0024 38010000 		.4byte	.LFE4
 2824 0028 00000000 		.4byte	.LFB5
 2825 002c 50000000 		.4byte	.LFE5
 2826 0030 00000000 		.4byte	.LFB6
 2827 0034 FC000000 		.4byte	.LFE6
 2828 0038 00000000 		.4byte	.LFB7
 2829 003c 44000000 		.4byte	.LFE7
 2830 0040 00000000 		.4byte	.LFB8
 2831 0044 38000000 		.4byte	.LFE8
 2832 0048 00000000 		.4byte	.LFB9
 2833 004c 58000000 		.4byte	.LFE9
 2834 0050 00000000 		.4byte	.LFB10
 2835 0054 5C000000 		.4byte	.LFE10
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 75


 2836 0058 00000000 		.4byte	.LFB11
 2837 005c 78000000 		.4byte	.LFE11
 2838 0060 00000000 		.4byte	.LFB12
 2839 0064 58010000 		.4byte	.LFE12
 2840 0068 00000000 		.4byte	.LFB13
 2841 006c 52000000 		.4byte	.LFE13
 2842 0070 00000000 		.4byte	0
 2843 0074 00000000 		.4byte	0
 2844              		.section	.debug_line,"",%progbits
 2845              	.Ldebug_line0:
 2846 0000 CA020000 		.section	.debug_str,"MS",%progbits,1
 2846      02007700 
 2846      00000201 
 2846      FB0E0D00 
 2846      01010101 
 2847              	.LASF77:
 2848 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c\000"
 2848      72617465 
 2848      645F536F 
 2848      75726365 
 2848      5C50536F 
 2849              	.LASF47:
 2850 002b 636F756E 		.ascii	"count\000"
 2850      7400
 2851              	.LASF59:
 2852 0031 43617053 		.ascii	"CapSense_CSD_GetCentroidPos\000"
 2852      656E7365 
 2852      5F435344 
 2852      5F476574 
 2852      43656E74 
 2853              	.LASF10:
 2854 004d 75696E74 		.ascii	"uint16\000"
 2854      313600
 2855              	.LASF28:
 2856 0054 66696C74 		.ascii	"filteredRawData\000"
 2856      65726564 
 2856      52617744 
 2856      61746100 
 2857              	.LASF34:
 2858 0064 66696E67 		.ascii	"fingerThreshold\000"
 2858      65725468 
 2858      72657368 
 2858      6F6C6400 
 2859              	.LASF20:
 2860 0074 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 2860      656E7365 
 2860      5F435344 
 2860      5F496E69 
 2860      7469616C 
 2861              	.LASF76:
 2862 009a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2862      43313120 
 2862      352E342E 
 2862      31203230 
 2862      31363036 
 2863 00cd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2863      20726576 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 76


 2863      6973696F 
 2863      6E203233 
 2863      37373135 
 2864 0100 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2864      66756E63 
 2864      74696F6E 
 2864      2D736563 
 2864      74696F6E 
 2865              	.LASF53:
 2866 0128 706F7350 		.ascii	"posPrev\000"
 2866      72657600 
 2867              	.LASF7:
 2868 0130 6C6F6E67 		.ascii	"long long unsigned int\000"
 2868      206C6F6E 
 2868      6720756E 
 2868      7369676E 
 2868      65642069 
 2869              	.LASF6:
 2870 0147 6C6F6E67 		.ascii	"long long int\000"
 2870      206C6F6E 
 2870      6720696E 
 2870      7400
 2871              	.LASF0:
 2872 0155 7369676E 		.ascii	"signed char\000"
 2872      65642063 
 2872      68617200 
 2873              	.LASF39:
 2874 0161 72617749 		.ascii	"rawIndex\000"
 2874      6E646578 
 2874      00
 2875              	.LASF40:
 2876 016a 6E756D62 		.ascii	"numberOfSensors\000"
 2876      65724F66 
 2876      53656E73 
 2876      6F727300 
 2877              	.LASF13:
 2878 017a 696E7433 		.ascii	"int32\000"
 2878      3200
 2879              	.LASF37:
 2880 0180 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 2880      656E7365 
 2880      5F435344 
 2880      5F436865 
 2880      636B4973 
 2881              	.LASF41:
 2882 01a1 73746174 		.ascii	"state\000"
 2882      6500
 2883              	.LASF4:
 2884 01a7 6C6F6E67 		.ascii	"long int\000"
 2884      20696E74 
 2884      00
 2885              	.LASF57:
 2886 01b0 6E756D65 		.ascii	"numerator\000"
 2886      7261746F 
 2886      7200
 2887              	.LASF58:
 2888 01ba 64656E6F 		.ascii	"denominator\000"
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 77


 2888      6D696E61 
 2888      746F7200 
 2889              	.LASF62:
 2890 01c6 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2890      656E7365 
 2890      5F435344 
 2890      5F776964 
 2890      6765744E 
 2891              	.LASF9:
 2892 01e0 75696E74 		.ascii	"uint8\000"
 2892      3800
 2893              	.LASF15:
 2894 01e6 646F7562 		.ascii	"double\000"
 2894      6C6500
 2895              	.LASF11:
 2896 01ed 75696E74 		.ascii	"uint32\000"
 2896      333200
 2897              	.LASF35:
 2898 01f4 68797374 		.ascii	"hysteresis\000"
 2898      65726573 
 2898      697300
 2899              	.LASF19:
 2900 01ff 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 2900      656E7365 
 2900      5F435344 
 2900      5F426173 
 2900      65496E69 
 2901              	.LASF54:
 2902 0215 706F734E 		.ascii	"posNext\000"
 2902      65787400 
 2903              	.LASF63:
 2904 021d 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 2904      656E7365 
 2904      5F435344 
 2904      5F73656E 
 2904      736F7242 
 2905              	.LASF50:
 2906 0239 73746172 		.ascii	"startOfSlider\000"
 2906      744F6653 
 2906      6C696465 
 2906      7200
 2907              	.LASF49:
 2908 0247 74656D70 		.ascii	"temp\000"
 2908      00
 2909              	.LASF71:
 2910 024c 43617053 		.ascii	"CapSense_CSD_debounce\000"
 2910      656E7365 
 2910      5F435344 
 2910      5F646562 
 2910      6F756E63 
 2911              	.LASF8:
 2912 0262 756E7369 		.ascii	"unsigned int\000"
 2912      676E6564 
 2912      20696E74 
 2912      00
 2913              	.LASF56:
 2914 026f 706F7369 		.ascii	"position\000"
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 78


 2914      74696F6E 
 2914      00
 2915              	.LASF5:
 2916 0278 6C6F6E67 		.ascii	"long unsigned int\000"
 2916      20756E73 
 2916      69676E65 
 2916      6420696E 
 2916      7400
 2917              	.LASF65:
 2918 028a 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 2918      656E7365 
 2918      5F435344 
 2918      5F73656E 
 2918      736F7253 
 2919              	.LASF55:
 2920 02a4 43617053 		.ascii	"CapSense_CSD_centroid\000"
 2920      656E7365 
 2920      5F435344 
 2920      5F63656E 
 2920      74726F69 
 2921              	.LASF3:
 2922 02ba 73686F72 		.ascii	"short unsigned int\000"
 2922      7420756E 
 2922      7369676E 
 2922      65642069 
 2922      6E7400
 2923              	.LASF21:
 2924 02cd 73656E73 		.ascii	"sensor\000"
 2924      6F7200
 2925              	.LASF51:
 2926 02d4 43617053 		.ascii	"CapSense_CSD_CalcCentroid\000"
 2926      656E7365 
 2926      5F435344 
 2926      5F43616C 
 2926      6343656E 
 2927              	.LASF26:
 2928 02ee 63616C63 		.ascii	"calc\000"
 2928      00
 2929              	.LASF36:
 2930 02f3 6465626F 		.ascii	"debounce\000"
 2930      756E6365 
 2930      00
 2931              	.LASF18:
 2932 02fc 73697A65 		.ascii	"sizetype\000"
 2932      74797065 
 2932      00
 2933              	.LASF17:
 2934 0305 6C6F6E67 		.ascii	"long double\000"
 2934      20646F75 
 2934      626C6500 
 2935              	.LASF23:
 2936 0311 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 2936      656E7365 
 2936      5F435344 
 2936      5F496E69 
 2936      7469616C 
 2937              	.LASF73:
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 79


 2938 0339 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 2938      656E7365 
 2938      5F435344 
 2938      5F726177 
 2938      44617461 
 2939              	.LASF24:
 2940 0353 656E4D61 		.ascii	"enMask\000"
 2940      736B00
 2941              	.LASF61:
 2942 035a 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2942      656E7365 
 2942      5F435344 
 2942      5F73656E 
 2942      736F7245 
 2943              	.LASF45:
 2944 0378 43617053 		.ascii	"CapSense_CSD_FindMaximum\000"
 2944      656E7365 
 2944      5F435344 
 2944      5F46696E 
 2944      644D6178 
 2945              	.LASF14:
 2946 0391 666C6F61 		.ascii	"float\000"
 2946      7400
 2947              	.LASF67:
 2948 0397 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 2948      656E7365 
 2948      5F435344 
 2948      5F6C6F77 
 2948      42617365 
 2949              	.LASF22:
 2950 03b8 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 2950      656E7365 
 2950      5F435344 
 2950      5F496E69 
 2950      7469616C 
 2951              	.LASF68:
 2952 03dc 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 2952      656E7365 
 2952      5F435344 
 2952      5F66696E 
 2952      67657254 
 2953              	.LASF1:
 2954 03f9 756E7369 		.ascii	"unsigned char\000"
 2954      676E6564 
 2954      20636861 
 2954      7200
 2955              	.LASF30:
 2956 0407 6E6F6973 		.ascii	"noiseThreshold\000"
 2956      65546872 
 2956      6573686F 
 2956      6C6400
 2957              	.LASF2:
 2958 0416 73686F72 		.ascii	"short int\000"
 2958      7420696E 
 2958      7400
 2959              	.LASF29:
 2960 0420 77696467 		.ascii	"widget\000"
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 80


 2960      657400
 2961              	.LASF33:
 2962 0427 6F6E4D61 		.ascii	"onMask\000"
 2962      736B00
 2963              	.LASF48:
 2964 042e 6D617869 		.ascii	"maximum\000"
 2964      6D756D00 
 2965              	.LASF60:
 2966 0436 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2966      656E7365 
 2966      5F435344 
 2966      5F73656E 
 2966      736F7252 
 2967              	.LASF25:
 2968 044d 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 2968      656E7365 
 2968      5F435344 
 2968      5F557064 
 2968      61746553 
 2969              	.LASF52:
 2970 046f 7265736F 		.ascii	"resolution\000"
 2970      6C757469 
 2970      6F6E00
 2971              	.LASF74:
 2972 047a 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 2972      656E7365 
 2972      5F435344 
 2972      5F6E756D 
 2972      6265724F 
 2973              	.LASF69:
 2974 0497 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 2974      656E7365 
 2974      5F435344 
 2974      5F6E6F69 
 2974      73655468 
 2975              	.LASF16:
 2976 04b3 63686172 		.ascii	"char\000"
 2976      00
 2977              	.LASF43:
 2978 04b8 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 2978      656E7365 
 2978      5F435344 
 2978      5F456E61 
 2978      626C6557 
 2979              	.LASF31:
 2980 04d2 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 2980      656E7365 
 2980      5F435344 
 2980      5F557064 
 2980      61746545 
 2981              	.LASF78:
 2982 04f6 433A5C55 		.ascii	"C:\\Users\\holge\\Dropbox\\AAU - Elektronik og IT\\"
 2982      73657273 
 2982      5C686F6C 
 2982      67655C44 
 2982      726F7062 
 2983 0524 342E2073 		.ascii	"4. semester\\Digital Design\\digital-design\\PSoC\\"
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 81


 2983      656D6573 
 2983      7465725C 
 2983      44696769 
 2983      74616C20 
 2984 0553 63797072 		.ascii	"cypress_PsOC_5LP\\Workspace01\\CapSense_CSD_Design0"
 2984      6573735F 
 2984      50734F43 
 2984      5F354C50 
 2984      5C576F72 
 2985 0584 312E6379 		.ascii	"1.cydsn\000"
 2985      64736E00 
 2986              	.LASF46:
 2987 058c 6F666673 		.ascii	"offset\000"
 2987      657400
 2988              	.LASF75:
 2989 0593 43617053 		.ascii	"CapSense_CSD_centroidMult\000"
 2989      656E7365 
 2989      5F435344 
 2989      5F63656E 
 2989      74726F69 
 2990              	.LASF70:
 2991 05ad 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 2991      656E7365 
 2991      5F435344 
 2991      5F687973 
 2991      74657265 
 2992              	.LASF32:
 2993 05c5 6465626F 		.ascii	"debounceIndex\000"
 2993      756E6365 
 2993      496E6465 
 2993      7800
 2994              	.LASF42:
 2995 05d3 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 2995      656E7365 
 2995      5F435344 
 2995      5F436865 
 2995      636B4973 
 2996              	.LASF38:
 2997 05f7 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 2997      656E7365 
 2997      5F435344 
 2997      5F436865 
 2997      636B4973 
 2998              	.LASF12:
 2999 0618 696E7431 		.ascii	"int16\000"
 2999      3600
 3000              	.LASF72:
 3001 061e 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 3001      656E7365 
 3001      5F435344 
 3001      5F646562 
 3001      6F756E63 
 3002              	.LASF64:
 3003 063b 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 3003      656E7365 
 3003      5F435344 
 3003      5F73656E 
ARM GAS  C:\Users\holge\AppData\Local\Temp\ccfhesHk.s 			page 82


 3003      736F7242 
 3004              	.LASF27:
 3005 065a 74656D70 		.ascii	"tempRaw\000"
 3005      52617700 
 3006              	.LASF44:
 3007 0662 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 3007      656E7365 
 3007      5F435344 
 3007      5F446973 
 3007      61626C65 
 3008              	.LASF66:
 3009 067d 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 3009      656E7365 
 3009      5F435344 
 3009      5F73656E 
 3009      736F724F 
 3010              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
